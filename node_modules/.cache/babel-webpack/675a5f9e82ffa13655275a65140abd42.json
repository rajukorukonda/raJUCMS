{"ast":null,"code":"import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { FuseAnimationCurves, FuseAnimationDurations } from '@fuse/animations/defaults';\n// -----------------------------------------------------------------------------------------------------\n// @ Fade in\n// -----------------------------------------------------------------------------------------------------\nconst fadeIn = trigger('fadeIn', [state('void', style({\n  opacity: 0\n})), state('*', style({\n  opacity: 1\n})),\n// Prevent the transition if the state is false\ntransition('void => false', []),\n// Transition\ntransition('void => *', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n  }\n})]);\n// -----------------------------------------------------------------------------------------------------\n// @ Fade in top\n// -----------------------------------------------------------------------------------------------------\nconst fadeInTop = trigger('fadeInTop', [state('void', style({\n  opacity: 0,\n  transform: 'translate3d(0, -100%, 0)'\n})), state('*', style({\n  opacity: 1,\n  transform: 'translate3d(0, 0, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('void => false', []),\n// Transition\ntransition('void => *', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n  }\n})]);\n// -----------------------------------------------------------------------------------------------------\n// @ Fade in bottom\n// -----------------------------------------------------------------------------------------------------\nconst fadeInBottom = trigger('fadeInBottom', [state('void', style({\n  opacity: 0,\n  transform: 'translate3d(0, 100%, 0)'\n})), state('*', style({\n  opacity: 1,\n  transform: 'translate3d(0, 0, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('void => false', []),\n// Transition\ntransition('void => *', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n  }\n})]);\n// -----------------------------------------------------------------------------------------------------\n// @ Fade in left\n// -----------------------------------------------------------------------------------------------------\nconst fadeInLeft = trigger('fadeInLeft', [state('void', style({\n  opacity: 0,\n  transform: 'translate3d(-100%, 0, 0)'\n})), state('*', style({\n  opacity: 1,\n  transform: 'translate3d(0, 0, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('void => false', []),\n// Transition\ntransition('void => *', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n  }\n})]);\n// -----------------------------------------------------------------------------------------------------\n// @ Fade in right\n// -----------------------------------------------------------------------------------------------------\nconst fadeInRight = trigger('fadeInRight', [state('void', style({\n  opacity: 0,\n  transform: 'translate3d(100%, 0, 0)'\n})), state('*', style({\n  opacity: 1,\n  transform: 'translate3d(0, 0, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('void => false', []),\n// Transition\ntransition('void => *', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n  }\n})]);\n// -----------------------------------------------------------------------------------------------------\n// @ Fade out\n// -----------------------------------------------------------------------------------------------------\nconst fadeOut = trigger('fadeOut', [state('*', style({\n  opacity: 1\n})), state('void', style({\n  opacity: 0\n})),\n// Prevent the transition if the state is false\ntransition('false => void', []),\n// Transition\ntransition('* => void', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\n  }\n})]);\n// -----------------------------------------------------------------------------------------------------\n// @ Fade out top\n// -----------------------------------------------------------------------------------------------------\nconst fadeOutTop = trigger('fadeOutTop', [state('*', style({\n  opacity: 1,\n  transform: 'translate3d(0, 0, 0)'\n})), state('void', style({\n  opacity: 0,\n  transform: 'translate3d(0, -100%, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('false => void', []),\n// Transition\ntransition('* => void', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\n  }\n})]);\n// -----------------------------------------------------------------------------------------------------\n// @ Fade out bottom\n// -----------------------------------------------------------------------------------------------------\nconst fadeOutBottom = trigger('fadeOutBottom', [state('*', style({\n  opacity: 1,\n  transform: 'translate3d(0, 0, 0)'\n})), state('void', style({\n  opacity: 0,\n  transform: 'translate3d(0, 100%, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('false => void', []),\n// Transition\ntransition('* => void', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\n  }\n})]);\n// -----------------------------------------------------------------------------------------------------\n// @ Fade out left\n// -----------------------------------------------------------------------------------------------------\nconst fadeOutLeft = trigger('fadeOutLeft', [state('*', style({\n  opacity: 1,\n  transform: 'translate3d(0, 0, 0)'\n})), state('void', style({\n  opacity: 0,\n  transform: 'translate3d(-100%, 0, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('false => void', []),\n// Transition\ntransition('* => void', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\n  }\n})]);\n// -----------------------------------------------------------------------------------------------------\n// @ Fade out right\n// -----------------------------------------------------------------------------------------------------\nconst fadeOutRight = trigger('fadeOutRight', [state('*', style({\n  opacity: 1,\n  transform: 'translate3d(0, 0, 0)'\n})), state('void', style({\n  opacity: 0,\n  transform: 'translate3d(100%, 0, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('false => void', []),\n// Transition\ntransition('* => void', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\n  }\n})]);\nexport { fadeIn, fadeInTop, fadeInBottom, fadeInLeft, fadeInRight, fadeOut, fadeOutTop, fadeOutBottom, fadeOutLeft, fadeOutRight };","map":null,"metadata":{},"sourceType":"module"}