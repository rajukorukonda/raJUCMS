{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let GeneralService = /*#__PURE__*/(() => {\n  class GeneralService {\n    constructor(http) {\n      this.http = http;\n      this.API_URL = environment.API_URL;\n    }\n    //Global Method to retrieve data \n    GetData(url) {\n      return new Promise((resolve, reject) => {\n        this.http.get('../assets/WebService.json').subscribe(data => {\n          this.urlname = data.Webservice;\n          this.url = this.urlname + url;\n          this.http.get(this.url).subscribe(data => {\n            resolve(data);\n          }, err => {\n            reject(err);\n          });\n        }, err => {\n          reject(err);\n        });\n      });\n    }\n    //Global Method to Post data \n    PostData(url, PostParam) {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      return new Promise((resolve, reject) => {\n        this.http.get('../assets/WebService.json').subscribe(data => {\n          debugger;\n          this.urlname = data.Webservice;\n          url = this.API_URL + url;\n          this.http.post(url, PostParam, {\n            headers: headers\n          }).subscribe(data => {\n            resolve(data);\n          }, err => {\n            reject(err);\n          });\n        }, err => {\n          reject(err);\n        });\n      });\n    }\n    PostData2(url, PostParam, PostParam2) {\n      return new Promise((resolve, reject) => {\n        this.http.get('../assets/WebService.json').subscribe(data => {\n          this.urlname = data.Webservice;\n          url = data.Webservice + url;\n          this.http.post(url, PostParam, PostParam2).subscribe(data => {\n            resolve(data);\n          }, err => {\n            reject(err);\n          });\n        }, err => {\n          reject(err);\n        });\n      });\n    }\n    SoapServicePostData(url, PostParam) {\n      return new Promise((resolve, reject) => {\n        this.http.get('../assets/WebSoapService.json').subscribe(data => {\n          url = data.Webservice + url;\n          // url =url\n          this.http.post(url, PostParam).subscribe(data => {\n            resolve(data);\n          }, err => {\n            reject(err);\n          });\n        }, err => {\n          reject(err);\n        });\n      });\n    }\n    SuccessMessage() {}\n    SoapServiceGetData(url) {\n      return new Promise((resolve, reject) => {\n        this.http.get('../assets/WebSoapService.json').subscribe(data => {\n          this.urlname = data.Webservice;\n          this.url = this.urlname + url;\n          this.http.get(this.url).subscribe(data => {\n            resolve(data);\n          }, err => {\n            reject(err);\n          });\n        }, err => {\n          reject(err);\n        });\n      });\n    }\n  }\n  GeneralService.ɵfac = function GeneralService_Factory(t) {\n    return new (t || GeneralService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  GeneralService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GeneralService,\n    factory: GeneralService.ɵfac,\n    providedIn: 'root'\n  });\n  return GeneralService;\n})();","map":null,"metadata":{},"sourceType":"module"}