{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Pipe, InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, EventEmitter, Component, Input, Output, SecurityContext, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Renderer, marked } from 'marked';\nexport { Renderer as MarkedRenderer } from 'marked';\nimport { map, first } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nimport * as i3 from '@angular/platform-browser';\n\n/* eslint-disable */\nconst _c0 = [\"*\"];\nclass KatexOptions {}\nclass LanguagePipe {\n  transform(value, language) {\n    if (value == null) {\n      value = '';\n    }\n    if (language == null) {\n      language = '';\n    }\n    if (typeof value !== 'string') {\n      console.error(`LanguagePipe has been invoked with an invalid value type [${typeof value}]`);\n      return value;\n    }\n    if (typeof language !== 'string') {\n      console.error(`LanguagePipe has been invoked with an invalid parameter [${typeof language}]`);\n      return value;\n    }\n    return '```' + language + '\\n' + value + '\\n```';\n  }\n}\nLanguagePipe.ɵfac = function LanguagePipe_Factory(t) {\n  return new (t || LanguagePipe)();\n};\nLanguagePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"language\",\n  type: LanguagePipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LanguagePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'language'\n    }]\n  }], null, null);\n})();\nvar PrismPlugin;\n(function (PrismPlugin) {\n  PrismPlugin[\"LineHighlight\"] = \"line-highlight\";\n  PrismPlugin[\"LineNumbers\"] = \"line-numbers\";\n})(PrismPlugin || (PrismPlugin = {}));\nclass MarkedOptions {}\n\n/* eslint-disable max-len */\nconst errorJoyPixelsNotLoaded = '[ngx-markdown] When using the `emoji` attribute you *have to* include Emoji-Toolkit files to `angular.json` or use imports. See README for more information';\nconst errorKatexNotLoaded = '[ngx-markdown] When using the `katex` attribute you *have to* include KaTeX files to `angular.json` or use imports. See README for more information';\nconst errorSrcWithoutHttpClient = '[ngx-markdown] When using the `src` attribute you *have to* pass the `HttpClient` as a parameter of the `forRoot` method. See README for more information';\n/* eslint-enable max-len */\nconst SECURITY_CONTEXT = new InjectionToken('SECURITY_CONTEXT');\nclass MarkdownService {\n  constructor(platform, securityContext, http, options, sanitizer) {\n    this.platform = platform;\n    this.securityContext = securityContext;\n    this.http = http;\n    this.sanitizer = sanitizer;\n    this.initialMarkedOptions = {\n      renderer: new Renderer()\n    };\n    this.options = options;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(value) {\n    this._options = Object.assign(Object.assign({}, this.initialMarkedOptions), value);\n  }\n  get renderer() {\n    return this.options.renderer;\n  }\n  set renderer(value) {\n    this.options.renderer = value;\n  }\n  compile(markdown, decodeHtml = false, emojify = false, markedOptions = this.options) {\n    const trimmed = this.trimIndentation(markdown);\n    const decoded = decodeHtml ? this.decodeHtml(trimmed) : trimmed;\n    const emojified = emojify ? this.renderEmoji(decoded) : decoded;\n    const compiled = marked(emojified, markedOptions);\n    return this.sanitizer.sanitize(this.securityContext, compiled) || '';\n  }\n  getSource(src) {\n    if (!this.http) {\n      throw new Error(errorSrcWithoutHttpClient);\n    }\n    return this.http.get(src, {\n      responseType: 'text'\n    }).pipe(map(markdown => this.handleExtension(src, markdown)));\n  }\n  highlight(element) {\n    if (!isPlatformBrowser(this.platform)) {\n      return;\n    }\n    if (typeof Prism !== 'undefined') {\n      if (!element) {\n        element = document;\n      }\n      const noLanguageElements = element.querySelectorAll('pre code:not([class*=\"language-\"])');\n      Array.prototype.forEach.call(noLanguageElements, x => x.classList.add('language-none'));\n      Prism.highlightAllUnder(element);\n    }\n  }\n  renderKatex(html, options) {\n    if (!isPlatformBrowser(this.platform)) {\n      return html;\n    }\n    if (typeof katex === 'undefined' || typeof katex.renderToString === 'undefined') {\n      throw new Error(errorKatexNotLoaded);\n    }\n    return html.replace(/\\$([^\\s][^$]*?[^\\s])\\$/gm, (_, tex) => katex.renderToString(tex, options));\n  }\n  decodeHtml(html) {\n    if (!isPlatformBrowser(this.platform)) {\n      return html;\n    }\n    const textarea = document.createElement('textarea');\n    textarea.innerHTML = html;\n    return textarea.value;\n  }\n  handleExtension(src, markdown) {\n    const extension = src ? src.split('?')[0].split('.').splice(-1).join() : '';\n    return extension !== 'md' ? '```' + extension + '\\n' + markdown + '\\n```' : markdown;\n  }\n  renderEmoji(html) {\n    if (!isPlatformBrowser(this.platform)) {\n      return html;\n    }\n    if (typeof joypixels === 'undefined' || typeof joypixels.shortnameToUnicode === 'undefined') {\n      throw new Error(errorJoyPixelsNotLoaded);\n    }\n    return joypixels.shortnameToUnicode(html);\n  }\n  trimIndentation(markdown) {\n    if (!markdown) {\n      return '';\n    }\n    let indentStart;\n    return markdown.split('\\n').map(line => {\n      let lineIdentStart = indentStart;\n      if (line.length > 0) {\n        lineIdentStart = isNaN(lineIdentStart) ? line.search(/\\S|$/) : Math.min(line.search(/\\S|$/), lineIdentStart);\n      }\n      if (isNaN(indentStart)) {\n        indentStart = lineIdentStart;\n      }\n      return lineIdentStart ? line.substring(lineIdentStart) : line;\n    }).join('\\n');\n  }\n}\nMarkdownService.ɵfac = function MarkdownService_Factory(t) {\n  return new (t || MarkdownService)(i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(SECURITY_CONTEXT), i0.ɵɵinject(i1.HttpClient, 8), i0.ɵɵinject(MarkedOptions, 8), i0.ɵɵinject(i3.DomSanitizer));\n};\nMarkdownService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MarkdownService,\n  factory: MarkdownService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MarkdownService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.SecurityContext,\n      decorators: [{\n        type: Inject,\n        args: [SECURITY_CONTEXT]\n      }]\n    }, {\n      type: i1.HttpClient,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: MarkedOptions,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i3.DomSanitizer\n    }];\n  }, null);\n})();\nclass MarkdownComponent {\n  constructor(element, markdownService) {\n    this.element = element;\n    this.markdownService = markdownService;\n    // Event emitters\n    this.error = new EventEmitter();\n    this.load = new EventEmitter();\n    this.ready = new EventEmitter();\n    this._emoji = false;\n    this._katex = false;\n    this._lineHighlight = false;\n    this._lineNumbers = false;\n  }\n  // Plugin - emoji\n  get emoji() {\n    return this._emoji;\n  }\n  set emoji(value) {\n    this._emoji = this.coerceBooleanProperty(value);\n  }\n  // Plugin - katex\n  get katex() {\n    return this._katex;\n  }\n  set katex(value) {\n    this._katex = this.coerceBooleanProperty(value);\n  }\n  // Plugin - lineHighlight\n  get lineHighlight() {\n    return this._lineHighlight;\n  }\n  set lineHighlight(value) {\n    this._lineHighlight = this.coerceBooleanProperty(value);\n  }\n  // Plugin - lineNumbers\n  get lineNumbers() {\n    return this._lineNumbers;\n  }\n  set lineNumbers(value) {\n    this._lineNumbers = this.coerceBooleanProperty(value);\n  }\n  ngOnChanges() {\n    if (this.data != null) {\n      this.handleData();\n      return;\n    }\n    if (this.src != null) {\n      this.handleSrc();\n      return;\n    }\n  }\n  ngAfterViewInit() {\n    if (!this.data && !this.src) {\n      this.handleTransclusion();\n    }\n  }\n  render(markdown, decodeHtml = false) {\n    let compiled = this.markdownService.compile(markdown, decodeHtml, this.emoji);\n    compiled = this.katex ? this.markdownService.renderKatex(compiled, this.katexOptions) : compiled;\n    this.element.nativeElement.innerHTML = compiled;\n    this.handlePlugins();\n    this.markdownService.highlight(this.element.nativeElement);\n    this.ready.emit();\n  }\n  coerceBooleanProperty(value) {\n    return value != null && `${String(value)}` !== 'false';\n  }\n  handleData() {\n    this.render(this.data);\n  }\n  handleSrc() {\n    this.markdownService.getSource(this.src).subscribe(markdown => {\n      this.render(markdown);\n      this.load.emit(markdown);\n    }, error => this.error.emit(error));\n  }\n  handleTransclusion() {\n    this.render(this.element.nativeElement.innerHTML, true);\n  }\n  handlePlugins() {\n    if (this.lineHighlight) {\n      this.setPluginOptions(this.element.nativeElement, {\n        dataLine: this.line,\n        dataLineOffset: this.lineOffset\n      });\n    }\n    if (this.lineNumbers) {\n      this.setPluginClass(this.element.nativeElement, PrismPlugin.LineNumbers);\n      this.setPluginOptions(this.element.nativeElement, {\n        dataStart: this.start\n      });\n    }\n  }\n  setPluginClass(element, plugin) {\n    const preElements = element.querySelectorAll('pre');\n    for (let i = 0; i < preElements.length; i++) {\n      const classes = plugin instanceof Array ? plugin : [plugin];\n      preElements.item(i).classList.add(...classes);\n    }\n  }\n  setPluginOptions(element, options) {\n    const preElements = element.querySelectorAll('pre');\n    for (let i = 0; i < preElements.length; i++) {\n      Object.keys(options).forEach(option => {\n        const attributeValue = options[option];\n        if (attributeValue) {\n          const attributeName = this.toLispCase(option);\n          preElements.item(i).setAttribute(attributeName, attributeValue.toString());\n        }\n      });\n    }\n  }\n  toLispCase(value) {\n    const upperChars = value.match(/([A-Z])/g);\n    if (!upperChars) {\n      return value;\n    }\n    let str = value.toString();\n    for (let i = 0, n = upperChars.length; i < n; i++) {\n      str = str.replace(new RegExp(upperChars[i]), '-' + upperChars[i].toLowerCase());\n    }\n    if (str.slice(0, 1) === '-') {\n      str = str.slice(1);\n    }\n    return str;\n  }\n}\nMarkdownComponent.ɵfac = function MarkdownComponent_Factory(t) {\n  return new (t || MarkdownComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MarkdownService));\n};\nMarkdownComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MarkdownComponent,\n  selectors: [[\"markdown\"], [\"\", \"markdown\", \"\"]],\n  inputs: {\n    data: \"data\",\n    src: \"src\",\n    emoji: \"emoji\",\n    katex: \"katex\",\n    katexOptions: \"katexOptions\",\n    lineHighlight: \"lineHighlight\",\n    line: \"line\",\n    lineOffset: \"lineOffset\",\n    lineNumbers: \"lineNumbers\",\n    start: \"start\"\n  },\n  outputs: {\n    error: \"error\",\n    load: \"load\",\n    ready: \"ready\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MarkdownComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MarkdownComponent, [{\n    type: Component,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/component-selector\n      selector: 'markdown, [markdown]',\n      template: '<ng-content></ng-content>'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: MarkdownService\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    src: [{\n      type: Input\n    }],\n    emoji: [{\n      type: Input\n    }],\n    katex: [{\n      type: Input\n    }],\n    katexOptions: [{\n      type: Input\n    }],\n    lineHighlight: [{\n      type: Input\n    }],\n    line: [{\n      type: Input\n    }],\n    lineOffset: [{\n      type: Input\n    }],\n    lineNumbers: [{\n      type: Input\n    }],\n    start: [{\n      type: Input\n    }],\n    error: [{\n      type: Output\n    }],\n    load: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }]\n  });\n})();\nclass MarkdownPipe {\n  constructor(elementRef, markdownService, zone) {\n    this.elementRef = elementRef;\n    this.markdownService = markdownService;\n    this.zone = zone;\n  }\n  transform(value) {\n    if (value == null) {\n      return '';\n    }\n    if (typeof value !== 'string') {\n      console.error(`MarkdownPipe has been invoked with an invalid value type [${typeof value}]`);\n      return value;\n    }\n    const markdown = this.markdownService.compile(value);\n    this.zone.onStable.pipe(first()).subscribe(() => this.markdownService.highlight(this.elementRef.nativeElement));\n    return markdown;\n  }\n}\nMarkdownPipe.ɵfac = function MarkdownPipe_Factory(t) {\n  return new (t || MarkdownPipe)(i0.ɵɵdirectiveInject(i0.ElementRef, 16), i0.ɵɵdirectiveInject(MarkdownService, 16), i0.ɵɵdirectiveInject(i0.NgZone, 16));\n};\nMarkdownPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"markdown\",\n  type: MarkdownPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MarkdownPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'markdown'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: MarkdownService\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})();\nconst sharedDeclarations = [LanguagePipe, MarkdownComponent, MarkdownPipe];\nclass MarkdownModule {\n  static forRoot(markdownModuleConfig) {\n    return {\n      ngModule: MarkdownModule,\n      providers: [MarkdownService, markdownModuleConfig && markdownModuleConfig.loader || [], markdownModuleConfig && markdownModuleConfig.markedOptions || [], {\n        provide: SECURITY_CONTEXT,\n        useValue: markdownModuleConfig && markdownModuleConfig.sanitize != null ? markdownModuleConfig.sanitize : SecurityContext.HTML\n      }]\n    };\n  }\n  static forChild() {\n    return {\n      ngModule: MarkdownModule\n    };\n  }\n}\nMarkdownModule.ɵfac = function MarkdownModule_Factory(t) {\n  return new (t || MarkdownModule)();\n};\nMarkdownModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MarkdownModule\n});\nMarkdownModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MarkdownModule, [{\n    type: NgModule,\n    args: [{\n      exports: sharedDeclarations,\n      declarations: sharedDeclarations\n    }]\n  }], null, null);\n})();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { KatexOptions, LanguagePipe, MarkdownComponent, MarkdownModule, MarkdownPipe, MarkdownService, MarkedOptions, PrismPlugin, SECURITY_CONTEXT, errorJoyPixelsNotLoaded, errorKatexNotLoaded, errorSrcWithoutHttpClient };","map":{"version":3,"names":["i0","Pipe","InjectionToken","PLATFORM_ID","Injectable","Inject","Optional","EventEmitter","Component","Input","Output","SecurityContext","NgModule","isPlatformBrowser","Renderer","marked","MarkedRenderer","map","first","i1","i3","KatexOptions","LanguagePipe","transform","value","language","console","error","ɵfac","ɵpipe","type","args","name","PrismPlugin","MarkedOptions","errorJoyPixelsNotLoaded","errorKatexNotLoaded","errorSrcWithoutHttpClient","SECURITY_CONTEXT","MarkdownService","constructor","platform","securityContext","http","options","sanitizer","initialMarkedOptions","renderer","_options","Object","assign","compile","markdown","decodeHtml","emojify","markedOptions","trimmed","trimIndentation","decoded","emojified","renderEmoji","compiled","sanitize","getSource","src","Error","get","responseType","pipe","handleExtension","highlight","element","Prism","document","noLanguageElements","querySelectorAll","Array","prototype","forEach","call","x","classList","add","highlightAllUnder","renderKatex","html","katex","renderToString","replace","_","tex","textarea","createElement","innerHTML","extension","split","splice","join","joypixels","shortnameToUnicode","indentStart","line","lineIdentStart","length","isNaN","search","Math","min","substring","HttpClient","DomSanitizer","ɵprov","decorators","MarkdownComponent","markdownService","load","ready","_emoji","_katex","_lineHighlight","_lineNumbers","emoji","coerceBooleanProperty","lineHighlight","lineNumbers","ngOnChanges","data","handleData","handleSrc","ngAfterViewInit","handleTransclusion","render","katexOptions","nativeElement","handlePlugins","emit","String","subscribe","setPluginOptions","dataLine","dataLineOffset","lineOffset","setPluginClass","LineNumbers","dataStart","start","plugin","preElements","i","classes","item","keys","option","attributeValue","attributeName","toLispCase","setAttribute","toString","upperChars","match","str","n","RegExp","toLowerCase","slice","ElementRef","ɵcmp","selector","template","MarkdownPipe","elementRef","zone","onStable","NgZone","sharedDeclarations","MarkdownModule","forRoot","markdownModuleConfig","ngModule","providers","loader","provide","useValue","HTML","forChild","ɵmod","ɵinj","exports","declarations"],"sources":["D:/CMS_Ui/node_modules/ngx-markdown/fesm2015/ngx-markdown.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Pipe, InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, EventEmitter, Component, Input, Output, SecurityContext, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Renderer, marked } from 'marked';\nexport { Renderer as MarkedRenderer } from 'marked';\nimport { map, first } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nimport * as i3 from '@angular/platform-browser';\n\n/* eslint-disable */\r\nclass KatexOptions {\r\n}\n\nclass LanguagePipe {\r\n    transform(value, language) {\r\n        if (value == null) {\r\n            value = '';\r\n        }\r\n        if (language == null) {\r\n            language = '';\r\n        }\r\n        if (typeof value !== 'string') {\r\n            console.error(`LanguagePipe has been invoked with an invalid value type [${typeof value}]`);\r\n            return value;\r\n        }\r\n        if (typeof language !== 'string') {\r\n            console.error(`LanguagePipe has been invoked with an invalid parameter [${typeof language}]`);\r\n            return value;\r\n        }\r\n        return '```' + language + '\\n' + value + '\\n```';\r\n    }\r\n}\r\nLanguagePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: LanguagePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\r\nLanguagePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: LanguagePipe, name: \"language\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: LanguagePipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'language',\r\n                }]\r\n        }] });\n\nvar PrismPlugin;\r\n(function (PrismPlugin) {\r\n    PrismPlugin[\"LineHighlight\"] = \"line-highlight\";\r\n    PrismPlugin[\"LineNumbers\"] = \"line-numbers\";\r\n})(PrismPlugin || (PrismPlugin = {}));\n\nclass MarkedOptions {\r\n}\n\n/* eslint-disable max-len */\r\nconst errorJoyPixelsNotLoaded = '[ngx-markdown] When using the `emoji` attribute you *have to* include Emoji-Toolkit files to `angular.json` or use imports. See README for more information';\r\nconst errorKatexNotLoaded = '[ngx-markdown] When using the `katex` attribute you *have to* include KaTeX files to `angular.json` or use imports. See README for more information';\r\nconst errorSrcWithoutHttpClient = '[ngx-markdown] When using the `src` attribute you *have to* pass the `HttpClient` as a parameter of the `forRoot` method. See README for more information';\r\n/* eslint-enable max-len */\r\nconst SECURITY_CONTEXT = new InjectionToken('SECURITY_CONTEXT');\r\nclass MarkdownService {\r\n    constructor(platform, securityContext, http, options, sanitizer) {\r\n        this.platform = platform;\r\n        this.securityContext = securityContext;\r\n        this.http = http;\r\n        this.sanitizer = sanitizer;\r\n        this.initialMarkedOptions = {\r\n            renderer: new Renderer(),\r\n        };\r\n        this.options = options;\r\n    }\r\n    get options() { return this._options; }\r\n    set options(value) {\r\n        this._options = Object.assign(Object.assign({}, this.initialMarkedOptions), value);\r\n    }\r\n    get renderer() { return this.options.renderer; }\r\n    set renderer(value) {\r\n        this.options.renderer = value;\r\n    }\r\n    compile(markdown, decodeHtml = false, emojify = false, markedOptions = this.options) {\r\n        const trimmed = this.trimIndentation(markdown);\r\n        const decoded = decodeHtml ? this.decodeHtml(trimmed) : trimmed;\r\n        const emojified = emojify ? this.renderEmoji(decoded) : decoded;\r\n        const compiled = marked(emojified, markedOptions);\r\n        return this.sanitizer.sanitize(this.securityContext, compiled) || '';\r\n    }\r\n    getSource(src) {\r\n        if (!this.http) {\r\n            throw new Error(errorSrcWithoutHttpClient);\r\n        }\r\n        return this.http\r\n            .get(src, { responseType: 'text' })\r\n            .pipe(map(markdown => this.handleExtension(src, markdown)));\r\n    }\r\n    highlight(element) {\r\n        if (!isPlatformBrowser(this.platform)) {\r\n            return;\r\n        }\r\n        if (typeof Prism !== 'undefined') {\r\n            if (!element) {\r\n                element = document;\r\n            }\r\n            const noLanguageElements = element.querySelectorAll('pre code:not([class*=\"language-\"])');\r\n            Array.prototype.forEach.call(noLanguageElements, (x) => x.classList.add('language-none'));\r\n            Prism.highlightAllUnder(element);\r\n        }\r\n    }\r\n    renderKatex(html, options) {\r\n        if (!isPlatformBrowser(this.platform)) {\r\n            return html;\r\n        }\r\n        if (typeof katex === 'undefined' || typeof katex.renderToString === 'undefined') {\r\n            throw new Error(errorKatexNotLoaded);\r\n        }\r\n        return html.replace(/\\$([^\\s][^$]*?[^\\s])\\$/gm, (_, tex) => katex.renderToString(tex, options));\r\n    }\r\n    decodeHtml(html) {\r\n        if (!isPlatformBrowser(this.platform)) {\r\n            return html;\r\n        }\r\n        const textarea = document.createElement('textarea');\r\n        textarea.innerHTML = html;\r\n        return textarea.value;\r\n    }\r\n    handleExtension(src, markdown) {\r\n        const extension = src\r\n            ? src.split('?')[0].split('.').splice(-1).join()\r\n            : '';\r\n        return extension !== 'md'\r\n            ? '```' + extension + '\\n' + markdown + '\\n```'\r\n            : markdown;\r\n    }\r\n    renderEmoji(html) {\r\n        if (!isPlatformBrowser(this.platform)) {\r\n            return html;\r\n        }\r\n        if (typeof joypixels === 'undefined' || typeof joypixels.shortnameToUnicode === 'undefined') {\r\n            throw new Error(errorJoyPixelsNotLoaded);\r\n        }\r\n        return joypixels.shortnameToUnicode(html);\r\n    }\r\n    trimIndentation(markdown) {\r\n        if (!markdown) {\r\n            return '';\r\n        }\r\n        let indentStart;\r\n        return markdown\r\n            .split('\\n')\r\n            .map(line => {\r\n            let lineIdentStart = indentStart;\r\n            if (line.length > 0) {\r\n                lineIdentStart = isNaN(lineIdentStart)\r\n                    ? line.search(/\\S|$/)\r\n                    : Math.min(line.search(/\\S|$/), lineIdentStart);\r\n            }\r\n            if (isNaN(indentStart)) {\r\n                indentStart = lineIdentStart;\r\n            }\r\n            return lineIdentStart\r\n                ? line.substring(lineIdentStart)\r\n                : line;\r\n        }).join('\\n');\r\n    }\r\n}\r\nMarkdownService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: MarkdownService, deps: [{ token: PLATFORM_ID }, { token: SECURITY_CONTEXT }, { token: i1.HttpClient, optional: true }, { token: MarkedOptions, optional: true }, { token: i3.DomSanitizer }], target: i0.ɵɵFactoryTarget.Injectable });\r\nMarkdownService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: MarkdownService });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: MarkdownService, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: Object, decorators: [{\r\n                    type: Inject,\r\n                    args: [PLATFORM_ID]\r\n                }] }, { type: i0.SecurityContext, decorators: [{\r\n                    type: Inject,\r\n                    args: [SECURITY_CONTEXT]\r\n                }] }, { type: i1.HttpClient, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: MarkedOptions, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: i3.DomSanitizer }]; } });\n\nclass MarkdownComponent {\r\n    constructor(element, markdownService) {\r\n        this.element = element;\r\n        this.markdownService = markdownService;\r\n        // Event emitters\r\n        this.error = new EventEmitter();\r\n        this.load = new EventEmitter();\r\n        this.ready = new EventEmitter();\r\n        this._emoji = false;\r\n        this._katex = false;\r\n        this._lineHighlight = false;\r\n        this._lineNumbers = false;\r\n    }\r\n    // Plugin - emoji\r\n    get emoji() { return this._emoji; }\r\n    set emoji(value) { this._emoji = this.coerceBooleanProperty(value); }\r\n    // Plugin - katex\r\n    get katex() { return this._katex; }\r\n    set katex(value) { this._katex = this.coerceBooleanProperty(value); }\r\n    // Plugin - lineHighlight\r\n    get lineHighlight() { return this._lineHighlight; }\r\n    set lineHighlight(value) { this._lineHighlight = this.coerceBooleanProperty(value); }\r\n    // Plugin - lineNumbers\r\n    get lineNumbers() { return this._lineNumbers; }\r\n    set lineNumbers(value) { this._lineNumbers = this.coerceBooleanProperty(value); }\r\n    ngOnChanges() {\r\n        if (this.data != null) {\r\n            this.handleData();\r\n            return;\r\n        }\r\n        if (this.src != null) {\r\n            this.handleSrc();\r\n            return;\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        if (!this.data && !this.src) {\r\n            this.handleTransclusion();\r\n        }\r\n    }\r\n    render(markdown, decodeHtml = false) {\r\n        let compiled = this.markdownService.compile(markdown, decodeHtml, this.emoji);\r\n        compiled = this.katex ? this.markdownService.renderKatex(compiled, this.katexOptions) : compiled;\r\n        this.element.nativeElement.innerHTML = compiled;\r\n        this.handlePlugins();\r\n        this.markdownService.highlight(this.element.nativeElement);\r\n        this.ready.emit();\r\n    }\r\n    coerceBooleanProperty(value) {\r\n        return value != null && `${String(value)}` !== 'false';\r\n    }\r\n    handleData() {\r\n        this.render(this.data);\r\n    }\r\n    handleSrc() {\r\n        this.markdownService\r\n            .getSource(this.src)\r\n            .subscribe(markdown => {\r\n            this.render(markdown);\r\n            this.load.emit(markdown);\r\n        }, error => this.error.emit(error));\r\n    }\r\n    handleTransclusion() {\r\n        this.render(this.element.nativeElement.innerHTML, true);\r\n    }\r\n    handlePlugins() {\r\n        if (this.lineHighlight) {\r\n            this.setPluginOptions(this.element.nativeElement, { dataLine: this.line, dataLineOffset: this.lineOffset });\r\n        }\r\n        if (this.lineNumbers) {\r\n            this.setPluginClass(this.element.nativeElement, PrismPlugin.LineNumbers);\r\n            this.setPluginOptions(this.element.nativeElement, { dataStart: this.start });\r\n        }\r\n    }\r\n    setPluginClass(element, plugin) {\r\n        const preElements = element.querySelectorAll('pre');\r\n        for (let i = 0; i < preElements.length; i++) {\r\n            const classes = plugin instanceof Array ? plugin : [plugin];\r\n            preElements.item(i).classList.add(...classes);\r\n        }\r\n    }\r\n    setPluginOptions(element, options) {\r\n        const preElements = element.querySelectorAll('pre');\r\n        for (let i = 0; i < preElements.length; i++) {\r\n            Object.keys(options).forEach(option => {\r\n                const attributeValue = options[option];\r\n                if (attributeValue) {\r\n                    const attributeName = this.toLispCase(option);\r\n                    preElements.item(i).setAttribute(attributeName, attributeValue.toString());\r\n                }\r\n            });\r\n        }\r\n    }\r\n    toLispCase(value) {\r\n        const upperChars = value.match(/([A-Z])/g);\r\n        if (!upperChars) {\r\n            return value;\r\n        }\r\n        let str = value.toString();\r\n        for (let i = 0, n = upperChars.length; i < n; i++) {\r\n            str = str.replace(new RegExp(upperChars[i]), '-' + upperChars[i].toLowerCase());\r\n        }\r\n        if (str.slice(0, 1) === '-') {\r\n            str = str.slice(1);\r\n        }\r\n        return str;\r\n    }\r\n}\r\nMarkdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: MarkdownComponent, deps: [{ token: i0.ElementRef }, { token: MarkdownService }], target: i0.ɵɵFactoryTarget.Component });\r\nMarkdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.0\", type: MarkdownComponent, selector: \"markdown, [markdown]\", inputs: { data: \"data\", src: \"src\", emoji: \"emoji\", katex: \"katex\", katexOptions: \"katexOptions\", lineHighlight: \"lineHighlight\", line: \"line\", lineOffset: \"lineOffset\", lineNumbers: \"lineNumbers\", start: \"start\" }, outputs: { error: \"error\", load: \"load\", ready: \"ready\" }, usesOnChanges: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: MarkdownComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    // eslint-disable-next-line @angular-eslint/component-selector\r\n                    selector: 'markdown, [markdown]',\r\n                    template: '<ng-content></ng-content>',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: MarkdownService }]; }, propDecorators: { data: [{\r\n                type: Input\r\n            }], src: [{\r\n                type: Input\r\n            }], emoji: [{\r\n                type: Input\r\n            }], katex: [{\r\n                type: Input\r\n            }], katexOptions: [{\r\n                type: Input\r\n            }], lineHighlight: [{\r\n                type: Input\r\n            }], line: [{\r\n                type: Input\r\n            }], lineOffset: [{\r\n                type: Input\r\n            }], lineNumbers: [{\r\n                type: Input\r\n            }], start: [{\r\n                type: Input\r\n            }], error: [{\r\n                type: Output\r\n            }], load: [{\r\n                type: Output\r\n            }], ready: [{\r\n                type: Output\r\n            }] } });\n\nclass MarkdownPipe {\r\n    constructor(elementRef, markdownService, zone) {\r\n        this.elementRef = elementRef;\r\n        this.markdownService = markdownService;\r\n        this.zone = zone;\r\n    }\r\n    transform(value) {\r\n        if (value == null) {\r\n            return '';\r\n        }\r\n        if (typeof value !== 'string') {\r\n            console.error(`MarkdownPipe has been invoked with an invalid value type [${typeof value}]`);\r\n            return value;\r\n        }\r\n        const markdown = this.markdownService.compile(value);\r\n        this.zone.onStable\r\n            .pipe(first())\r\n            .subscribe(() => this.markdownService.highlight(this.elementRef.nativeElement));\r\n        return markdown;\r\n    }\r\n}\r\nMarkdownPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: MarkdownPipe, deps: [{ token: i0.ElementRef }, { token: MarkdownService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Pipe });\r\nMarkdownPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: MarkdownPipe, name: \"markdown\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: MarkdownPipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'markdown',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: MarkdownService }, { type: i0.NgZone }]; } });\n\nconst sharedDeclarations = [\r\n    LanguagePipe,\r\n    MarkdownComponent,\r\n    MarkdownPipe,\r\n];\r\nclass MarkdownModule {\r\n    static forRoot(markdownModuleConfig) {\r\n        return {\r\n            ngModule: MarkdownModule,\r\n            providers: [\r\n                MarkdownService,\r\n                markdownModuleConfig && markdownModuleConfig.loader || [],\r\n                markdownModuleConfig && markdownModuleConfig.markedOptions || [],\r\n                {\r\n                    provide: SECURITY_CONTEXT,\r\n                    useValue: markdownModuleConfig && markdownModuleConfig.sanitize != null\r\n                        ? markdownModuleConfig.sanitize\r\n                        : SecurityContext.HTML,\r\n                },\r\n            ],\r\n        };\r\n    }\r\n    static forChild() {\r\n        return {\r\n            ngModule: MarkdownModule,\r\n        };\r\n    }\r\n}\r\nMarkdownModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: MarkdownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nMarkdownModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: MarkdownModule, declarations: [LanguagePipe,\r\n        MarkdownComponent,\r\n        MarkdownPipe], exports: [LanguagePipe,\r\n        MarkdownComponent,\r\n        MarkdownPipe] });\r\nMarkdownModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: MarkdownModule });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: MarkdownModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    exports: sharedDeclarations,\r\n                    declarations: sharedDeclarations,\r\n                }]\r\n        }] });\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { KatexOptions, LanguagePipe, MarkdownComponent, MarkdownModule, MarkdownPipe, MarkdownService, MarkedOptions, PrismPlugin, SECURITY_CONTEXT, errorJoyPixelsNotLoaded, errorKatexNotLoaded, errorSrcWithoutHttpClient };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}