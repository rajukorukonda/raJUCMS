{"ast":null,"code":"import { BehaviorSubject, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { environment } from 'environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let MyPatientsService = /*#__PURE__*/(() => {\n  class MyPatientsService {\n    constructor(http) {\n      this.http = http;\n      this.messageSource = new BehaviorSubject(1);\n      this.currentMessage = this.messageSource.asObservable();\n      this.API_URL = environment.API_URL;\n    }\n    GetAppointment(appointmentID) {\n      return this.http.get(this.API_URL + 'PatientsAppointments/GetAppointment/' + appointmentID).pipe(tap(status => console.log('status: ' + status)), catchError(this.handleError));\n    }\n    GetAllAppointments() {\n      return this.http.get(this.API_URL + 'PatientsAppointments/GetAllAppointments/').pipe(tap(status => console.log('status: ' + status)), catchError(this.handleError));\n    }\n    GetAllAppointments_Distict() {\n      return this.http.get(this.API_URL + 'PatientsAppointments/GetAllAppointments_Distict/').pipe(tap(status => console.log('status: ' + status)), catchError(this.handleError));\n    }\n    GetAllPatients() {\n      return this.http.get(this.API_URL + 'Patients/GetAllPatients/').pipe(tap(status => console.log('status: ' + status)), catchError(this.handleError));\n    }\n    getDoctors() {\n      return this.http.get(this.API_URL + 'Doctor/GetAllDoctors/').pipe(tap(status => console.log('status: ' + status)), catchError(this.handleError));\n    }\n    getServices() {\n      return this.http.get(this.API_URL + 'Services').pipe(tap(status => console.log('status: ' + status)), catchError(this.handleError));\n    }\n    getStatus() {\n      return this.http.get(this.API_URL + 'Status').pipe(tap(status => console.log('status: ' + status)), catchError(this.handleError));\n    }\n    signIn(credentials) {\n      return this.http.post(this.API_URL + 'Login/UserExist', credentials).pipe(tap(status => console.log('status: ' + status)), catchError(this.handleError));\n    }\n    //Global Method to Post data\n    PostData(PostParam) {\n      debugger;\n      return new Promise((resolve, reject) => {\n        var url = this.API_URL + 'PatientsAppointments/AddUpdateAppointments/';\n        this.http.post(url, PostParam).subscribe(data => {\n          resolve(data);\n        }, err => {\n          reject(err);\n        });\n      });\n    }\n    handleError(error) {\n      console.error(error);\n      return throwError(error);\n    }\n  }\n  MyPatientsService.ɵfac = function MyPatientsService_Factory(t) {\n    return new (t || MyPatientsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  MyPatientsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MyPatientsService,\n    factory: MyPatientsService.ɵfac\n  });\n  return MyPatientsService;\n})();","map":null,"metadata":{},"sourceType":"module"}