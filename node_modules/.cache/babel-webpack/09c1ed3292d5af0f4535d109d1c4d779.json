{"ast":null,"code":"import _asyncToGenerator from \"D:/Rheumatology/CMS_Ui/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { ViewEncapsulation, Component, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DatePipe } from '@angular/common';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { environment } from 'environments/environment';\nimport { FormControl, Validators } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\n//import { FuseConfirmationDialogComponent } from '@fuse/services/confirmation/dialog/dialog.component'\nimport { MatDialogConfig } from '@angular/material/dialog';\n// import { debug } from 'console';\nlet AppointmentsComponent = class AppointmentsComponent {\n  constructor(patientsService, medicineService, _formBuilder, activatedRoute, utilitiesService, datepipe, toastService, _snackBar, generalService, http, spinner, _liveAnnouncer, _router, dialog, dateAdapter) {\n    this.patientsService = patientsService;\n    this.medicineService = medicineService;\n    this._formBuilder = _formBuilder;\n    this.activatedRoute = activatedRoute;\n    this.utilitiesService = utilitiesService;\n    this.datepipe = datepipe;\n    this.toastService = toastService;\n    this._snackBar = _snackBar;\n    this.generalService = generalService;\n    this.http = http;\n    this.spinner = spinner;\n    this._liveAnnouncer = _liveAnnouncer;\n    this._router = _router;\n    this.dialog = dialog;\n    this.dateAdapter = dateAdapter;\n    this.patientHistorys = [];\n    this.myControl = new FormControl();\n    this.options = ['One', 'Two', 'Three'];\n    this.tabWay = \"vert\";\n    this.API_URL = environment.API_URL;\n    this.selectable = true;\n    this.removable = true;\n    this.separatorKeysCodes = [ENTER, COMMA];\n    this.fruitCtrl = new FormControl();\n    this.fruits = [];\n    this.allFruits = ['Apple', 'Lemon', 'Lime', 'Orange', 'Strawberry'];\n    this.frequencyList = [];\n    this.medicine = [];\n    this.frequencyListMedication = [];\n    this.dose = [];\n    this.when = [];\n    this.duration = [];\n    this.durationInSeconds = 5;\n    this.horizontalPosition = 'right';\n    this.verticalPosition = 'top';\n    this.actionName = 'New Appointment';\n    this.appointmentButton = 'Create Appointment';\n    this.appt = {};\n    this.appointmentModel = {};\n    this.doctors = [];\n    this.action = 'Save';\n    this.services = [];\n    this.status = [];\n    this.slots = [];\n    this.discounts = [];\n    this.prices = [];\n    this.genders = [];\n    this.upcomingBookings = [];\n    this.todayBookings = [];\n    this.todayDataSourceBookings = [];\n    this.todayDataSourcePrintBookings = [];\n    this.upcomingDataSourceBookings = [];\n    this.filename = [];\n    this.patientsappointments = [];\n    this.filterPatientappointments = [];\n    this.patientID = 0;\n    this.appointID = 0;\n    this.mobNoAlreadyExists = false;\n    this.patients = [];\n    this.selection = [];\n    this.panelOpenState = false;\n    this.complaintsList = [];\n    this.complaints = [];\n    this.visitReasonList = [];\n    this.visitReason = [];\n    this.docs = [];\n    this.docsList = [];\n    this.slotsArr = [];\n    this.vitalsList = [];\n    this.vitals = [];\n    this.complaintsXML = [];\n    this.docsXml = [];\n    this.medicineXml = [];\n    this.patientHistory = [];\n    this.patientsappointment = new MatTableDataSource(this.todayDataSourceBookings);\n    this.patientHistoryList = [];\n    this.filteredAppointments = [];\n    this.isChecked = false;\n    this.isPriceTag = true;\n    this.isDuePay = false;\n    this.isNoSlot = false;\n    this.nextDisabled = true;\n    this.Screen = 1;\n    this.detailData = [];\n    this.apptList = {};\n    this.complaintsXMLList = [];\n    this.medicineList = [];\n    this.medicinePrescepList = [];\n    this.afterSaveVitalId = 0;\n    this.actualPrice = 0;\n    // rowClickedData:any=[];\n    this.Mode = [];\n    this.BloodGroup = [];\n    this.receiptToken = 0;\n    this.showHideDiv = false;\n    this.filterValues = {};\n    this.filterSelectObj = [];\n    this.labreportfiles = [];\n    this.dataSource = new MatTableDataSource();\n    this.displayedColumns = ['SL', 'Patient', 'Service', 'Doctor', 'Time', 'WaitingTime', 'Status', 'VisitCount', 'ReceiptToken', 'Billing', 'Actions', 'Vitals', 'View'];\n    this.displayedColumnsHistory = ['SL', 'Patient', 'Service', 'Doctor', 'Time', 'VisitCount', 'View'];\n    this.displayedColumnsUpcoming = ['SL', 'Patient', 'Service', 'Doctor', 'Time', 'WaitingTime', 'VisitCount', 'Billing', 'Actions'];\n    this.doFilter = (value, state) => {\n      if (state == 1) {\n        this.todayBookings.filter = value.trim().toLocaleLowerCase();\n        this.upcomingBookings.filter = '';\n        this.patientsappointments.filter = '';\n        this.searchKey1 = '';\n        this.searchKey2 = '';\n      } else if (state == 2) {\n        this.upcomingBookings.filter = value.trim().toLocaleLowerCase();\n        this.todayBookings.filter = '';\n        this.patientsappointments.filter = '';\n        this.searchKey = '';\n        this.searchKey2 = '';\n      } else if (state == 3) {\n        this.patientsappointments.filter = value.trim().toLocaleLowerCase();\n        this.todayBookings.filter = '';\n        this.upcomingBookings.filter = '';\n        this.searchKey1 = '';\n        this.searchKey = '';\n      }\n    };\n    this.uploadFile = files => {\n      if (files.length === 0) {\n        return;\n      }\n      this.API_URL + 'PatientsAppointments/upload';\n      let fileToUpload = files[0];\n      const formData = new FormData();\n      formData.append('file', fileToUpload, fileToUpload.name);\n      this.http.post(this.API_URL, formData, {\n        reportProgress: true,\n        observe: 'events'\n      }).subscribe(event => {});\n    };\n    // Object to create Filter for\n    this.filterSelectObj = [\n    // {\n    //   name: 'ID',\n    //   columnProp: 'patientARCID',\n    //   options: []\n    // }, \n    {\n      name: 'Patient NAME',\n      columnProp: 'patient',\n      options: []\n    },\n    //{\n    //   name: 'USERNAME',\n    //   columnProp: 'username',\n    //   options: []\n    // }, {\n    //   name: 'EMAIL',\n    //   columnProp: 'email',\n    //   options: []\n    // }, \n    {\n      name: 'STATUS',\n      columnProp: 'status',\n      options: []\n    }];\n    this.dateAdapter.setLocale('en-GB'); //dd/MM/yyyy\n    // this.date = new FormControl(new Date());\n    this.filteredFruits = this.fruitCtrl.valueChanges.pipe(startWith(null), map(fruit => fruit ? this._filter(fruit) : this.complaints.slice()));\n    this.loginDetails = JSON.parse(localStorage.getItem('loginDetails'));\n    if (this.loginDetails) {\n      this.roleID = this.loginDetails.roleID;\n      this.registrationID = this.loginDetails.registrationID;\n    }\n    this.myControl = new FormControl();\n    this.filteredOptions = this.myControl.valueChanges.pipe(startWith(''), map(state => state ? this.filterStates(state) : this.filterPatientappointments.slice()));\n  }\n  filterStates(name) {\n    return this.filterPatientappointments.filter(state => state.mobile.toLowerCase().indexOf(name.toLowerCase()) === 0);\n  }\n  add(event) {\n    const value = (event.value || '').trim();\n    // Add our fruit\n    if (value) {\n      if (!this.fruits.some(e => e.toLowerCase() === value.toLowerCase())) {\n        this.fruits.push(value);\n        this.addComplaints(value);\n      }\n    }\n    // Clear the input value\n    event.chipInput.clear();\n    this.fruitCtrl.setValue(null);\n  }\n  addComplaints(val) {\n    let arr = [];\n    arr.push({\n      flag: Number(1),\n      ComplaintName: val\n    });\n    var url = 'PatientsAppointments/ComplaintsCrud/';\n    this.utilitiesService.CRUD(arr, url).subscribe(data => {\n      if (data) {\n        this.complaints = data;\n        this.complaintsList = data;\n        this.filteredFruits = this.fruitCtrl.valueChanges.pipe(startWith(null), map(fruit => fruit ? this._filter(fruit) : this.complaints.slice()));\n      } else {}\n    }, () => {});\n  }\n  applyFilters() {\n    this.patientsappointments.filter = this.searchKey.trim().toLowerCase();\n  }\n  remove(fruit) {\n    const index = this.fruits.indexOf(fruit);\n    if (index >= 0) {\n      this.fruits.splice(index, 1);\n    }\n  }\n  selected(event) {\n    this.fruits.push(event.option.viewValue);\n    this.fruitInput.nativeElement.value = '';\n    this.fruitCtrl.setValue(null);\n  }\n  // private _filter(value: string): string[] {\n  //   \n  //     const filterValue = value.toLowerCase();\n  //     return this.complaints.filter(fruit => fruit.complaintName.toLowerCase().includes(filterValue));\n  // }\n  ngOnInit() {\n    this.addStaticData();\n    this.getDocs();\n    this.getComplaints();\n    this.getVisitReason();\n    this.vitalsCrud();\n    this.getAllAppointments();\n    this.getAllDoctors();\n    this.getServices();\n    //  this.getStatuses();\n    this.getSlots();\n    this.getGenders();\n    this.getAllAppointmentBills();\n    this.getDiscounts();\n    this.getAllPatients();\n    this.GetMedicineData();\n    this.btnText = 'Register';\n    this.detailData = [];\n    // this.isChecked=false;\n    // Horizontal stepper form\n    if (this.roleID == '1') {\n      this.horizontalStepperForm = this._formBuilder.group({\n        step1: this._formBuilder.group({\n          appDate: new FormControl(new Date()),\n          slot: ['', Validators.required],\n          docName: ['', Validators.required],\n          firstName: ['', Validators.required],\n          // lastName: [''],\n          mobNum: ['', Validators.required],\n          gender: ['', Validators.required],\n          age: ['', Validators.required],\n          status: ['']\n        }),\n        step2: this._formBuilder.group({\n          serviceName: ['', Validators.required],\n          price: ['', Validators.required],\n          discount: [''],\n          amountPaid: ['', Validators.required],\n          skipPayment: [''],\n          netPrice: [''],\n          duePayment: [''],\n          modeOfPayment: ['']\n        })\n      });\n    } else {\n      this.horizontalStepperForm = this._formBuilder.group({\n        step1: this._formBuilder.group({\n          appDate: new FormControl(new Date()),\n          slot: ['', Validators.required],\n          docName: ['', Validators.required],\n          firstName: ['', Validators.required],\n          // lastName: [''],\n          mobNum: ['', Validators.required],\n          gender: ['', Validators.required],\n          age: ['', Validators.required],\n          status: ['']\n        }),\n        step2: this._formBuilder.group({\n          serviceName: ['', Validators.required],\n          price: ['', Validators.required],\n          discount: [''],\n          amountPaid: [''],\n          skipPayment: [''],\n          netPrice: [''],\n          duePayment: [''],\n          modeOfPayment: ['']\n        })\n      });\n    }\n    this.vitalsForm = this._formBuilder.group({\n      weight: [''],\n      bloodGroup: [''],\n      temp: [''],\n      serumCreatinine: [''],\n      bloodPressure: [''],\n      pulse: [''],\n      SpO2: [''],\n      BMI: [''],\n      visitReason: [''],\n      advice: [''],\n      nextVisit: [''],\n      frequency: [''],\n      pickADate: null,\n      items: this._formBuilder.array([this.createItem()]),\n      medicationitems: this._formBuilder.array([this.createMedicationItem()])\n    });\n    if (this.roleID == '1') {\n      this.displayedColumns = ['SL', 'Patient', 'Service', 'Doctor', 'Time', 'WaitingTime', 'Status', 'VisitCount', 'ReceiptToken', 'Billing', 'DuePayment', 'Actions', 'View'];\n    } else if (this.roleID == '2') {\n      this.displayedColumns = ['SL', 'Patient', 'Service', 'Doctor', 'Time', 'WaitingTime', 'Status', 'VisitCount', 'Vitals', 'View'];\n      this.displayedColumnsUpcoming = ['SL', 'Patient', 'Service',\n      //'Doctor',\n      'Time', 'WaitingTime', 'VisitCount', 'Billing', 'Vitals'];\n    } else if (this.roleID == '3') {\n      this.displayedColumns = ['SL', 'Patient', 'Service', 'Time', 'WaitingTime', 'Status', 'VisitCount', 'Actions'];\n    } else if (this.roleID == '5') {\n      this.displayedColumns = ['SL', 'Patient', 'Service', 'Time', 'WaitingTime', 'Status', 'VisitCount', 'Vitals', 'View'];\n    }\n    // this.filteredOptions = this.myControl.valueChanges.pipe(\n    //     startWith(''),\n    //     map(value => this._filter(value)),\n    //   );\n  }\n\n  ngOnDestroy() {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('loginDetails');\n  }\n  filterChange(filter, event) {\n    //let filterValues = {}\n    // this.filterValues[filter.columnProp] = event.target.value.trim().toLowerCase()\n    this.filterValues[filter.columnProp] = event.value.toLowerCase();\n    this.todayBookings.filter = JSON.stringify(this.filterValues);\n  }\n  getFilterObject(fullObj, key) {\n    const uniqChk = [];\n    fullObj.filter(obj => {\n      if (!uniqChk.includes(obj[key])) {\n        uniqChk.push(obj[key]);\n      }\n      return obj;\n    });\n    return uniqChk;\n  }\n  createFilter() {\n    let filterFunction = function (data, filter) {\n      let searchTerms = JSON.parse(filter);\n      let isFilterSet = false;\n      for (const col in searchTerms) {\n        if (searchTerms[col].toString() !== '') {\n          isFilterSet = true;\n        } else {\n          delete searchTerms[col];\n        }\n      }\n      console.log(searchTerms);\n      let nameSearch = () => {\n        let found = false;\n        if (isFilterSet) {\n          for (const col in searchTerms) {\n            searchTerms[col].trim().toLowerCase().split(' ').forEach(word => {\n              if (data[col].toString().toLowerCase().indexOf(word) != -1 && isFilterSet) {\n                found = true;\n              }\n            });\n          }\n          return found;\n        } else {\n          return true;\n        }\n      };\n      return nameSearch();\n    };\n    return filterFunction;\n  }\n  addStaticData() {\n    this.frequencyList = [];\n    this.frequencyList.push({\n      ID: 1,\n      frequency: 'Day'\n    });\n    this.frequencyList.push({\n      ID: 2,\n      frequency: 'Month'\n    });\n    this.frequencyListMedication = [];\n    this.frequencyListMedication.push({\n      ID: 1,\n      label: 'Daily'\n    });\n    this.frequencyListMedication.push({\n      ID: 2,\n      label: 'Weekly'\n    });\n    this.frequencyListMedication.push({\n      ID: 1,\n      label: 'Monthly'\n    });\n    this.frequencyListMedication.push({\n      ID: 2,\n      label: '2 days'\n    });\n    this.frequencyListMedication.push({\n      ID: 2,\n      label: '3 days'\n    });\n    this.frequencyListMedication.push({\n      ID: 2,\n      label: '4 days'\n    });\n    // this.medicine.push({ ID: 1, label: 'AV UTI Suspension' })\n    // this.medicine.push({ ID: 2, label: 'Cartiva Forte Tablet' })\n    // this.medicine.push({ ID: 1, label: 'Rtist 300MG Tablet' })\n    // this.medicine.push({ ID: 2, label: 'Nise Suspension' })\n    this.dose = [];\n    this.dose.push({\n      ID: 2,\n      label: '1-1-1'\n    });\n    this.dose.push({\n      ID: 2,\n      label: '1-0-1'\n    });\n    this.dose.push({\n      ID: 2,\n      label: '1-0-0'\n    });\n    this.dose.push({\n      ID: 2,\n      label: '0-0-1'\n    });\n    this.dose.push({\n      ID: 2,\n      label: '1/2-0-0 '\n    });\n    this.dose.push({\n      ID: 2,\n      label: '0-1/2-0'\n    });\n    this.dose.push({\n      ID: 2,\n      label: '0-0-1/2'\n    });\n    this.dose.push({\n      ID: 2,\n      label: '1/2-1/2-1/2'\n    });\n    this.when = [];\n    this.when.push({\n      ID: 2,\n      label: 'After Food'\n    });\n    this.when.push({\n      ID: 2,\n      label: 'Before Food'\n    });\n    this.when.push({\n      ID: 2,\n      label: 'Night'\n    });\n    this.duration = [];\n    this.duration.push({\n      ID: 2,\n      label: '4 Days'\n    });\n    this.duration.push({\n      ID: 2,\n      label: '10 Days'\n    });\n    this.duration.push({\n      ID: 2,\n      label: '1 Week'\n    });\n    this.duration.push({\n      ID: 2,\n      label: '2 Weeks'\n    });\n    this.duration.push({\n      ID: 2,\n      label: '1 Months'\n    });\n    this.duration.push({\n      ID: 2,\n      label: '2 Months'\n    });\n    this.duration.push({\n      ID: 2,\n      label: '3 Months'\n    });\n    this.Mode = [];\n    this.Mode.push({\n      ID: 1,\n      label: 'Cash'\n    });\n    this.Mode.push({\n      ID: 2,\n      label: 'Card'\n    });\n    this.Mode.push({\n      ID: 3,\n      label: 'UPI'\n    });\n    this.Mode.push({\n      ID: 4,\n      label: 'NetBanking'\n    });\n    this.BloodGroup = [];\n    this.BloodGroup.push({\n      ID: 'A+',\n      label: 'A+'\n    });\n    this.BloodGroup.push({\n      ID: 'A-',\n      label: 'A-'\n    });\n    this.BloodGroup.push({\n      ID: 'B+',\n      label: 'B+'\n    });\n    this.BloodGroup.push({\n      ID: 'B-',\n      label: 'B-'\n    });\n    this.BloodGroup.push({\n      ID: 'O+',\n      label: 'O+'\n    });\n    this.BloodGroup.push({\n      ID: 'O-',\n      label: 'O-'\n    });\n    this.BloodGroup.push({\n      ID: 'AB+',\n      label: 'AB+'\n    });\n    this.BloodGroup.push({\n      ID: 'AB-',\n      label: 'AB-'\n    });\n  }\n  onRowClicked(row) {\n    // this.rowClickedData=row;\n    this.Screen = 2;\n    this.detailData = row;\n    this.viewHistory(row);\n    this.fruits = [];\n    this.vitalsForm.reset();\n    if (row.vitalsID) {\n      this.setValues(row);\n    } else {\n      this.patientName = row.patient + \" \" + \"(\" + row.gender + \", Age \" + row.age + \")\";\n      // this.vitalsForm.reset();\n      // this.fruits = [];\n      this.flag = '1';\n      this.PatientID = row.patientID;\n      this.AppointmentID = row.appointmentID;\n      this.vitalsID = 0;\n      this.items = this.vitalsForm.get('items');\n      this.medicationitems = this.vitalsForm.get('medicationitems');\n      // const arr = <FormArray>this.vitalsForm.controls.items;\n      // arr.controls = [];\n      // this.addItem();\n      // console.log('Row clicked: ', row);\n    }\n  }\n\n  onRowPrintPresecptionClicked(row) {\n    if (row.vitalsID) {\n      this.detailData = row;\n      this.setValues(row);\n      this.ViewPrescption();\n    }\n  }\n  _filter(value) {\n    //const filterValue = value.toLowerCase();\n    //return this.patientsappointments.data.filter(option => option.mobile.toLowerCase().includes(filterValue));\n    return this.filterPatientappointments.filter(option => option.mobile.includes(value));\n  }\n  filterAppointemnts(event) {\n    //in a real application, make a request to a remote url with the query and return filtered results, for demo we filter at client side\n    let filtered = [];\n    let query = event.query;\n    for (let i = 0; i < this.allAppointments.length; i++) {\n      let country = this.allAppointments[i];\n      if (country.mobile.toLowerCase().indexOf(query.toLowerCase()) == 0) {\n        filtered.push(country);\n      }\n    }\n    this.filteredAppointments = filtered;\n  }\n  getAllAppointments() {\n    this.spinner.show();\n    this.utilitiesService.getAllAppointments().subscribe(data => {\n      if (data) {\n        this.allAppointments = data;\n        this.date = new Date();\n        this.date.setHours(0, 0, 0, 0);\n        let todayDate = this.datepipe.transform(this.date, 'dd MMM yyyy');\n        const dateforToday = new Date();\n        if (this.roleID != 2) {\n          this.patientsappointments = data;\n          //Today Bookings\n          this.todayDataSourceBookings = data.filter(a => a.serviceDate == todayDate);\n          this.selection = new Set() < this.todayDataSourceBookings > true;\n          //Future Bookings\n          this.upcomingBookings = data.filter(a => new Date(a.serviceDate) > new Date(dateforToday));\n          //All Bookings\n          // this.patientsappointments = data.filter((a) => new Date(a.serviceDate) < new Date(dateforToday));\n          // this.filterPatientappointments =data.filter((v, i, a) => a.indexOf(v) === i); \n        } else {\n          // this.registrationID=this.loginDetails.registrationID;\n          this.todayDataSourceBookings = data.filter(a => a.serviceDate == todayDate && a.doctorID == this.registrationID);\n          this.selection = new Set() < this.todayDataSourceBookings > true;\n          //Future Bookings\n          this.upcomingBookings = data.filter(a => new Date(a.serviceDate) > new Date(dateforToday) && a.doctorID == this.registrationID);\n          //All Bookings\n          this.patientsappointments = data.filter(a => a.doctorID == this.registrationID);\n        }\n        this.filterPatientappointments = data.filter((thing, i, arr) => arr.findIndex(t => t.mobile === thing.mobile && t.patient === thing.patient) === i);\n      }\n      this.todayDataSourceBookings.sort((a, b) => a.status < b.status ? -1 : 1);\n      this.todayBookings = new MatTableDataSource(this.todayDataSourceBookings);\n      this.upcomingBookings = new MatTableDataSource(this.upcomingBookings);\n      this.patientsappointments = new MatTableDataSource(this.patientsappointments);\n      this.todayBookings.paginator = this.paginator;\n      this.upcomingBookings.paginator = this.upcomingPaginator;\n      this.patientsappointments.paginator = this.HistoryPaginator;\n      if (this.receiptToken > 0) {\n        this.date = new Date();\n        this.date.setHours(0, 0, 0, 0);\n        let todayDate1 = this.datepipe.transform(this.date, 'dd MMM yyyy');\n        this.todayDataSourcePrintBookings = data.filter(a => a.receiptToken == this.receiptToken && a.serviceDate == todayDate1);\n        if (this.todayDataSourcePrintBookings.length > 0) {\n          if (this.todayDataSourcePrintBookings[0].modeofPaymentID != 5 && (this.todayDataSourcePrintBookings[0].duePayment == null || this.todayDataSourcePrintBookings[0].duePayment == '0.00')) {\n            //(element.modeofPaymentID != 5) && (element.duePayment == null || element.duePayment == '0.00')\"\n            this.openCompanyDetailsDialog();\n          }\n        }\n        //this.printSingle();\n      }\n\n      this.todayBookings.filterPredicate = this.createFilter();\n      this.filterSelectObj.filter(o => {\n        o.options = this.getFilterObject(this.todayDataSourceBookings, o.columnProp);\n      });\n      this.spinner.hide();\n    }, () => {\n      this.spinner.hide();\n    });\n  }\n  // Reset table filters\n  resetFilters() {\n    this.filterValues = {};\n    this.filterSelectObj.forEach((value, key) => {\n      value.modelValue = undefined;\n    });\n    this.todayBookings.filter = \"\";\n  }\n  sortData(sort) {\n    if (sort.active == \"patientARCID\") {\n      if (sort.direction == \"asc\") this.todayDataSourceBookings.sort((a, b) => a.patientARCID < b.patientARCID ? -1 : 1);else this.todayDataSourceBookings.sort((a, b) => a.patientARCID > b.patientARCID ? -1 : 1);\n    }\n    if (sort.active == \"status\") {\n      if (sort.direction == \"asc\") this.todayDataSourceBookings.sort((a, b) => a.status < b.status ? -1 : 1);else this.todayDataSourceBookings.sort((a, b) => a.status > b.status ? -1 : 1);\n    }\n    if (sort.active == \"visitCount\") {\n      if (sort.direction == \"asc\") this.todayDataSourceBookings.sort((a, b) => a.visitCount < b.visitCount ? -1 : 1);else this.todayDataSourceBookings.sort((a, b) => a.visitCount > b.visitCount ? -1 : 1);\n    }\n    this.todayBookings = new MatTableDataSource(this.todayDataSourceBookings);\n    this.todayBookings.paginator = this.paginator;\n  }\n  getAllDoctors() {\n    this.utilitiesService.getAllDoctors().subscribe(data => {\n      if (data) {\n        this.doctors = data;\n      } else {}\n    }, () => {});\n  }\n  getAllPatients() {\n    this.patientsService.GetAllPatients().subscribe(data => {\n      if (data) {\n        ;\n        this.patients = data;\n      } else {}\n    }, () => {});\n  }\n  getServices() {\n    this.utilitiesService.getServices().subscribe(data => {\n      if (data) {\n        ;\n        this.services = data;\n      } else {}\n    }, () => {});\n  }\n  getStatuses() {\n    this.utilitiesService.getStatuses().subscribe(data => {\n      if (data) {\n        this.status = data;\n      } else {}\n    }, () => {});\n  }\n  getSlots() {\n    this.utilitiesService.getSlots().subscribe(data => {\n      if (data) {\n        this.slots = data;\n      } else {}\n    }, () => {});\n  }\n  getGenders() {\n    this.utilitiesService.getAllGenders().subscribe(data => {\n      if (data) {\n        this.genders = data;\n      } else {}\n    }, () => {});\n  }\n  getAllAppointmentBills() {\n    this.utilitiesService.getAllAppointmentBills().subscribe(data => {\n      if (data) {\n        this.prices = data;\n        // this.prices.splice(0, 1);\n      } else {}\n    }, () => {});\n  }\n  getDiscounts() {\n    this.utilitiesService.getDiscounts().subscribe(data => {\n      if (data) {\n        this.discounts = data;\n        // this.discounts.splice(0, 1);\n      } else {}\n    }, () => {});\n  }\n  onSearchClear() {\n    this.searchKey3 = '';\n    // this.applyFilter();\n  }\n\n  onAppointmentClear() {\n    this.step1.reset();\n    this.step2.reset();\n    this.onSearchClear();\n    // this.applyFilter();\n  }\n\n  onCheckboxChange(val) {\n    if (val.checked == true) {\n      this.isPriceTag = false;\n    } else {\n      this.isPriceTag = true;\n    }\n  }\n  actionFormName(val) {\n    this.isDuePay = false;\n    this.slotsArr = [];\n    this.step1.reset();\n    this.step2.reset();\n    this.onSearchClear();\n    this.actionName = val;\n    this.action = val;\n    this.isPriceTag = true;\n    this.horizontalStepper.selectedIndex = 0;\n    this.step1.controls['mobNum'].enable();\n    this.step1.controls['appDate'].setValue(new Date());\n    this.appointmentButton = 'Create Appointment';\n    // this.horizontalStepperForm = this._formBuilder.group({\n    //     step1: this._formBuilder.group({\n    //         appDate: new FormControl(new Date()),\n    //  this.step2.controls['netPrice'].disable();\n    this.filteredOptions = this.myControl.valueChanges.pipe(startWith(''), map(value => this._filter(value)));\n  }\n  applyNetPrice(val) {\n    if (this.roleID == '1') {\n      if (val.modeofPaymentID != 5) {\n        var pricList = [];\n        var discList = [];\n        if (this.horizontalStepperForm.value.step2.price != \"\") {\n          pricList = this.prices.filter(a => a.priceID === this.horizontalStepperForm.value.step2.price);\n          this.step2.controls['netPrice'].setValue(pricList[0].price);\n        }\n        if (this.horizontalStepperForm.value.step2.discount != \"\") {\n          discList = this.discounts.filter(a => a.discountID === this.horizontalStepperForm.value.step2.discount);\n        }\n        if (this.horizontalStepperForm.value.step2.price != \"\" && this.horizontalStepperForm.value.step2.discount != \"\") {\n          //   \n          if (discList.length > 0 && pricList.length > 0) {\n            var disco = pricList[0].price * discList[0].discount / 100;\n            this.step2.controls['netPrice'].setValue(pricList[0].price - disco);\n          }\n        }\n      }\n    } else {\n      if (this.horizontalStepperForm.value.step2.price != \"\") {\n        pricList = this.prices.filter(a => a.priceID === this.horizontalStepperForm.value.step2.price);\n        //this.step2.controls['netPrice'].setValue(pricList[0].price);\n        this.actualPrice = pricList[0].price;\n      }\n    }\n    // Number(this.horizontalStepperForm.value.step2.price);\n  }\n\n  displayFn(user) {\n    return user && user.mobile ? user.mobile : '';\n  }\n  applyFilter(val) {\n    val = val.trim(); // Remove whitespace\n    val = val.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = val;\n    // this.patientsappointments.filter = this.searchKey.trim().toLowerCase();\n    let details = this.patients.filter(a => a.mobile.trim() == val.value.mobile.trim() && a.patient.trim().toLowerCase() == val.value.patient.trim().toLowerCase());\n    if (details.length > 0) {\n      this.action = 'Patient Exists save new appointment';\n      this.appointID = 0;\n      this.patientID = details[0].patientID;\n      this.step1.controls['firstName'].setValue(details[0].patient);\n      // this.step1.controls['lastName'].setValue(details[0].patient);\n      this.step1.controls['mobNum'].setValue(details[0].mobile);\n      if (this.actionName == 'Update Existing Appointment') {\n        this.step1.controls['mobNum'].disable();\n      }\n      this.step1.controls['age'].setValue(details[0].age);\n      this.step1.controls['gender'].setValue(details[0].genderID);\n    } else {\n      this.action = 'New Appointment';\n      this.step1.controls['mobNum'].enable();\n    }\n    this.filteredOptions = this.myControl.valueChanges.pipe(startWith(''), map(state => state ? this.filterStates(state) : this.filterPatientappointments.slice()));\n  }\n  addUpdateAppointments(val) {\n    ;\n    let arr = [];\n    arr.push({\n      AppointmentDate: val.step1.appDate,\n      AppointmentTime: val.step1.appTime,\n      Doctor: val.step1.docName,\n      FirstName: val.step1.firstName,\n      //  LastName: val.step1.lastName,\n      Mobile: val.step1.mobNum,\n      gender: val.step1.gender,\n      Age: val.step1.age,\n      Status: 7,\n      ServiceName: val.step2.serviceName,\n      Qty: val.step2.qty,\n      Price: val.step2.serviceName,\n      Discount: val.step2.disc,\n      Tax: val.step2.tax,\n      Action: this.action\n    });\n    var UploadFile = new FormData();\n    UploadFile.append('UserId', JSON.stringify(arr));\n    this.patientsService.PostData(UploadFile).then(data => {\n      ;\n      if (data == 'SUCCESS') {} else {}\n    }, err => {});\n  }\n  get step1() {\n    return this.horizontalStepperForm.get('step1');\n  }\n  get step2() {\n    return this.horizontalStepperForm.get('step2');\n  }\n  updateSelect(val) {\n    this.horizontalStepper.selectedIndex = 0;\n    if (val.duePayment != null && val.duePayment != '0.00') {\n      this.updateSelectDuePay(val);\n    } else {\n      // \n      this.isDuePay = false;\n      this.spinner.show();\n      this.action = 'Update Existing Appointment';\n      this.actionName = 'Update Appointment';\n      this.appointmentButton = 'Update Appointment';\n      this.appointID = val.appointmentID;\n      this.patientID = val.patientID;\n      this.appointmentId = val.appointmentID;\n      this.step1.controls['appDate'].setValue(new Date(val.appointmentDate));\n      this.getSlotsWithDocIDEdit(val.doctorID, val.slotTime);\n      this.step1.controls['docName'].setValue(val.doctorID);\n      this.step1.controls['firstName'].setValue(val.patientName);\n      // this.step1.controls['lastName'].setValue(val.patientLastName);\n      this.step1.controls['mobNum'].setValue(val.mobile);\n      this.step1.controls['age'].setValue(val.age);\n      // this.step1.controls['status'].setValue(val.statusID);\n      this.step1.controls['gender'].setValue(val.genderID);\n      this.step2.controls['serviceName'].setValue(val.serviceID);\n      this.step2.controls['price'].setValue(val.priceID);\n      this.step2.controls['discount'].setValue(val.discountID);\n      this.step2.controls['amountPaid'].setValue(val.payment);\n      this.step2.controls['modeOfPayment'].setValue(val.modeofPaymentID);\n      this.step1.controls['mobNum'].disable();\n      // this.step2.controls['netPrice'].disable();\n      this.nextDisabled = false;\n      if (this.roleID == '1') {\n        this.applyNetPrice(val);\n      }\n      this.spinner.hide();\n    }\n  }\n  updateSelectDuePay(val) {\n    // \n    this.isDuePay = true;\n    this.isPriceTag = true;\n    this.spinner.show();\n    this.action = 'Update Existing Appointment';\n    this.actionName = 'Update Appointment';\n    this.appointmentButton = 'Update Appointment';\n    this.appointID = val.appointmentID;\n    this.patientID = val.patientID;\n    this.appointmentId = val.appointmentID;\n    this.step1.controls['appDate'].setValue(new Date(val.appointmentDate));\n    this.getSlotsWithDocIDEdit(val.doctorID, val.slotTime);\n    this.step1.controls['docName'].setValue(val.doctorID);\n    this.step1.controls['firstName'].setValue(val.patient);\n    // this.step1.controls['lastName'].setValue(val.patient);\n    this.step1.controls['mobNum'].setValue(val.mobile);\n    this.step1.controls['age'].setValue(val.age);\n    // this.step1.controls['status'].setValue(val.statusID);\n    this.step1.controls['gender'].setValue(val.genderID);\n    this.step2.controls['serviceName'].setValue(val.serviceID);\n    this.step2.controls['price'].setValue(val.priceID);\n    this.step2.controls['discount'].setValue(val.discountID);\n    this.step2.controls['amountPaid'].setValue(val.payment);\n    this.step1.controls['mobNum'].disable();\n    // this.step2.controls['netPrice'].disable();\n    this.step2.controls['modeOfPayment'].setValue(val.modeofPaymentID);\n    this.step2.controls['duePayment'].setValue(val.duePayment);\n    this.nextDisabled = false;\n    if (this.roleID == '1') {\n      this.applyNetPrice(val);\n    }\n    this.spinner.hide();\n  }\n  // next(val)\n  // {\n  //     \n  //     var slot =val.step1.slot;\n  //     if(slot == 0)\n  //     {\n  //         alert(\"text\");\n  //     }\n  // }\n  addRegisterPatientAppointment(val) {\n    this.appt.AppointmentID = Number(this.appointID);\n    this.appt.registrationID = Number(val.step1.docName); //\n    this.appt.PatientID = Number(this.patientID); //\n    this.appt.ServiceID = Number(val.step2.serviceName);\n    //this.appt.SlotID = Number(val.step1.slot.slotID);\n    this.appt.Slot = val.step1.slot.slot;\n    //this.appt.StatusID = Number(val.step1.status);\n    this.appt.StatusID = Number(7);\n    this.appt.ServiceDate = this.datepipe.transform(val.step1.appDate, 'd MMM yyyy');\n    this.appt.AppointmentBill = 'Test'; //\n    //var disco= ((val.step2.price * discList[0].discount)/100);\n    // this.step2.controls['netPrice'].setValue(pricList[0].price - disco);\n    if (this.isPriceTag == true)\n      //SkipBilling\n      {\n        this.appt.modeofPaymentID = val.step2.modeOfPayment;\n        this.appt.PriceID = Number(val.step2.price);\n        if (this.roleID == '1') {\n          this.appt.DiscountID = Number(val.step2.discount);\n          if (this.appt.DiscountID == 0) {\n            this.appt.DiscountID = 6;\n          }\n          this.appt.Payment = val.step2.amountPaid; //\n        } else {\n          this.appt.DiscountID = 6;\n          var pricList = this.prices.filter(a => a.priceID === this.horizontalStepperForm.value.step2.price);\n          this.actualPrice = pricList[0].price;\n          this.appt.Payment = this.actualPrice; //\n          this.appt.DuePayment = \"0\";\n        }\n        if (this.roleID == '1') {\n          var due = Number(this.horizontalStepperForm.value.step2.netPrice) - Number(Number(val.step2.amountPaid) + Number(this.horizontalStepperForm.value.step2.duePayment));\n          if (this.isDuePay == true) {\n            //if (Number(due) == Number(this.horizontalStepperForm.value.step2.duePayment)) {\n            if (due == 0) {\n              this.appt.DuePayment = \"0\";\n            }\n            // }\n            else {\n              this.appt.DuePayment = this.horizontalStepperForm.value.step2.duePayment;\n            }\n            this.appt.Payment = Number(val.step2.amountPaid) + Number(this.horizontalStepperForm.value.step2.duePayment);\n          } else {\n            if (due > 0) {\n              this.appt.DuePayment = due.toString();\n            } else {\n              this.appt.DuePayment = \"0\";\n            }\n          }\n        }\n      } else {\n      this.appt.modeofPaymentID = 5;\n      this.appt.PriceID = 6;\n      this.appt.Payment = \"0\"; //\n      this.appt.DuePayment = \"0\";\n      this.appt.DiscountID = 6;\n    }\n    this.appt.Action = this.action;\n    this.appt.PatientName = val.step1.firstName; //\n    // this.appt.PatientLastName = (val.step1.lastName);  //\n    this.appt.Mobile = val.step1.mobNum; //\n    this.appt.GenderID = Number(val.step1.gender);\n    this.appt.Age = Number(val.step1.age);\n    this.appt.PatientStatus = 'Booked';\n    let arr = [];\n    arr.push(this.appt);\n    this.receiptToken = 0;\n    this.utilitiesService.addRegisterPatientAppointment(this.appt).subscribe(data => {\n      if (data) {\n        if (data > 0) {\n          this.receiptToken = data;\n          this._snackBar.open('Appointment Added Successfully...!!', 'OK', {\n            horizontalPosition: this.horizontalPosition,\n            verticalPosition: this.verticalPosition,\n            \"duration\": 2000\n          });\n          this.ngOnInit();\n          this.appt = {};\n          // const dialogRef = this.dialog.open({\n          //     width: '600px',\n          //   });\n        } else {\n          this.showError('Your query is not sent, Please try after some time');\n          console.log('DB Exception');\n        }\n      }\n    }, error => {\n      this.errorMessage = error;\n    }, () => {});\n  }\n  //Receipt Print\n  openCompanyDetailsDialog() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.restoreFocus = false;\n    dialogConfig.autoFocus = false;\n    dialogConfig.role = 'dialog';\n    dialogConfig.disableClose = true;\n    this.editCompanyDialogRef = this.dialog.open(this.editCompanyModal, dialogConfig);\n    this.editCompanyDialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed...');\n    });\n    // let printContents = document.getElementById(\"component1\").innerHTML;\n    //     let originalContents = document.body.innerHTML;\n    //     document.body.innerHTML = printContents;\n    //     window.print();\n    //    // window.close();\n    //     document.body.innerHTML = originalContents;\n  }\n  //Receipt Print preception\n  ViewPrescption() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.restoreFocus = false;\n    dialogConfig.autoFocus = false;\n    dialogConfig.role = 'dialog';\n    dialogConfig.disableClose = true;\n    this.presecptionModalDialogRef = this.dialog.open(this.presecptionModal, dialogConfig);\n    this.presecptionModalDialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed...');\n    });\n  }\n  closeCompanyDetailsDialog() {\n    this.editCompanyDialogRef.close();\n    //this.editCompanyDialogRef.close('Pizza!');\n  }\n\n  closePrecesptionDialog() {\n    this.presecptionModalDialogRef.close();\n    //this.editCompanyDialogRef.close('Pizza!');\n  }\n\n  print(cmpName) {\n    // let printContents = document.getElementById(cmpName).innerHTML;\n    // let originalContents = document.body.innerHTML;\n    // document.body.innerHTML = printContents;\n    // window.print();\n    // window.close();\n    // document.body.innerHTML = originalContents;\n    // window.print();\n    this.print1(cmpName);\n    // var printContent = document.getElementById(cmpName);\n    // var WinPrint = window.open('', '', 'width=1000,height=750');\n    // WinPrint.document.write(printContent.innerHTML);\n    // WinPrint.document.close();\n    // WinPrint.focus();\n    // WinPrint.print();\n    // WinPrint.close();\n    //this.ngOnInit();\n    //this.editCompanyDialogRef.close();\n    //return false;\n  }\n\n  printSingle() {\n    //this.showHideDiv= false;\n    // this.print1();\n  }\n  print1(cmpName) {\n    let printContents, popupWin;\n    printContents = document.getElementById(cmpName).innerHTML;\n    popupWin = window.open('', '_blank', 'top=10,left=100,height=900,width=1000');\n    //popupWin.document.open();\n    popupWin.document.write(`\n      <html>\n        <head>\n          <style>\n          body{  width: 99%;}\n          /**\n           * Google webfonts. Recommended to include the .woff version for cross-client compatibility.\n           */\n           @media screen {\n               @font-face {\n                   font-family: 'Source Sans Pro';\n                   font-style: normal;\n                   font-weight: 400;\n                   src: local('Source Sans Pro Regular'), local('SourceSansPro-Regular'), url(https://fonts.gstatic.com/s/sourcesanspro/v10/ODelI1aHBYDBqgeIAH2zlBM0YzuT7MdOe03otPbuUS0.woff) format('woff');\n               }\n   \n               @font-face {\n                   font-family: 'Source Sans Pro';\n                   font-style: normal;\n                   font-weight: 700;\n                   src: local('Source Sans Pro Bold'), local('SourceSansPro-Bold'), url(https://fonts.gstatic.com/s/sourcesanspro/v10/toadOcfmlt9b38dHJxOBGFkQc6VGVFSmCnC_l7QZG60.woff) format('woff');\n               }\n           }\n   \n           /**\n           * Avoid browser level font resizing.\n           * 1. Windows Mobile\n           * 2. iOS / OSX\n           */\n           body,\n           table,\n           td,\n           a {\n               -ms-text-size-adjust: 100%; /* 1 */\n               -webkit-text-size-adjust: 100%; /* 2 */\n           }\n   \n           /**\n           * Remove extra space added to tables and cells in Outlook.\n           */\n           table,\n           td {\n               mso-table-rspace: 0pt;\n               mso-table-lspace: 0pt;\n           }\n   \n           /**\n           * Better fluid images in Internet Explorer.\n           */\n           img {\n               -ms-interpolation-mode: bicubic;\n           }\n   \n           /**\n           * Remove blue links for iOS devices.\n           */\n           a[x-apple-data-detectors] {\n               font-family: inherit !important;\n               font-size: inherit !important;\n               font-weight: inherit !important;\n               line-height: inherit !important;\n               color: inherit !important;\n               text-decoration: none !important;\n           }\n   \n           /**\n           * Fix centering issues in Android 4.4.\n           */\n           div[style*=\"margin: 16px 0;\"] {\n               margin: 0 !important;\n           }\n   \n           body {\n               width: 100% !important;\n               height: 100% !important;\n               padding: 0 !important;\n               margin: 0 !important;\n           }\n   \n           /**\n           * Collapse table borders to avoid space between cells.\n           */\n           table {\n               border-collapse: collapse !important;\n           }\n   \n           a {\n               color: #1a82e2;\n           }\n   \n           img {\n               height: auto;\n               line-height: 100%;\n               text-decoration: none;\n               border: 0;\n               outline: none;\n           }\n   \n           .heading_1 {\n               background-color: #fff;\n               padding: 36px 24px 0;\n               border-top: 3px solid #d4dadf;\n               font-family: sans-serif;\n               font-size: 21px;\n               font-weight: bold;\n               letter-spacing: 0.2px;\n           }\n   \n           .tocken_no{\n               font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;\n       font-size: 16px;\n       font-weight: bold;\n           }\n            .td_style{\n               padding: 24px; \n               font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n               width: 50%;padding-bottom: 0px;\n               padding-top: 10px;\n           }\n           \n           .td_table{\n               text-align: left;\n               background-color:#D2C7BA;\n                width:100%;\n               padding: 12px;\n               font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n               font-size: 16px; line-height: 24px;\n           }\n           .td_table1{\n             text-align: left;\n              width:100%;\n               padding: 12px;\n               font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n               font-size: 16px; line-height: 24px;\n           }\n           .td_table2{\n               text-align: left; \n               width:50%;\n               padding: 12px; \n               font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n               font-size: 16px; line-height: 24px; \n               border-top: 2px dashed #D2C7BA; \n               border-bottom: 2px dashed #D2C7BA;\n           }\n           .td_table3{\n               text-align: left; \n               width:50%;\n               padding: 12px; \n               font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n               font-size: 16px; line-height: 24px; \n               border-top: 2px dashed #D2C7BA; \n               border-bottom: 2px dashed #D2C7BA;\n           }\n           .Payment_row{\n               text-align: left;\n               background-color:#ffffff;\n               padding: 24px; \n               font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n               font-size: 16px; line-height: 24px;\n               \n           }\n           .payment_Receipt{\n               text-align: left;\n               background-color: #ffffff;\n               padding: 36px 24px 0; \n               border-top: 3px solid #d4dadf;width:30%;\n           }\n           .Token_No{\n           width: 100%; \n           max-width: 600px;\n           border-top:1px solid #c1c1c1;\n           background-color: #fff;\n   \n               }\n               .Payment_method_bgmcolr{\n                   width: 600px;\n                   background-color: #fff;\n               }\n               \n               .Adress_row{\n                   text-align: left;\n                  padding-bottom: 36px; \n                   padding-left: 36px; \n                   font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n                   font-size: 16px; line-height: 24px;\n               }\n   \n          </style>\n        </head>\n    <body onload=\"window.print();window.close()\">${printContents}</body>\n      </html>`);\n    popupWin.document.close();\n  }\n  toggle() {\n    this.showHideDiv = !this.showHideDiv;\n  }\n  printPresecption(cmpName) {\n    let printContents, popupWin;\n    printContents = document.getElementById(cmpName).innerHTML;\n    popupWin = window.open('', '_blank', 'top=10,left=100,height=900,width=1000');\n    popupWin.document.write(`\n        <html>\n          <head>\n            <style>\n            body{  width: 99%;}\n            /**\n             * Google webfonts. Recommended to include the .woff version for cross-client compatibility.\n             */\n             @media screen {\n                 @font-face {\n                     font-family: 'Source Sans Pro';\n                     font-style: normal;\n                     font-weight: 400;\n                     src: local('Source Sans Pro Regular'), local('SourceSansPro-Regular'), url(https://fonts.gstatic.com/s/sourcesanspro/v10/ODelI1aHBYDBqgeIAH2zlBM0YzuT7MdOe03otPbuUS0.woff) format('woff');\n                 }\n     \n                 @font-face {\n                     font-family: 'Source Sans Pro';\n                     font-style: normal;\n                     font-weight: 700;\n                     src: local('Source Sans Pro Bold'), local('SourceSansPro-Bold'), url(https://fonts.gstatic.com/s/sourcesanspro/v10/toadOcfmlt9b38dHJxOBGFkQc6VGVFSmCnC_l7QZG60.woff) format('woff');\n                 }\n             }\n     \n             /**\n             * Avoid browser level font resizing.\n             * 1. Windows Mobile\n             * 2. iOS / OSX\n             */\n             body,\n             table,\n             td,\n             a {\n                 -ms-text-size-adjust: 100%; /* 1 */\n                 -webkit-text-size-adjust: 100%; /* 2 */\n             }\n     \n             /**\n             * Remove extra space added to tables and cells in Outlook.\n             */\n             table,\n             td {\n                 mso-table-rspace: 0pt;\n                 mso-table-lspace: 0pt;\n             }\n     \n             /**\n             * Better fluid images in Internet Explorer.\n             */\n             img {\n                 -ms-interpolation-mode: bicubic;\n             }\n     \n             /**\n             * Remove blue links for iOS devices.\n             */\n             a[x-apple-data-detectors] {\n                 font-family: inherit !important;\n                 font-size: inherit !important;\n                 font-weight: inherit !important;\n                 line-height: inherit !important;\n                 color: inherit !important;\n                 text-decoration: none !important;\n             }\n     \n             /**\n             * Fix centering issues in Android 4.4.\n             */\n             div[style*=\"margin: 16px 0;\"] {\n                 margin: 0 !important;\n             }\n     \n             body {\n                 width: 100% !important;\n                 height: 100% !important;\n                 padding: 0 !important;\n                 margin: 0 !important;\n             }\n     \n             /**\n             * Collapse table borders to avoid space between cells.\n             */\n             table {\n                 border-collapse: collapse !important;\n             }\n     \n             a {\n                 color: #1a82e2;\n             }\n     \n             img {\n                 height: auto;\n                 line-height: 100%;\n                 text-decoration: none;\n                 border: 0;\n                 outline: none;\n             }\n     \n             .heading_1 {\n                 background-color: #fff;\n                 padding: 36px 24px 0;\n                 border-top: 3px solid #d4dadf;\n                 font-family: sans-serif;\n                 font-size: 21px;\n                 font-weight: bold;\n                 letter-spacing: 0.2px;\n             }\n     \n             .tocken_no{\n                 font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;\n         font-size: 16px;\n         font-weight: bold;\n             }\n              .td_style{\n                 padding: 24px; \n                 font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n                 width: 50%;padding-bottom: 0px;\n                 padding-top: 10px;\n             }\n             \n             .td_table{\n                 text-align: left;\n                 background-color:#D2C7BA;\n                  width:100%;\n                 padding: 12px;\n                 font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n                 font-size: 16px; line-height: 24px;\n             }\n             .td_table1{\n               text-align: left;\n                width:100%;\n                 padding: 12px;\n                 font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n                 font-size: 16px; line-height: 24px;\n             }\n             .td_table2{\n                 text-align: left; \n                 width:50%;\n                 padding: 12px; \n                 font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n                 font-size: 16px; line-height: 24px; \n                 border-top: 2px dashed #D2C7BA; \n                 border-bottom: 2px dashed #D2C7BA;\n             }\n             .td_table3{\n                 text-align: left; \n                 width:50%;\n                 padding: 12px; \n                 font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n                 font-size: 16px; line-height: 24px; \n                 border-top: 2px dashed #D2C7BA; \n                 border-bottom: 2px dashed #D2C7BA;\n             }\n             .Payment_row{\n                 text-align: left;\n                 background-color:#ffffff;\n                 padding: 24px; \n                 font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n                 font-size: 16px; line-height: 24px;\n                 \n             }\n             .payment_Receipt{\n                 text-align: left;\n                 background-color: #ffffff;\n                 padding: 36px 24px 0; \n                 border-top: 3px solid #d4dadf;width:30%;\n             }\n             .Token_No{\n             width: 100%; \n             max-width: 600px;\n             border-top:1px solid #c1c1c1;\n             background-color: #fff;\n     \n                 }\n                 .Payment_method_bgmcolr{\n                     width: 600px;\n                     background-color: #fff;\n                 }\n                 \n                 .Adress_row{\n                     text-align: left;\n                    padding-bottom: 36px; \n                     padding-left: 36px; \n                     font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n                     font-size: 16px; line-height: 24px;\n                 }\n     \n            </style>\n          </head>\n      <body onload=\"window.print();window.close()\">${printContents}</body>\n        </html>`);\n    popupWin.document.close();\n  }\n  // searchPatient(val) {\n  //     if (this.actionName == 'New Appointment') {\n  //         this.applyFilter(val);\n  //     }\n  //     else if (this.actionName == 'Update Appointment') {\n  //         let details = this.patients.filter(\n  //             (a) => a.mobile == val && a.appointmentID != val.appointmentID\n  //         );\n  //         if (details.length > 0) {\n  //             this.mobNoAlreadyExists = true;\n  //             this.step1.controls['mobNum'].setValue();\n  //         }\n  //     }\n  // }\n  deleteAppointment(val) {\n    this.spinner.show();\n    this.appt.AppointmentID = Number(val.appointmentID);\n    this.utilitiesService.deleteAppointment(this.appt).subscribe(data => {\n      if (data) {\n        var c = data;\n        this._snackBar.open('Appointment Deleted Successfully...!!', '', {\n          \"duration\": 2000\n        });\n        this.spinner.hide();\n        this.getAllAppointments();\n      }\n    }, error => {\n      this.spinner.hide();\n      this.errorMessage = error;\n    }, () => {\n      this.spinner.hide();\n    });\n  }\n  showError(msg) {\n    this.toastService.show(msg, {\n      classname: 'bg-info text-light',\n      delay: 4000,\n      autohide: true,\n      headertext: 'Appointment Details!'\n    });\n  }\n  compare(a, b, isAsc) {\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n  }\n  ngAfterViewInit() {\n    this.todayBookings.sort = this.sort;\n  }\n  //==================Code related to Vitals======================//\n  createItem() {\n    return this._formBuilder.group({\n      Image: ['', Validators.required],\n      fileName: ['', Validators.required],\n      docType: ['', Validators.required]\n    });\n  }\n  createItem1() {\n    return this._formBuilder.group({\n      Image: ['', Validators.required],\n      fileName: ['', Validators.required],\n      docType: ['', Validators.required]\n    });\n  }\n  createMedicationItem() {\n    return this._formBuilder.group({\n      medicine: [''],\n      dose: [''],\n      when: [''],\n      frequencyListMedication: [''],\n      duration: [''],\n      notes: ['']\n    });\n  }\n  createMedicationItem1() {\n    return this._formBuilder.group({\n      medicine: [''],\n      dose: [''],\n      when: [''],\n      frequencyListMedication: [''],\n      duration: [''],\n      notes: ['']\n    });\n  }\n  addItem() {\n    this.items = this.vitalsForm.get('items');\n    this.items.push(this.createItem1());\n  }\n  addMedicationItem() {\n    this.medicationitems = this.vitalsForm.get('medicationitems');\n    this.medicationitems.push(this.createMedicationItem1());\n  }\n  get employees() {\n    return this.vitalsForm.get('items');\n  }\n  DeleteItem(idx) {\n    if (idx != 0) {\n      this.items.removeAt(idx);\n    }\n  }\n  DeleteMedicationItem(idx) {\n    if (idx != 0) {\n      this.medicationitems.removeAt(idx);\n    }\n  }\n  validatepri1(e) {\n    let input;\n    input = String.fromCharCode(e.which);\n    return !!/[0-9]/.test(input);\n  }\n  rowData(val) {\n    this.patientName = val.patient + \" \" + \"(\" + val.gender + \", Age \" + val.age + \")\";\n    this.vitalsForm.reset();\n    this.fruits = [];\n    this.flag = '1';\n    this.PatientID = val.patientID;\n    this.AppointmentID = val.appointmentID;\n    this.vitalsID = 0;\n    this.items = this.vitalsForm.get('items');\n    this.medicationitems = this.vitalsForm.get('medicationitems');\n    const arr = this.vitalsForm.controls.items;\n    arr.controls = [];\n    const arr1 = this.vitalsForm.controls.medicationitems;\n    arr1.controls = [];\n    this.addItem();\n    this.addMedicationItem();\n  }\n  vitalsCrud() {\n    this.flag = '4';\n    let arr = [];\n    arr.push({\n      flag: Number(this.flag)\n    });\n    var url = 'PatientsAppointments/VitalsCRUD/';\n    this.utilitiesService.CRUD(arr, url).subscribe(data => {\n      if (data) {\n        this.vitalsList = data;\n        this.vitals = data;\n      } else {}\n    }, () => {});\n  }\n  getDocs() {\n    this.flag = '4';\n    let arr = [];\n    arr.push({\n      flag: Number(this.flag)\n    });\n    var url = 'PatientsAppointments/DocsCrud/';\n    this.utilitiesService.CRUD(arr, url).subscribe(data => {\n      if (data) {\n        this.docs = data;\n        this.docsList = data;\n      } else {}\n    }, () => {});\n  }\n  //     changeDetected(val)\n  //     {\n  // \n  //         var s=0;\n  //         // if(val ==0)\n  //         // {\n  //         //     // this.horizontalStepperForm.setErrors({\n  //         //     //     invalid: true,\n  //         //     //   });\n  //         // }\n  //     }\n  getTimeChange(val) {\n    if (val == \"No Slot\") {\n      this.isNoSlot = true;\n    } else {\n      this.isNoSlot = false;\n    }\n  }\n  getSlotsWithDocID(val) {\n    this.selectedDate = this.step1.get('appDate').value;\n    var d = new Date(this.selectedDate);\n    var n = d.getDay();\n    let arr = [];\n    arr.push({\n      DoctorID: val\n    });\n    var url = 'PatientsAppointments/DoctorsAvailabilitySlots/';\n    this.utilitiesService.addUpdateVitals(arr, url).subscribe(data => {\n      if (data) {\n        this.slotsArr = data;\n        if (this.slotsArr.length == 0) {\n          //this.slotsArr[0].slot=\"No Slot\";\n          this.slotsArr.push({\n            day: 7,\n            rowid: 0,\n            doctorid: 0,\n            slot: 'No Slot'\n          });\n          this.step1.controls['slot'].setValue(this.slotsArr[0]);\n          this.isNoSlot = true;\n          //  this.horizontalStepperForm.setErrors({\n          //                 invalid: true,\n          //              });\n        } else {\n          let selDate = this.datepipe.transform(this.selectedDate, 'dd MMM yyyy');\n          let docAppointmentsOnSelectedDate = this.allAppointments.filter(a => a.doctorID == val && this.datepipe.transform(a.serviceDate, 'dd MMM yyyy') == selDate);\n          let dayOfWeekNumber = d.getDay();\n          // for (var i = 0; i < this.slotsArr.length; i++) {\n          for (var i = this.slotsArr.length; i >= 0; --i) {\n            if (dayOfWeekNumber == 0) {\n              dayOfWeekNumber = 7;\n            }\n            if (i == 0) {\n              if (dayOfWeekNumber != this.slotsArr[0].day) {\n                this.slotsArr.splice(0, 1);\n              }\n            } else {\n              if (dayOfWeekNumber != this.slotsArr[i - 1].day) {\n                this.slotsArr.splice(i, 1);\n              } else {\n                if (docAppointmentsOnSelectedDate.some(e => e.slotTime === this.slotsArr[i].slot)) {\n                  this.slotsArr.splice(i, 1);\n                }\n              }\n            }\n          }\n        }\n      } else {}\n    }, () => {});\n  }\n  getSlotsWithDocIDEdit(val, slotTime) {\n    this.selectedDate = this.step1.get('appDate').value;\n    var d = new Date(this.selectedDate);\n    var n = d.getDay();\n    let arr = [];\n    arr.push({\n      DoctorID: val\n    });\n    var url = 'PatientsAppointments/DoctorsAvailabilitySlots/';\n    this.utilitiesService.addUpdateVitals(arr, url).subscribe(data => {\n      if (data) {\n        this.slotsArr = data;\n        if (this.slotsArr.length == 0) {\n          //this.slotsArr[0].slot=\"No Slot\";\n          this.slotsArr.push({\n            day: 7,\n            rowid: 0,\n            doctorid: 0,\n            slot: 'No Slot'\n          });\n          this.step1.controls['slot'].setValue(this.slotsArr[0]);\n          //  this.horizontalStepperForm.setErrors({\n          //                 invalid: true,\n          //              });\n          this.isNoSlot = true;\n        } else {\n          let selDate = this.datepipe.transform(this.selectedDate, 'dd MMM yyyy');\n          //let docAppointmentsOnSelectedDate = this.allAppointments.filter(a => a.doctorID == val && this.datepipe.transform(a.serviceDate, 'dd MMM yyyy') == selDate)\n          //  for (var i = 0; i < this.slotsArr.length; i++) {\n          //      if (docAppointmentsOnSelectedDate.some(e => e.slotTime === this.slotsArr[i].slot)) {\n          //          this.slotsArr.splice(i, 1);\n          //      }\n          //  }\n          let sl = this.slotsArr.filter(a => a.slot == slotTime);\n          this.step1.controls['slot'].setValue(sl[0]);\n        }\n      } else {}\n    }, () => {});\n  }\n  bindMobileNo() {\n    // this.horizontalStepperForm.step1.mobNum.setValue(this.searchKey3)\n    this.step1.controls['mobNum'].setValue(this.searchKey3);\n    // this.horizontalStepperForm.controls.step1['mobNum'].setValue(this.searchKey3);\n    //this.horizontalStepperForm.value.step1.mobNum=this.searchKey3\n  }\n\n  getComplaints() {\n    this.flag = '4';\n    let arr = [];\n    arr.push({\n      flag: Number(this.flag)\n    });\n    var url = 'PatientsAppointments/ComplaintsCrud/';\n    this.utilitiesService.CRUD(arr, url).subscribe(data => {\n      if (data) {\n        this.complaints = data;\n        this.complaintsList = data;\n      } else {}\n    }, () => {});\n  }\n  getVisitReason() {\n    this.flag = '4';\n    let arr = [];\n    arr.push({\n      flag: Number(this.flag)\n    });\n    var url = 'PatientsAppointments/VisitReason_Crud/';\n    this.utilitiesService.CRUD(arr, url).subscribe(data => {\n      if (data) {\n        this.visitReason = data;\n        this.visitReasonList = data;\n      } else {}\n    }, () => {});\n  }\n  addUpdateVitals(val) {\n    let itemArr = [];\n    for (var i = 0; i < val.items.length; i++) {\n      if (val.items[i].docType != null) {\n        itemArr.push({\n          AppointmentID: this.AppointmentID,\n          DocumentTypeID: val.items[i].docType.documentTypeID\n          //  , DocTypeNAme: val.items[i].Image\n          ,\n\n          DocTypeNAme: \"VitalsDocs\\\\\" + val.items[i].Image.split(\"\\\\\").pop()\n        });\n      } else {\n        itemArr.push({\n          AppointmentID: this.AppointmentID,\n          DocumentTypeID: undefined\n          //  , DocTypeNAme: val.items[i].Image\n          ,\n\n          DocTypeNAme: \"VitalsDocs\\\\\"\n        });\n      }\n    }\n    let medicationArr = [];\n    for (var i = 0; i < val.medicationitems.length; i++) {\n      medicationArr.push({\n        vitalsID: this.AppointmentID,\n        medicine: val.medicationitems[i].medicine,\n        dose: val.medicationitems[i].dose,\n        when: val.medicationitems[i].when,\n        frequencyListMedication: val.medicationitems[i].frequencyListMedication,\n        duration: val.medicationitems[i].duration,\n        notes: val.medicationitems[i].notes\n      });\n    }\n    let compArr = [];\n    for (var i = 0; i < this.fruits.length; i++) {\n      compArr.push({\n        ComplaintName: this.fruits[i]\n      });\n    }\n    var DoctorCompleted = 0;\n    var Status = '';\n    if (this.roleID == 2) {\n      DoctorCompleted = 1;\n      Status = 'Completed';\n    } else if (this.roleID == 5) {\n      Status = 'Arrived';\n    }\n    let arr = [];\n    arr.push({\n      flag: Number(this.flag),\n      VitalsID: Number(this.vitalsID),\n      BMI: val.BMI,\n      SpO2: val.SpO2,\n      BloodGroup: val.bloodGroup,\n      BP: val.bloodPressure,\n      Pulse: val.pulse,\n      Serum_Creatinine: val.serumCreatinine,\n      Temperature_F: val.temp,\n      VisitReasonID: Number(val.visitReason),\n      DoctorCompleted: Number(DoctorCompleted),\n      Weight: val.weight,\n      comp: compArr,\n      medicine: medicationArr,\n      PatientID: Number(this.PatientID),\n      AppointmentID: Number(this.AppointmentID),\n      vitalDocs: itemArr,\n      advice: val.advice,\n      nextVisit: val.nextVisit,\n      frequency: val.frequency,\n      pickADate: val.pickADate,\n      status: Status\n    });\n    var url = 'PatientsAppointments/VitalsCRUD/';\n    this.utilitiesService.addUpdateVitals(arr, url).subscribe(\n    //this.utilitiesService.CRUD(arr, url).subscribe(\n    data => {\n      if (data == '1') {\n        // \n        // this.Screen = 1;\n        // this.detailData.vitalId = this.afterSaveVitalId;\n        // this.onRowClicked(this.detailData)\n        this.fruits = [];\n        this._snackBar.open('Vitals Added Successfully...!!', 'ok', {\n          horizontalPosition: this.horizontalPosition,\n          verticalPosition: this.verticalPosition,\n          \"duration\": 2000\n        });\n        // this.getAllAppointmentsAfterSAve();\n        this.Screen = 1;\n        this.ngOnInit();\n      } else {}\n    }, () => {});\n  }\n  getAllAppointmentsAfterSAve() {\n    this.spinner.show();\n    this.utilitiesService.getAllAppointments().subscribe(data => {\n      if (data) {\n        this.allAppointments = data;\n        if (this.detailData) this.afterSaveVitalId = this.allAppointments.filter(a => a.appointmentID == this.detailData.appointmentID).vitalsID;\n        this.date = new Date();\n        this.date.setHours(0, 0, 0, 0);\n        let todayDate = this.datepipe.transform(this.date, 'dd MMM yyyy');\n        const dateforToday = new Date();\n        if (this.roleID != 2) {\n          //Today Bookings\n          this.todayBookings = data.filter(a => a.serviceDate == todayDate);\n          this.selection = new Set() < this.todayBookings > true;\n          //Future Bookings\n          this.upcomingBookings = data.filter(a => new Date(a.serviceDate) > new Date(dateforToday));\n          //All Bookings\n          // this.patientsappointments = data.filter((a) => new Date(a.serviceDate) < new Date(dateforToday));\n          this.patientsappointments = data;\n          // this.filterPatientappointments =data.filter((v, i, a) => a.indexOf(v) === i); \n        } else {\n          // this.registrationID=this.loginDetails.registrationID;\n          this.todayBookings = data.filter(a => a.serviceDate == todayDate && a.doctorID == this.registrationID);\n          this.selection = new Set() < this.todayBookings > true;\n          //Future Bookings\n          this.upcomingBookings = data.filter(a => new Date(a.serviceDate) > new Date(dateforToday) && a.doctorID == this.registrationID);\n          //All Bookings\n          this.patientsappointments = data.filter(a => a.doctorID == this.registrationID);\n        }\n        // //Today Bookings\n        // this.todayBookings = data.filter((a) => a.serviceDate == todayDate);\n        // this.selection = new Set < this.todayBookings > (true);\n        // //Future Bookings\n        // this.upcomingBookings = data.filter((a) => new Date(a.serviceDate) > new Date(dateforToday));\n        // //All Bookings\n        // // this.patientsappointments = data.filter((a) => new Date(a.serviceDate) < new Date(dateforToday));\n        // this.patientsappointments = data;\n        // // this.filterPatientappointments =data.filter((v, i, a) => a.indexOf(v) === i); \n        this.filterPatientappointments = data.filter((thing, i, arr) => arr.findIndex(t => t.mobile === thing.mobile && t.patient === thing.patient) === i);\n      }\n      this.todayBookings = new MatTableDataSource(this.todayBookings);\n      this.upcomingBookings = new MatTableDataSource(this.upcomingBookings);\n      this.patientsappointments = new MatTableDataSource(this.patientsappointments);\n      this.detailData.vitalID = this.afterSaveVitalId;\n      if (this.roleID == 2) {\n        this.onRowClickedAfterSAve(this.detailData);\n      }\n      this.todayBookings.filterPredicate = this.createFilter();\n      this.filterSelectObj.filter(o => {\n        o.options = this.getFilterObject(this.todayDataSourceBookings, o.columnProp);\n      });\n      this.spinner.hide();\n    }, () => {\n      this.spinner.hide();\n    });\n  }\n  onRowClickedAfterSAve(row) {\n    // this.rowClickedData=row;\n    this.Screen = 2;\n    this.detailData = row;\n    this.viewHistory(row);\n    this.fruits = [];\n    // this.vitalsForm.reset();\n    if (row.vitalsID) {\n      this.setValues(row);\n    } else {\n      this.patientName = row.patient + \" \" + \"(\" + row.gender + \", Age \" + row.age + \")\";\n      // this.vitalsForm.reset();\n      // this.fruits = [];\n      this.flag = '1';\n      this.PatientID = row.patientID;\n      this.AppointmentID = row.appointmentID;\n      this.vitalsID = 0;\n      this.items = this.vitalsForm.get('items');\n      this.medicationitems = this.vitalsForm.get('medicationitems');\n      // const arr = <FormArray>this.vitalsForm.controls.items;\n      // arr.controls = [];\n      // this.addItem();\n      // console.log('Row clicked: ', row);\n    }\n  }\n\n  GetComplaintsXML() {\n    this.spinner.show();\n    this.appt.VitalsID = Number(this.vitalsID);\n    this.utilitiesService.GetComplaintsXML(this.appt).subscribe(data => {\n      if (data) {\n        this.fruits = [];\n        this.complaintsXML = data;\n        for (var i = 0; i < this.complaintsXML.length; i++) {\n          this.fruits.push(data[i].complaintName);\n        }\n      } else {\n        this.spinner.hide();\n      }\n    }, () => {\n      this.spinner.hide();\n    });\n  }\n  GetDocumentsXML() {\n    this.appt.VitalsID = Number(this.vitalsID);\n    this.utilitiesService.GetDocumentsXML(this.appt).subscribe(data => {\n      if (data) {\n        this.docsXml = data;\n        this.items = this.vitalsForm.get('items');\n        const arr = this.vitalsForm.controls.items;\n        arr.controls = [];\n        for (var i = 0; i < this.docsXml.length; i++) {\n          let uom = this.docs.filter(a => a.documentTypeID == this.docsXml[i].documentTypeID);\n          this.items.push(this._formBuilder.group({\n            Image: [this.docsXml[i].docTypeNAme],\n            fileName: [this.docsXml[i].docTypeNAme],\n            docType: [uom[0]]\n          }));\n        }\n        this.spinner.hide();\n      } else {\n        this.spinner.hide();\n      }\n    }, () => {\n      this.spinner.hide();\n    });\n  }\n  GetMedicineXML() {\n    this.appt.VitalsID = Number(this.vitalsID);\n    this.utilitiesService.GetMedicineXML(this.appt).subscribe(data => {\n      if (data) {\n        this.medicineXml = data;\n        this.medicationitems = this.vitalsForm.get('medicationitems');\n        const arr = this.vitalsForm.controls.medicationitems;\n        arr.controls = [];\n        for (var i = 0; i < this.medicineXml.length; i++) {\n          this.medicationitems.push(this._formBuilder.group({\n            medicine: [this.medicineXml[i].medicine],\n            dose: [this.medicineXml[i].dose],\n            when: [this.medicineXml[i].when],\n            frequencyListMedication: [this.medicineXml[i].frequencyListMedication],\n            duration: [this.medicineXml[i].duration],\n            notes: [this.medicineXml[i].notes]\n          }));\n        }\n        this.spinner.hide();\n      } else {\n        this.spinner.hide();\n      }\n    }, () => {\n      this.spinner.hide();\n    });\n  }\n  setValues(val) {\n    this.flag = '2';\n    this.vitalsID = val.vitalsID;\n    this.PatientID = val.patientID;\n    this.AppointmentID = val.appointmentID;\n    this.advice = val.advice;\n    this.nextvisit = val.nextVisit;\n    this.GetComplaintsXML();\n    this.GetDocumentsXML();\n    this.GetMedicineXML();\n    this.vitals = this.vitalsList.filter(a => a.vitalsID === this.vitalsID);\n    if (this.vitals.length > 0) {\n      this.vitalsForm.controls['weight'].setValue(this.vitals[0].weight);\n      this.vitalsForm.controls['bloodGroup'].setValue(this.vitals[0].bloodGroup);\n      this.vitalsForm.controls['temp'].setValue(this.vitals[0].temperature_F);\n      this.vitalsForm.controls['serumCreatinine'].setValue(this.vitals[0].serum_Creatinine);\n      this.vitalsForm.controls['bloodPressure'].setValue(this.vitals[0].bp);\n      this.vitalsForm.controls['pulse'].setValue(this.vitals[0].pulse);\n      this.vitalsForm.controls['SpO2'].setValue(this.vitals[0].spO2);\n      this.vitalsForm.controls['BMI'].setValue(this.vitals[0].bmi);\n      this.vitalsForm.controls['visitReason'].setValue(this.vitals[0].visitReasonID);\n      this.vitalsForm.controls['advice'].setValue(this.vitals[0].advice);\n      this.vitalsForm.controls['nextVisit'].setValue(this.vitals[0].nextVisit);\n      this.vitalsForm.controls['pickADate'].setValue(this.vitals[0].pickADate);\n      this.vitalsForm.controls['frequency'].setValue(this.vitals[0].frequency);\n    }\n  }\n  detectFiles(event, item) {\n    //this.urls = [];\n    let files = event.target.files;\n    if (files) {\n      for (let file of files) {\n        let reader = new FileReader();\n        reader.onload = e => {};\n        reader.readAsDataURL(file);\n      }\n      this.fileChange(event);\n    }\n    if (files.length >= 1) {\n      item.patchValue({\n        fileName: files[0].name\n      });\n    }\n  }\n  //This is for Uploading Multiple Image\n  fileChange(event) {\n    let fileList = event.target.files;\n    let fileToUpload = fileList[0];\n    const formData = new FormData();\n    formData.append('file', fileToUpload, fileToUpload.name);\n    this.http.post(this.API_URL + 'PatientsAppointments/upload', formData, {\n      reportProgress: true\n    }).subscribe(data => {\n      this.fileName = fileList[0].name;\n    });\n  }\n  viewHistory(val) {\n    let arr = [];\n    arr.push({\n      PatientID: Number(val.patientID)\n    });\n    var url = 'PatientsAppointments/PatientHistory/';\n    this.utilitiesService.CRUD(arr, url).subscribe(data => {\n      if (data) {\n        const dateforToday = new Date();\n        this.patientHistory = data;\n        this.patientHistory = this.patientHistory.filter(a => new Date(a.serviceDate) <= new Date(dateforToday));\n        // this.patientHistoryList = data;\n        // this.patientHistory.splice(0, 1); -- If you need to splice today data in Previous Visit tab \n        // this.patientHistoryList.splice(0, 1);\n        for (var i = 0; i < this.patientHistory.length; i++) {\n          if (this.patientHistory[i].vitalsID > 0) {\n            this.GetComplaintsListXML(this.patientHistory[i].vitalsID, this.patientHistory[i]);\n            this.GetMedicineListXML(this.patientHistory[i].vitalsID, this.patientHistory[i]);\n            this.GetDocumentListXML(this.patientHistory[i].vitalsID, this.patientHistory[i]);\n          }\n        }\n      } else {}\n    }, () => {});\n  }\n  GetComplaintsListXML(val, history) {\n    // this.spinner.show();\n    this.apptList.VitalsID = val;\n    this.utilitiesService.GetComplaintsXML(this.apptList).subscribe(data => {\n      if (data) {\n        // this.fruitsDAta = [];\n        var s = \" \";\n        this.complaintsXMLList = data;\n        if (this.complaintsXMLList.length > 0) {\n          for (var i = 0; i < this.complaintsXMLList.length; i++) {\n            if (s == \"\") data[i].complaintName;else s = s + ',' + data[i].complaintName;\n          }\n          history.complaintName = s;\n        }\n      } else {\n        // this.spinner.hide();\n      }\n    }, () => {});\n  }\n  GetMedicineListXML(val, history) {\n    this.apptList.VitalsID = val;\n    this.utilitiesService.GetMedicineXML(this.apptList).subscribe(data => {\n      if (data) {\n        this.medicineXml = data;\n        //this.medicationitems = this.vitalsForm.get('medicationitems') as FormArray;\n        // const arr = <FormArray>this.vitalsForm.controls.medicationitems;\n        //  arr.controls = [];\n        this.medicineList = [];\n        for (var i = 0; i < this.medicineXml.length; i++) {\n          this.medicineList.push(this.medicineXml[i]);\n          // this.medicationitems.push(this._formBuilder.group({\n          //     medicine: [this.medicineXml[i].medicine],\n          //     dose: [this.medicineXml[i].dose],\n          //     when: [this.medicineXml[i].when],\n          //     frequencyListMedication: [this.medicineXml[i].frequencyListMedication],\n          //     duration: [this.medicineXml[i].duration],\n          //     notes: [this.medicineXml[i].notes]\n          // }));\n        }\n\n        history.medicineList = this.medicineList;\n        this.spinner.hide();\n      } else {\n        this.spinner.hide();\n      }\n    }, () => {\n      this.spinner.hide();\n    });\n  }\n  DownloadDocument(fileDownloadPath) {\n    var _this = this;\n    this.fileUrl = fileDownloadPath; //\"wwwroot/SiteDocument/SiteDemo1/FileDocument.doc\" static file path\n    this.utilitiesService.DocumentsDownload(this.fileUrl).subscribe( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (event) {\n        var _a;\n        let data = event;\n        const downloadedFile = new Blob([data.body], {\n          type: (_a = data.body) === null || _a === void 0 ? void 0 : _a.type\n        });\n        console.log(\"ddd\", downloadedFile);\n        if (downloadedFile.type != \"\") {\n          const a = document.createElement('a');\n          a.setAttribute('style', 'display:none;');\n          document.body.appendChild(a);\n          a.download = _this.fileUrl;\n          a.href = URL.createObjectURL(downloadedFile);\n          a.target = '_blank';\n          a.click();\n          document.body.removeChild(a);\n        }\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n  GetDocumentListXML(val, history) {\n    debugger;\n    this.apptList.VitalsID = val;\n    this.utilitiesService.GetDocumentsXML(this.apptList).subscribe(data => {\n      debugger;\n      if (data) {\n        this.docsXml = data;\n        this.docsList = [];\n        for (var i = 0; i < this.docsXml.length; i++) {\n          this.docsList.push(this.docsXml[i]);\n          this.labreportfiles.push(this.docsList[i].docTypeNAme.slice(11));\n        }\n        // var splitted = this.docsList[0].docTypeNAme.slice(11);\n        this.fileUrl = this.docsList[0].docTypeNAme.slice(11);\n        // this.filename=this.docsList[0].value.docTypeNAme;\n        history.documents = this.docsList;\n        this.spinner.hide();\n      } else {\n        this.spinner.hide();\n      }\n    }, () => {\n      this.spinner.hide();\n    });\n  }\n  appoinmentLink() {\n    //this._router.navigate(['/Appointments']);\n    this.Screen = 1;\n    this.ngOnInit();\n  }\n  GetMedicineData() {\n    this.medicineService.GetMedicineList().subscribe(data => {\n      if (data) {\n        if (this.roleID == 2) {\n          this.medicinePrescepList = data;\n          // this.medicinePrescepList = this.medicinePrescepList.filter((a) => a.medic == this.registrationID);\n        } else this.medicinePrescepList = data;\n      }\n    }, () => {});\n  }\n};\n__decorate([ViewChild('fruitInput')], AppointmentsComponent.prototype, \"fruitInput\", void 0);\n__decorate([ViewChild(\"myNameElem\")], AppointmentsComponent.prototype, \"myNameElem\", void 0);\n__decorate([ViewChild('appointmentDrawer')], AppointmentsComponent.prototype, \"appointmentDrawer\", void 0);\n__decorate([ViewChild('editCompanyModal')], AppointmentsComponent.prototype, \"editCompanyModal\", void 0);\n__decorate([ViewChild('presecptionModal')], AppointmentsComponent.prototype, \"presecptionModal\", void 0);\n__decorate([ViewChild('horizontalStepper')], AppointmentsComponent.prototype, \"horizontalStepper\", void 0);\n__decorate([ViewChild(MatSort)], AppointmentsComponent.prototype, \"sort\", void 0);\n__decorate([ViewChild(MatPaginator)], AppointmentsComponent.prototype, \"paginator\", void 0);\n__decorate([ViewChild('HistoryPaginator')], AppointmentsComponent.prototype, \"HistoryPaginator\", void 0);\n__decorate([ViewChild('upcomingPaginator', {\n  static: true\n})], AppointmentsComponent.prototype, \"upcomingPaginator\", void 0);\n__decorate([ViewChild('appointmentForm')], AppointmentsComponent.prototype, \"myForm\", void 0);\nAppointmentsComponent = __decorate([Component({\n  selector: 'app-appointments',\n  templateUrl: './appointments.component.html',\n  styleUrls: ['./appointments.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [DatePipe]\n})], AppointmentsComponent);\nexport { AppointmentsComponent };","map":{"version":3,"names":["__decorate","ViewEncapsulation","Component","ViewChild","MatPaginator","MatSort","MatTableDataSource","DatePipe","COMMA","ENTER","environment","FormControl","Validators","map","startWith","MatDialogConfig","AppointmentsComponent","constructor","patientsService","medicineService","_formBuilder","activatedRoute","utilitiesService","datepipe","toastService","_snackBar","generalService","http","spinner","_liveAnnouncer","_router","dialog","dateAdapter","patientHistorys","myControl","options","tabWay","API_URL","selectable","removable","separatorKeysCodes","fruitCtrl","fruits","allFruits","frequencyList","medicine","frequencyListMedication","dose","when","duration","durationInSeconds","horizontalPosition","verticalPosition","actionName","appointmentButton","appt","appointmentModel","doctors","action","services","status","slots","discounts","prices","genders","upcomingBookings","todayBookings","todayDataSourceBookings","todayDataSourcePrintBookings","upcomingDataSourceBookings","filename","patientsappointments","filterPatientappointments","patientID","appointID","mobNoAlreadyExists","patients","selection","panelOpenState","complaintsList","complaints","visitReasonList","visitReason","docs","docsList","slotsArr","vitalsList","vitals","complaintsXML","docsXml","medicineXml","patientHistory","patientsappointment","patientHistoryList","filteredAppointments","isChecked","isPriceTag","isDuePay","isNoSlot","nextDisabled","Screen","detailData","apptList","complaintsXMLList","medicineList","medicinePrescepList","afterSaveVitalId","actualPrice","Mode","BloodGroup","receiptToken","showHideDiv","filterValues","filterSelectObj","labreportfiles","dataSource","displayedColumns","displayedColumnsHistory","displayedColumnsUpcoming","doFilter","value","state","filter","trim","toLocaleLowerCase","searchKey1","searchKey2","searchKey","uploadFile","files","length","fileToUpload","formData","FormData","append","name","post","reportProgress","observe","subscribe","event","columnProp","setLocale","filteredFruits","valueChanges","pipe","fruit","_filter","slice","loginDetails","JSON","parse","localStorage","getItem","roleID","registrationID","filteredOptions","filterStates","mobile","toLowerCase","indexOf","add","some","e","push","addComplaints","chipInput","clear","setValue","val","arr","flag","Number","ComplaintName","url","CRUD","data","applyFilters","remove","index","splice","selected","option","viewValue","fruitInput","nativeElement","ngOnInit","addStaticData","getDocs","getComplaints","getVisitReason","vitalsCrud","getAllAppointments","getAllDoctors","getServices","getSlots","getGenders","getAllAppointmentBills","getDiscounts","getAllPatients","GetMedicineData","btnText","horizontalStepperForm","group","step1","appDate","Date","slot","required","docName","firstName","mobNum","gender","age","step2","serviceName","price","discount","amountPaid","skipPayment","netPrice","duePayment","modeOfPayment","vitalsForm","weight","bloodGroup","temp","serumCreatinine","bloodPressure","pulse","SpO2","BMI","advice","nextVisit","frequency","pickADate","items","array","createItem","medicationitems","createMedicationItem","ngOnDestroy","removeItem","filterChange","stringify","getFilterObject","fullObj","key","uniqChk","obj","includes","createFilter","filterFunction","searchTerms","isFilterSet","col","toString","console","log","nameSearch","found","split","forEach","word","ID","label","onRowClicked","row","viewHistory","reset","vitalsID","setValues","patientName","patient","PatientID","AppointmentID","appointmentID","get","onRowPrintPresecptionClicked","ViewPrescption","filterAppointemnts","filtered","query","i","allAppointments","country","show","date","setHours","todayDate","transform","dateforToday","a","serviceDate","Set","doctorID","thing","findIndex","t","sort","b","paginator","upcomingPaginator","HistoryPaginator","todayDate1","modeofPaymentID","openCompanyDetailsDialog","filterPredicate","o","hide","resetFilters","modelValue","undefined","sortData","active","direction","patientARCID","visitCount","GetAllPatients","getStatuses","getAllGenders","onSearchClear","searchKey3","onAppointmentClear","onCheckboxChange","checked","actionFormName","horizontalStepper","selectedIndex","controls","enable","applyNetPrice","pricList","discList","priceID","discountID","disco","displayFn","user","applyFilter","details","disable","genderID","addUpdateAppointments","AppointmentDate","AppointmentTime","appTime","Doctor","FirstName","Mobile","Age","Status","ServiceName","Qty","qty","Price","Discount","disc","Tax","tax","Action","UploadFile","PostData","then","err","updateSelect","updateSelectDuePay","appointmentId","appointmentDate","getSlotsWithDocIDEdit","slotTime","serviceID","payment","addRegisterPatientAppointment","ServiceID","Slot","StatusID","ServiceDate","AppointmentBill","PriceID","DiscountID","Payment","DuePayment","due","PatientName","GenderID","PatientStatus","open","showError","error","errorMessage","dialogConfig","restoreFocus","autoFocus","role","disableClose","editCompanyDialogRef","editCompanyModal","afterClosed","result","presecptionModalDialogRef","presecptionModal","closeCompanyDetailsDialog","close","closePrecesptionDialog","print","cmpName","print1","printSingle","printContents","popupWin","document","getElementById","innerHTML","window","write","toggle","printPresecption","deleteAppointment","c","msg","classname","delay","autohide","headertext","compare","isAsc","ngAfterViewInit","Image","fileName","docType","createItem1","notes","createMedicationItem1","addItem","addMedicationItem","employees","DeleteItem","idx","removeAt","DeleteMedicationItem","validatepri1","input","String","fromCharCode","which","test","rowData","arr1","getTimeChange","getSlotsWithDocID","selectedDate","d","n","getDay","DoctorID","addUpdateVitals","day","rowid","doctorid","selDate","docAppointmentsOnSelectedDate","dayOfWeekNumber","sl","bindMobileNo","itemArr","DocumentTypeID","documentTypeID","DocTypeNAme","pop","medicationArr","compArr","DoctorCompleted","VitalsID","BP","Pulse","Serum_Creatinine","Temperature_F","VisitReasonID","Weight","comp","vitalDocs","getAllAppointmentsAfterSAve","vitalID","onRowClickedAfterSAve","GetComplaintsXML","complaintName","GetDocumentsXML","uom","docTypeNAme","GetMedicineXML","nextvisit","temperature_F","serum_Creatinine","bp","spO2","bmi","visitReasonID","detectFiles","item","target","file","reader","FileReader","onload","readAsDataURL","fileChange","patchValue","fileList","GetComplaintsListXML","GetMedicineListXML","GetDocumentListXML","history","s","DownloadDocument","fileDownloadPath","fileUrl","DocumentsDownload","_a","downloadedFile","Blob","body","type","createElement","setAttribute","appendChild","download","href","URL","createObjectURL","click","removeChild","documents","appoinmentLink","GetMedicineList","prototype","static","selector","templateUrl","styleUrls","encapsulation","None","providers"],"sources":["D:/Rheumatology/CMS_Ui/src/app/modules/pages/appointments/appointments.component.ts"],"sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { ViewEncapsulation, Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { environment } from 'environments/environment';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { map, startWith } from 'rxjs/operators';\r\n//import { FuseConfirmationDialogComponent } from '@fuse/services/confirmation/dialog/dialog.component'\r\nimport { MatDialogConfig } from '@angular/material/dialog';\r\n// import { debug } from 'console';\r\nlet AppointmentsComponent = class AppointmentsComponent {\r\n    constructor(patientsService, medicineService, _formBuilder, activatedRoute, utilitiesService, datepipe, toastService, _snackBar, generalService, http, spinner, _liveAnnouncer, _router, dialog, dateAdapter) {\r\n        this.patientsService = patientsService;\r\n        this.medicineService = medicineService;\r\n        this._formBuilder = _formBuilder;\r\n        this.activatedRoute = activatedRoute;\r\n        this.utilitiesService = utilitiesService;\r\n        this.datepipe = datepipe;\r\n        this.toastService = toastService;\r\n        this._snackBar = _snackBar;\r\n        this.generalService = generalService;\r\n        this.http = http;\r\n        this.spinner = spinner;\r\n        this._liveAnnouncer = _liveAnnouncer;\r\n        this._router = _router;\r\n        this.dialog = dialog;\r\n        this.dateAdapter = dateAdapter;\r\n        this.patientHistorys = [];\r\n        this.myControl = new FormControl();\r\n        this.options = ['One', 'Two', 'Three'];\r\n        this.tabWay = \"vert\";\r\n        this.API_URL = environment.API_URL;\r\n        this.selectable = true;\r\n        this.removable = true;\r\n        this.separatorKeysCodes = [ENTER, COMMA];\r\n        this.fruitCtrl = new FormControl();\r\n        this.fruits = [];\r\n        this.allFruits = ['Apple', 'Lemon', 'Lime', 'Orange', 'Strawberry'];\r\n        this.frequencyList = [];\r\n        this.medicine = [];\r\n        this.frequencyListMedication = [];\r\n        this.dose = [];\r\n        this.when = [];\r\n        this.duration = [];\r\n        this.durationInSeconds = 5;\r\n        this.horizontalPosition = 'right';\r\n        this.verticalPosition = 'top';\r\n        this.actionName = 'New Appointment';\r\n        this.appointmentButton = 'Create Appointment';\r\n        this.appt = {};\r\n        this.appointmentModel = {};\r\n        this.doctors = [];\r\n        this.action = 'Save';\r\n        this.services = [];\r\n        this.status = [];\r\n        this.slots = [];\r\n        this.discounts = [];\r\n        this.prices = [];\r\n        this.genders = [];\r\n        this.upcomingBookings = [];\r\n        this.todayBookings = [];\r\n        this.todayDataSourceBookings = [];\r\n        this.todayDataSourcePrintBookings = [];\r\n        this.upcomingDataSourceBookings = [];\r\n        this.filename = [];\r\n        this.patientsappointments = [];\r\n        this.filterPatientappointments = [];\r\n        this.patientID = 0;\r\n        this.appointID = 0;\r\n        this.mobNoAlreadyExists = false;\r\n        this.patients = [];\r\n        this.selection = [];\r\n        this.panelOpenState = false;\r\n        this.complaintsList = [];\r\n        this.complaints = [];\r\n        this.visitReasonList = [];\r\n        this.visitReason = [];\r\n        this.docs = [];\r\n        this.docsList = [];\r\n        this.slotsArr = [];\r\n        this.vitalsList = [];\r\n        this.vitals = [];\r\n        this.complaintsXML = [];\r\n        this.docsXml = [];\r\n        this.medicineXml = [];\r\n        this.patientHistory = [];\r\n        this.patientsappointment = new MatTableDataSource(this.todayDataSourceBookings);\r\n        this.patientHistoryList = [];\r\n        this.filteredAppointments = [];\r\n        this.isChecked = false;\r\n        this.isPriceTag = true;\r\n        this.isDuePay = false;\r\n        this.isNoSlot = false;\r\n        this.nextDisabled = true;\r\n        this.Screen = 1;\r\n        this.detailData = [];\r\n        this.apptList = {};\r\n        this.complaintsXMLList = [];\r\n        this.medicineList = [];\r\n        this.medicinePrescepList = [];\r\n        this.afterSaveVitalId = 0;\r\n        this.actualPrice = 0;\r\n        // rowClickedData:any=[];\r\n        this.Mode = [];\r\n        this.BloodGroup = [];\r\n        this.receiptToken = 0;\r\n        this.showHideDiv = false;\r\n        this.filterValues = {};\r\n        this.filterSelectObj = [];\r\n        this.labreportfiles = [];\r\n        this.dataSource = new MatTableDataSource();\r\n        this.displayedColumns = [\r\n            'SL',\r\n            'Patient',\r\n            'Service',\r\n            'Doctor',\r\n            'Time',\r\n            'WaitingTime',\r\n            'Status',\r\n            'VisitCount',\r\n            'ReceiptToken',\r\n            'Billing',\r\n            'Actions',\r\n            'Vitals',\r\n            'View'\r\n        ];\r\n        this.displayedColumnsHistory = [\r\n            'SL',\r\n            'Patient',\r\n            'Service',\r\n            'Doctor',\r\n            'Time',\r\n            'VisitCount',\r\n            'View'\r\n        ];\r\n        this.displayedColumnsUpcoming = [\r\n            'SL',\r\n            'Patient',\r\n            'Service',\r\n            'Doctor',\r\n            'Time',\r\n            'WaitingTime',\r\n            'VisitCount',\r\n            'Billing',\r\n            'Actions'\r\n        ];\r\n        this.doFilter = (value, state) => {\r\n            if (state == 1) {\r\n                this.todayBookings.filter = value.trim().toLocaleLowerCase();\r\n                this.upcomingBookings.filter = '';\r\n                this.patientsappointments.filter = '';\r\n                this.searchKey1 = '';\r\n                this.searchKey2 = '';\r\n            }\r\n            else if (state == 2) {\r\n                this.upcomingBookings.filter = value.trim().toLocaleLowerCase();\r\n                this.todayBookings.filter = '';\r\n                this.patientsappointments.filter = '';\r\n                this.searchKey = '';\r\n                this.searchKey2 = '';\r\n            }\r\n            else if (state == 3) {\r\n                this.patientsappointments.filter = value.trim().toLocaleLowerCase();\r\n                this.todayBookings.filter = '';\r\n                this.upcomingBookings.filter = '';\r\n                this.searchKey1 = '';\r\n                this.searchKey = '';\r\n            }\r\n        };\r\n        this.uploadFile = (files) => {\r\n            if (files.length === 0) {\r\n                return;\r\n            }\r\n            this.API_URL + 'PatientsAppointments/upload';\r\n            let fileToUpload = files[0];\r\n            const formData = new FormData();\r\n            formData.append('file', fileToUpload, fileToUpload.name);\r\n            this.http.post(this.API_URL, formData, { reportProgress: true, observe: 'events' })\r\n                .subscribe(event => {\r\n            });\r\n        };\r\n        // Object to create Filter for\r\n        this.filterSelectObj = [\r\n            // {\r\n            //   name: 'ID',\r\n            //   columnProp: 'patientARCID',\r\n            //   options: []\r\n            // }, \r\n            {\r\n                name: 'Patient NAME',\r\n                columnProp: 'patient',\r\n                options: []\r\n            },\r\n            //{\r\n            //   name: 'USERNAME',\r\n            //   columnProp: 'username',\r\n            //   options: []\r\n            // }, {\r\n            //   name: 'EMAIL',\r\n            //   columnProp: 'email',\r\n            //   options: []\r\n            // }, \r\n            {\r\n                name: 'STATUS',\r\n                columnProp: 'status',\r\n                options: []\r\n            }\r\n        ];\r\n        this.dateAdapter.setLocale('en-GB'); //dd/MM/yyyy\r\n        // this.date = new FormControl(new Date());\r\n        this.filteredFruits = this.fruitCtrl.valueChanges.pipe(startWith(null), map((fruit) => (fruit ? this._filter(fruit) : this.complaints.slice())));\r\n        this.loginDetails = JSON.parse(localStorage.getItem('loginDetails'));\r\n        if (this.loginDetails) {\r\n            this.roleID = this.loginDetails.roleID;\r\n            this.registrationID = this.loginDetails.registrationID;\r\n        }\r\n        this.myControl = new FormControl();\r\n        this.filteredOptions = this.myControl.valueChanges\r\n            .pipe(startWith(''), map(state => state ? this.filterStates(state) : this.filterPatientappointments.slice()));\r\n    }\r\n    filterStates(name) {\r\n        return this.filterPatientappointments.filter(state => state.mobile.toLowerCase().indexOf(name.toLowerCase()) === 0);\r\n    }\r\n    add(event) {\r\n        const value = (event.value || '').trim();\r\n        // Add our fruit\r\n        if (value) {\r\n            if (!this.fruits.some(e => e.toLowerCase() === value.toLowerCase())) {\r\n                this.fruits.push(value);\r\n                this.addComplaints(value);\r\n            }\r\n        }\r\n        // Clear the input value\r\n        event.chipInput.clear();\r\n        this.fruitCtrl.setValue(null);\r\n    }\r\n    addComplaints(val) {\r\n        let arr = [];\r\n        arr.push({ flag: Number(1), ComplaintName: val });\r\n        var url = 'PatientsAppointments/ComplaintsCrud/';\r\n        this.utilitiesService.CRUD(arr, url).subscribe((data) => {\r\n            if (data) {\r\n                this.complaints = data;\r\n                this.complaintsList = data;\r\n                this.filteredFruits = this.fruitCtrl.valueChanges.pipe(startWith(null), map((fruit) => (fruit ? this._filter(fruit) : this.complaints.slice())));\r\n            }\r\n            else {\r\n            }\r\n        }, () => { });\r\n    }\r\n    applyFilters() {\r\n        this.patientsappointments.filter = this.searchKey.trim().toLowerCase();\r\n    }\r\n    remove(fruit) {\r\n        const index = this.fruits.indexOf(fruit);\r\n        if (index >= 0) {\r\n            this.fruits.splice(index, 1);\r\n        }\r\n    }\r\n    selected(event) {\r\n        this.fruits.push(event.option.viewValue);\r\n        this.fruitInput.nativeElement.value = '';\r\n        this.fruitCtrl.setValue(null);\r\n    }\r\n    // private _filter(value: string): string[] {\r\n    //   \r\n    //     const filterValue = value.toLowerCase();\r\n    //     return this.complaints.filter(fruit => fruit.complaintName.toLowerCase().includes(filterValue));\r\n    // }\r\n    ngOnInit() {\r\n        this.addStaticData();\r\n        this.getDocs();\r\n        this.getComplaints();\r\n        this.getVisitReason();\r\n        this.vitalsCrud();\r\n        this.getAllAppointments();\r\n        this.getAllDoctors();\r\n        this.getServices();\r\n        //  this.getStatuses();\r\n        this.getSlots();\r\n        this.getGenders();\r\n        this.getAllAppointmentBills();\r\n        this.getDiscounts();\r\n        this.getAllPatients();\r\n        this.GetMedicineData();\r\n        this.btnText = 'Register';\r\n        this.detailData = [];\r\n        // this.isChecked=false;\r\n        // Horizontal stepper form\r\n        if (this.roleID == '1') {\r\n            this.horizontalStepperForm = this._formBuilder.group({\r\n                step1: this._formBuilder.group({\r\n                    appDate: new FormControl(new Date()),\r\n                    slot: ['', Validators.required],\r\n                    docName: ['', Validators.required],\r\n                    firstName: ['', Validators.required],\r\n                    // lastName: [''],\r\n                    mobNum: ['', Validators.required],\r\n                    gender: ['', Validators.required],\r\n                    age: ['', Validators.required],\r\n                    status: [''],\r\n                }),\r\n                step2: this._formBuilder.group({\r\n                    serviceName: ['', Validators.required],\r\n                    price: ['', Validators.required],\r\n                    discount: [''],\r\n                    amountPaid: ['', Validators.required],\r\n                    skipPayment: [''],\r\n                    netPrice: [''],\r\n                    duePayment: [''],\r\n                    modeOfPayment: ['']\r\n                }),\r\n            });\r\n        }\r\n        else {\r\n            this.horizontalStepperForm = this._formBuilder.group({\r\n                step1: this._formBuilder.group({\r\n                    appDate: new FormControl(new Date()),\r\n                    slot: ['', Validators.required],\r\n                    docName: ['', Validators.required],\r\n                    firstName: ['', Validators.required],\r\n                    // lastName: [''],\r\n                    mobNum: ['', Validators.required],\r\n                    gender: ['', Validators.required],\r\n                    age: ['', Validators.required],\r\n                    status: [''],\r\n                }),\r\n                step2: this._formBuilder.group({\r\n                    serviceName: ['', Validators.required],\r\n                    price: ['', Validators.required],\r\n                    discount: [''],\r\n                    amountPaid: [''],\r\n                    skipPayment: [''],\r\n                    netPrice: [''],\r\n                    duePayment: [''],\r\n                    modeOfPayment: ['']\r\n                }),\r\n            });\r\n        }\r\n        this.vitalsForm = this._formBuilder.group({\r\n            weight: [''],\r\n            bloodGroup: [''],\r\n            temp: [''],\r\n            serumCreatinine: [''],\r\n            bloodPressure: [''],\r\n            pulse: [''],\r\n            SpO2: [''],\r\n            BMI: [''],\r\n            visitReason: [''],\r\n            advice: [''],\r\n            nextVisit: [''],\r\n            frequency: [''],\r\n            pickADate: null,\r\n            items: this._formBuilder.array([this.createItem()]),\r\n            medicationitems: this._formBuilder.array([this.createMedicationItem()]),\r\n        });\r\n        if (this.roleID == '1') {\r\n            this.displayedColumns = [\r\n                'SL', 'Patient', 'Service', 'Doctor', 'Time', 'WaitingTime', 'Status', 'VisitCount', 'ReceiptToken', 'Billing', 'DuePayment',\r\n                'Actions', 'View'\r\n            ];\r\n        }\r\n        else if (this.roleID == '2') {\r\n            this.displayedColumns = [\r\n                'SL', 'Patient', 'Service', 'Doctor', 'Time', 'WaitingTime', 'Status', 'VisitCount',\r\n                'Vitals', 'View'\r\n            ];\r\n            this.displayedColumnsUpcoming = [\r\n                'SL',\r\n                'Patient',\r\n                'Service',\r\n                //'Doctor',\r\n                'Time',\r\n                'WaitingTime',\r\n                'VisitCount',\r\n                'Billing',\r\n                'Vitals',\r\n            ];\r\n        }\r\n        else if (this.roleID == '3') {\r\n            this.displayedColumns = [\r\n                'SL', 'Patient', 'Service', 'Time', 'WaitingTime', 'Status', 'VisitCount',\r\n                'Actions',\r\n            ];\r\n        }\r\n        else if (this.roleID == '5') {\r\n            this.displayedColumns = [\r\n                'SL', 'Patient', 'Service', 'Time', 'WaitingTime', 'Status', 'VisitCount',\r\n                'Vitals', 'View'\r\n            ];\r\n        }\r\n        // this.filteredOptions = this.myControl.valueChanges.pipe(\r\n        //     startWith(''),\r\n        //     map(value => this._filter(value)),\r\n        //   );\r\n    }\r\n    ngOnDestroy() {\r\n        localStorage.removeItem('accessToken');\r\n        localStorage.removeItem('loginDetails');\r\n    }\r\n    filterChange(filter, event) {\r\n        //let filterValues = {}\r\n        // this.filterValues[filter.columnProp] = event.target.value.trim().toLowerCase()\r\n        this.filterValues[filter.columnProp] = event.value.toLowerCase();\r\n        this.todayBookings.filter = JSON.stringify(this.filterValues);\r\n    }\r\n    getFilterObject(fullObj, key) {\r\n        const uniqChk = [];\r\n        fullObj.filter((obj) => {\r\n            if (!uniqChk.includes(obj[key])) {\r\n                uniqChk.push(obj[key]);\r\n            }\r\n            return obj;\r\n        });\r\n        return uniqChk;\r\n    }\r\n    createFilter() {\r\n        let filterFunction = function (data, filter) {\r\n            let searchTerms = JSON.parse(filter);\r\n            let isFilterSet = false;\r\n            for (const col in searchTerms) {\r\n                if (searchTerms[col].toString() !== '') {\r\n                    isFilterSet = true;\r\n                }\r\n                else {\r\n                    delete searchTerms[col];\r\n                }\r\n            }\r\n            console.log(searchTerms);\r\n            let nameSearch = () => {\r\n                let found = false;\r\n                if (isFilterSet) {\r\n                    for (const col in searchTerms) {\r\n                        searchTerms[col].trim().toLowerCase().split(' ').forEach(word => {\r\n                            if (data[col].toString().toLowerCase().indexOf(word) != -1 && isFilterSet) {\r\n                                found = true;\r\n                            }\r\n                        });\r\n                    }\r\n                    return found;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            };\r\n            return nameSearch();\r\n        };\r\n        return filterFunction;\r\n    }\r\n    addStaticData() {\r\n        this.frequencyList = [];\r\n        this.frequencyList.push({ ID: 1, frequency: 'Day' });\r\n        this.frequencyList.push({ ID: 2, frequency: 'Month' });\r\n        this.frequencyListMedication = [];\r\n        this.frequencyListMedication.push({ ID: 1, label: 'Daily' });\r\n        this.frequencyListMedication.push({ ID: 2, label: 'Weekly' });\r\n        this.frequencyListMedication.push({ ID: 1, label: 'Monthly' });\r\n        this.frequencyListMedication.push({ ID: 2, label: '2 days' });\r\n        this.frequencyListMedication.push({ ID: 2, label: '3 days' });\r\n        this.frequencyListMedication.push({ ID: 2, label: '4 days' });\r\n        // this.medicine.push({ ID: 1, label: 'AV UTI Suspension' })\r\n        // this.medicine.push({ ID: 2, label: 'Cartiva Forte Tablet' })\r\n        // this.medicine.push({ ID: 1, label: 'Rtist 300MG Tablet' })\r\n        // this.medicine.push({ ID: 2, label: 'Nise Suspension' })\r\n        this.dose = [];\r\n        this.dose.push({ ID: 2, label: '1-1-1' });\r\n        this.dose.push({ ID: 2, label: '1-0-1' });\r\n        this.dose.push({ ID: 2, label: '1-0-0' });\r\n        this.dose.push({ ID: 2, label: '0-0-1' });\r\n        this.dose.push({ ID: 2, label: '1/2-0-0 ' });\r\n        this.dose.push({ ID: 2, label: '0-1/2-0' });\r\n        this.dose.push({ ID: 2, label: '0-0-1/2' });\r\n        this.dose.push({ ID: 2, label: '1/2-1/2-1/2' });\r\n        this.when = [];\r\n        this.when.push({ ID: 2, label: 'After Food' });\r\n        this.when.push({ ID: 2, label: 'Before Food' });\r\n        this.when.push({ ID: 2, label: 'Night' });\r\n        this.duration = [];\r\n        this.duration.push({ ID: 2, label: '4 Days' });\r\n        this.duration.push({ ID: 2, label: '10 Days' });\r\n        this.duration.push({ ID: 2, label: '1 Week' });\r\n        this.duration.push({ ID: 2, label: '2 Weeks' });\r\n        this.duration.push({ ID: 2, label: '1 Months' });\r\n        this.duration.push({ ID: 2, label: '2 Months' });\r\n        this.duration.push({ ID: 2, label: '3 Months' });\r\n        this.Mode = [];\r\n        this.Mode.push({ ID: 1, label: 'Cash' });\r\n        this.Mode.push({ ID: 2, label: 'Card' });\r\n        this.Mode.push({ ID: 3, label: 'UPI' });\r\n        this.Mode.push({ ID: 4, label: 'NetBanking' });\r\n        this.BloodGroup = [];\r\n        this.BloodGroup.push({ ID: 'A+', label: 'A+' });\r\n        this.BloodGroup.push({ ID: 'A-', label: 'A-' });\r\n        this.BloodGroup.push({ ID: 'B+', label: 'B+' });\r\n        this.BloodGroup.push({ ID: 'B-', label: 'B-' });\r\n        this.BloodGroup.push({ ID: 'O+', label: 'O+' });\r\n        this.BloodGroup.push({ ID: 'O-', label: 'O-' });\r\n        this.BloodGroup.push({ ID: 'AB+', label: 'AB+' });\r\n        this.BloodGroup.push({ ID: 'AB-', label: 'AB-' });\r\n    }\r\n    onRowClicked(row) {\r\n        // this.rowClickedData=row;\r\n        this.Screen = 2;\r\n        this.detailData = row;\r\n        this.viewHistory(row);\r\n        this.fruits = [];\r\n        this.vitalsForm.reset();\r\n        if (row.vitalsID) {\r\n            this.setValues(row);\r\n        }\r\n        else {\r\n            this.patientName = row.patient + \" \" + \"(\" + row.gender + \", Age \" + row.age + \")\";\r\n            // this.vitalsForm.reset();\r\n            // this.fruits = [];\r\n            this.flag = '1';\r\n            this.PatientID = row.patientID;\r\n            this.AppointmentID = row.appointmentID;\r\n            this.vitalsID = 0;\r\n            this.items = this.vitalsForm.get('items');\r\n            this.medicationitems = this.vitalsForm.get('medicationitems');\r\n            // const arr = <FormArray>this.vitalsForm.controls.items;\r\n            // arr.controls = [];\r\n            // this.addItem();\r\n            // console.log('Row clicked: ', row);\r\n        }\r\n    }\r\n    onRowPrintPresecptionClicked(row) {\r\n        if (row.vitalsID) {\r\n            this.detailData = row;\r\n            this.setValues(row);\r\n            this.ViewPrescption();\r\n        }\r\n    }\r\n    _filter(value) {\r\n        //const filterValue = value.toLowerCase();\r\n        //return this.patientsappointments.data.filter(option => option.mobile.toLowerCase().includes(filterValue));\r\n        return this.filterPatientappointments.filter(option => option.mobile.includes(value));\r\n    }\r\n    filterAppointemnts(event) {\r\n        //in a real application, make a request to a remote url with the query and return filtered results, for demo we filter at client side\r\n        let filtered = [];\r\n        let query = event.query;\r\n        for (let i = 0; i < this.allAppointments.length; i++) {\r\n            let country = this.allAppointments[i];\r\n            if (country.mobile.toLowerCase().indexOf(query.toLowerCase()) == 0) {\r\n                filtered.push(country);\r\n            }\r\n        }\r\n        this.filteredAppointments = filtered;\r\n    }\r\n    getAllAppointments() {\r\n        this.spinner.show();\r\n        this.utilitiesService.getAllAppointments().subscribe((data) => {\r\n            if (data) {\r\n                this.allAppointments = data;\r\n                this.date = new Date();\r\n                this.date.setHours(0, 0, 0, 0);\r\n                let todayDate = this.datepipe.transform(this.date, 'dd MMM yyyy');\r\n                const dateforToday = new Date();\r\n                if (this.roleID != 2) {\r\n                    this.patientsappointments = data;\r\n                    //Today Bookings\r\n                    this.todayDataSourceBookings = data.filter((a) => a.serviceDate == todayDate);\r\n                    this.selection = new Set < this.todayDataSourceBookings > (true);\r\n                    //Future Bookings\r\n                    this.upcomingBookings = data.filter((a) => new Date(a.serviceDate) > new Date(dateforToday));\r\n                    //All Bookings\r\n                    // this.patientsappointments = data.filter((a) => new Date(a.serviceDate) < new Date(dateforToday));\r\n                    // this.filterPatientappointments =data.filter((v, i, a) => a.indexOf(v) === i); \r\n                }\r\n                else {\r\n                    // this.registrationID=this.loginDetails.registrationID;\r\n                    this.todayDataSourceBookings = data.filter((a) => a.serviceDate == todayDate && a.doctorID == this.registrationID);\r\n                    this.selection = new Set < this.todayDataSourceBookings > (true);\r\n                    //Future Bookings\r\n                    this.upcomingBookings = data.filter((a) => new Date(a.serviceDate) > new Date(dateforToday) && a.doctorID == this.registrationID);\r\n                    //All Bookings\r\n                    this.patientsappointments = data.filter((a) => a.doctorID == this.registrationID);\r\n                }\r\n                this.filterPatientappointments = data.filter((thing, i, arr) => arr.findIndex(t => t.mobile === thing.mobile && t.patient === thing.patient) === i);\r\n            }\r\n            this.todayDataSourceBookings.sort((a, b) => (a.status < b.status ? -1 : 1));\r\n            this.todayBookings = new MatTableDataSource(this.todayDataSourceBookings);\r\n            this.upcomingBookings = new MatTableDataSource(this.upcomingBookings);\r\n            this.patientsappointments = new MatTableDataSource(this.patientsappointments);\r\n            this.todayBookings.paginator = this.paginator;\r\n            this.upcomingBookings.paginator = this.upcomingPaginator;\r\n            this.patientsappointments.paginator = this.HistoryPaginator;\r\n            if (this.receiptToken > 0) {\r\n                this.date = new Date();\r\n                this.date.setHours(0, 0, 0, 0);\r\n                let todayDate1 = this.datepipe.transform(this.date, 'dd MMM yyyy');\r\n                this.todayDataSourcePrintBookings = data.filter((a) => a.receiptToken == this.receiptToken && a.serviceDate == todayDate1);\r\n                if (this.todayDataSourcePrintBookings.length > 0) {\r\n                    if (this.todayDataSourcePrintBookings[0].modeofPaymentID != 5 && (this.todayDataSourcePrintBookings[0].duePayment == null ||\r\n                        this.todayDataSourcePrintBookings[0].duePayment == '0.00')) {\r\n                        //(element.modeofPaymentID != 5) && (element.duePayment == null || element.duePayment == '0.00')\"\r\n                        this.openCompanyDetailsDialog();\r\n                    }\r\n                }\r\n                //this.printSingle();\r\n            }\r\n            this.todayBookings.filterPredicate = this.createFilter();\r\n            this.filterSelectObj.filter((o) => {\r\n                o.options = this.getFilterObject(this.todayDataSourceBookings, o.columnProp);\r\n            });\r\n            this.spinner.hide();\r\n        }, () => {\r\n            this.spinner.hide();\r\n        });\r\n    }\r\n    // Reset table filters\r\n    resetFilters() {\r\n        this.filterValues = {};\r\n        this.filterSelectObj.forEach((value, key) => {\r\n            value.modelValue = undefined;\r\n        });\r\n        this.todayBookings.filter = \"\";\r\n    }\r\n    sortData(sort) {\r\n        if (sort.active == \"patientARCID\") {\r\n            if (sort.direction == \"asc\")\r\n                this.todayDataSourceBookings.sort((a, b) => (a.patientARCID < b.patientARCID ? -1 : 1));\r\n            else\r\n                this.todayDataSourceBookings.sort((a, b) => (a.patientARCID > b.patientARCID ? -1 : 1));\r\n        }\r\n        if (sort.active == \"status\") {\r\n            if (sort.direction == \"asc\")\r\n                this.todayDataSourceBookings.sort((a, b) => (a.status < b.status ? -1 : 1));\r\n            else\r\n                this.todayDataSourceBookings.sort((a, b) => (a.status > b.status ? -1 : 1));\r\n        }\r\n        if (sort.active == \"visitCount\") {\r\n            if (sort.direction == \"asc\")\r\n                this.todayDataSourceBookings.sort((a, b) => (a.visitCount < b.visitCount ? -1 : 1));\r\n            else\r\n                this.todayDataSourceBookings.sort((a, b) => (a.visitCount > b.visitCount ? -1 : 1));\r\n        }\r\n        this.todayBookings = new MatTableDataSource(this.todayDataSourceBookings);\r\n        this.todayBookings.paginator = this.paginator;\r\n    }\r\n    getAllDoctors() {\r\n        this.utilitiesService.getAllDoctors().subscribe((data) => {\r\n            if (data) {\r\n                this.doctors = data;\r\n            }\r\n            else {\r\n            }\r\n        }, () => { });\r\n    }\r\n    getAllPatients() {\r\n        this.patientsService.GetAllPatients().subscribe((data) => {\r\n            if (data) {\r\n                ;\r\n                this.patients = data;\r\n            }\r\n            else {\r\n            }\r\n        }, () => { });\r\n    }\r\n    getServices() {\r\n        this.utilitiesService.getServices().subscribe((data) => {\r\n            if (data) {\r\n                ;\r\n                this.services = data;\r\n            }\r\n            else {\r\n            }\r\n        }, () => { });\r\n    }\r\n    getStatuses() {\r\n        this.utilitiesService.getStatuses().subscribe((data) => {\r\n            if (data) {\r\n                this.status = data;\r\n            }\r\n            else {\r\n            }\r\n        }, () => { });\r\n    }\r\n    getSlots() {\r\n        this.utilitiesService.getSlots().subscribe((data) => {\r\n            if (data) {\r\n                this.slots = data;\r\n            }\r\n            else {\r\n            }\r\n        }, () => { });\r\n    }\r\n    getGenders() {\r\n        this.utilitiesService.getAllGenders().subscribe((data) => {\r\n            if (data) {\r\n                this.genders = data;\r\n            }\r\n            else {\r\n            }\r\n        }, () => { });\r\n    }\r\n    getAllAppointmentBills() {\r\n        this.utilitiesService.getAllAppointmentBills().subscribe((data) => {\r\n            if (data) {\r\n                this.prices = data;\r\n                // this.prices.splice(0, 1);\r\n            }\r\n            else {\r\n            }\r\n        }, () => { });\r\n    }\r\n    getDiscounts() {\r\n        this.utilitiesService.getDiscounts().subscribe((data) => {\r\n            if (data) {\r\n                this.discounts = data;\r\n                // this.discounts.splice(0, 1);\r\n            }\r\n            else {\r\n            }\r\n        }, () => { });\r\n    }\r\n    onSearchClear() {\r\n        this.searchKey3 = '';\r\n        // this.applyFilter();\r\n    }\r\n    onAppointmentClear() {\r\n        this.step1.reset();\r\n        this.step2.reset();\r\n        this.onSearchClear();\r\n        // this.applyFilter();\r\n    }\r\n    onCheckboxChange(val) {\r\n        if (val.checked == true) {\r\n            this.isPriceTag = false;\r\n        }\r\n        else {\r\n            this.isPriceTag = true;\r\n        }\r\n    }\r\n    actionFormName(val) {\r\n        this.isDuePay = false;\r\n        this.slotsArr = [];\r\n        this.step1.reset();\r\n        this.step2.reset();\r\n        this.onSearchClear();\r\n        this.actionName = val;\r\n        this.action = val;\r\n        this.isPriceTag = true;\r\n        this.horizontalStepper.selectedIndex = 0;\r\n        this.step1.controls['mobNum'].enable();\r\n        this.step1.controls['appDate'].setValue(new Date());\r\n        this.appointmentButton = 'Create Appointment';\r\n        // this.horizontalStepperForm = this._formBuilder.group({\r\n        //     step1: this._formBuilder.group({\r\n        //         appDate: new FormControl(new Date()),\r\n        //  this.step2.controls['netPrice'].disable();\r\n        this.filteredOptions = this.myControl.valueChanges.pipe(startWith(''), map(value => this._filter(value)));\r\n    }\r\n    applyNetPrice(val) {\r\n        if (this.roleID == '1') {\r\n            if (val.modeofPaymentID != 5) {\r\n                var pricList = [];\r\n                var discList = [];\r\n                if (this.horizontalStepperForm.value.step2.price != \"\") {\r\n                    pricList = this.prices.filter(a => a.priceID === this.horizontalStepperForm.value.step2.price);\r\n                    this.step2.controls['netPrice'].setValue(pricList[0].price);\r\n                }\r\n                if (this.horizontalStepperForm.value.step2.discount != \"\") {\r\n                    discList = this.discounts.filter(a => a.discountID === this.horizontalStepperForm.value.step2.discount);\r\n                }\r\n                if (this.horizontalStepperForm.value.step2.price != \"\" && this.horizontalStepperForm.value.step2.discount != \"\") {\r\n                    //   \r\n                    if (discList.length > 0 && pricList.length > 0) {\r\n                        var disco = ((pricList[0].price * discList[0].discount) / 100);\r\n                        this.step2.controls['netPrice'].setValue(pricList[0].price - disco);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (this.horizontalStepperForm.value.step2.price != \"\") {\r\n                pricList = this.prices.filter(a => a.priceID === this.horizontalStepperForm.value.step2.price);\r\n                //this.step2.controls['netPrice'].setValue(pricList[0].price);\r\n                this.actualPrice = pricList[0].price;\r\n            }\r\n        }\r\n        // Number(this.horizontalStepperForm.value.step2.price);\r\n    }\r\n    displayFn(user) {\r\n        return user && user.mobile ? user.mobile : '';\r\n    }\r\n    applyFilter(val) {\r\n        val = val.trim(); // Remove whitespace\r\n        val = val.toLowerCase(); // Datasource defaults to lowercase matches\r\n        this.dataSource.filter = val;\r\n        // this.patientsappointments.filter = this.searchKey.trim().toLowerCase();\r\n        let details = this.patients.filter((a) => a.mobile.trim() == val.value.mobile.trim() && a.patient.trim().toLowerCase() == val.value.patient.trim().toLowerCase());\r\n        if (details.length > 0) {\r\n            this.action = 'Patient Exists save new appointment';\r\n            this.appointID = 0;\r\n            this.patientID = details[0].patientID;\r\n            this.step1.controls['firstName'].setValue(details[0].patient);\r\n            // this.step1.controls['lastName'].setValue(details[0].patient);\r\n            this.step1.controls['mobNum'].setValue(details[0].mobile);\r\n            if (this.actionName == 'Update Existing Appointment') {\r\n                this.step1.controls['mobNum'].disable();\r\n            }\r\n            this.step1.controls['age'].setValue(details[0].age);\r\n            this.step1.controls['gender'].setValue(details[0].genderID);\r\n        }\r\n        else {\r\n            this.action = 'New Appointment';\r\n            this.step1.controls['mobNum'].enable();\r\n        }\r\n        this.filteredOptions = this.myControl.valueChanges\r\n            .pipe(startWith(''), map(state => state ? this.filterStates(state) : this.filterPatientappointments.slice()));\r\n    }\r\n    addUpdateAppointments(val) {\r\n        ;\r\n        let arr = [];\r\n        arr.push({\r\n            AppointmentDate: val.step1.appDate,\r\n            AppointmentTime: val.step1.appTime,\r\n            Doctor: val.step1.docName,\r\n            FirstName: val.step1.firstName,\r\n            //  LastName: val.step1.lastName,\r\n            Mobile: val.step1.mobNum,\r\n            gender: val.step1.gender,\r\n            Age: val.step1.age,\r\n            Status: 7,\r\n            ServiceName: val.step2.serviceName,\r\n            Qty: val.step2.qty,\r\n            Price: val.step2.serviceName,\r\n            Discount: val.step2.disc,\r\n            Tax: val.step2.tax,\r\n            Action: this.action,\r\n        });\r\n        var UploadFile = new FormData();\r\n        UploadFile.append('UserId', JSON.stringify(arr));\r\n        this.patientsService.PostData(UploadFile).then((data) => {\r\n            ;\r\n            if (data == 'SUCCESS') {\r\n            }\r\n            else {\r\n            }\r\n        }, (err) => { });\r\n    }\r\n    get step1() {\r\n        return this.horizontalStepperForm.get('step1');\r\n    }\r\n    get step2() {\r\n        return this.horizontalStepperForm.get('step2');\r\n    }\r\n    updateSelect(val) {\r\n        this.horizontalStepper.selectedIndex = 0;\r\n        if (val.duePayment != null && val.duePayment != '0.00') {\r\n            this.updateSelectDuePay(val);\r\n        }\r\n        else {\r\n            // \r\n            this.isDuePay = false;\r\n            this.spinner.show();\r\n            this.action = 'Update Existing Appointment';\r\n            this.actionName = 'Update Appointment';\r\n            this.appointmentButton = 'Update Appointment';\r\n            this.appointID = val.appointmentID;\r\n            this.patientID = val.patientID;\r\n            this.appointmentId = val.appointmentID;\r\n            this.step1.controls['appDate'].setValue(new Date(val.appointmentDate));\r\n            this.getSlotsWithDocIDEdit(val.doctorID, val.slotTime);\r\n            this.step1.controls['docName'].setValue(val.doctorID);\r\n            this.step1.controls['firstName'].setValue(val.patientName);\r\n            // this.step1.controls['lastName'].setValue(val.patientLastName);\r\n            this.step1.controls['mobNum'].setValue(val.mobile);\r\n            this.step1.controls['age'].setValue(val.age);\r\n            // this.step1.controls['status'].setValue(val.statusID);\r\n            this.step1.controls['gender'].setValue(val.genderID);\r\n            this.step2.controls['serviceName'].setValue(val.serviceID);\r\n            this.step2.controls['price'].setValue(val.priceID);\r\n            this.step2.controls['discount'].setValue(val.discountID);\r\n            this.step2.controls['amountPaid'].setValue(val.payment);\r\n            this.step2.controls['modeOfPayment'].setValue(val.modeofPaymentID);\r\n            this.step1.controls['mobNum'].disable();\r\n            // this.step2.controls['netPrice'].disable();\r\n            this.nextDisabled = false;\r\n            if (this.roleID == '1') {\r\n                this.applyNetPrice(val);\r\n            }\r\n            this.spinner.hide();\r\n        }\r\n    }\r\n    updateSelectDuePay(val) {\r\n        // \r\n        this.isDuePay = true;\r\n        this.isPriceTag = true;\r\n        this.spinner.show();\r\n        this.action = 'Update Existing Appointment';\r\n        this.actionName = 'Update Appointment';\r\n        this.appointmentButton = 'Update Appointment';\r\n        this.appointID = val.appointmentID;\r\n        this.patientID = val.patientID;\r\n        this.appointmentId = val.appointmentID;\r\n        this.step1.controls['appDate'].setValue(new Date(val.appointmentDate));\r\n        this.getSlotsWithDocIDEdit(val.doctorID, val.slotTime);\r\n        this.step1.controls['docName'].setValue(val.doctorID);\r\n        this.step1.controls['firstName'].setValue(val.patient);\r\n        // this.step1.controls['lastName'].setValue(val.patient);\r\n        this.step1.controls['mobNum'].setValue(val.mobile);\r\n        this.step1.controls['age'].setValue(val.age);\r\n        // this.step1.controls['status'].setValue(val.statusID);\r\n        this.step1.controls['gender'].setValue(val.genderID);\r\n        this.step2.controls['serviceName'].setValue(val.serviceID);\r\n        this.step2.controls['price'].setValue(val.priceID);\r\n        this.step2.controls['discount'].setValue(val.discountID);\r\n        this.step2.controls['amountPaid'].setValue(val.payment);\r\n        this.step1.controls['mobNum'].disable();\r\n        // this.step2.controls['netPrice'].disable();\r\n        this.step2.controls['modeOfPayment'].setValue(val.modeofPaymentID);\r\n        this.step2.controls['duePayment'].setValue(val.duePayment);\r\n        this.nextDisabled = false;\r\n        if (this.roleID == '1') {\r\n            this.applyNetPrice(val);\r\n        }\r\n        this.spinner.hide();\r\n    }\r\n    // next(val)\r\n    // {\r\n    //     \r\n    //     var slot =val.step1.slot;\r\n    //     if(slot == 0)\r\n    //     {\r\n    //         alert(\"text\");\r\n    //     }\r\n    // }\r\n    addRegisterPatientAppointment(val) {\r\n        this.appt.AppointmentID = Number(this.appointID);\r\n        this.appt.registrationID = Number(val.step1.docName); //\r\n        this.appt.PatientID = Number(this.patientID); //\r\n        this.appt.ServiceID = Number(val.step2.serviceName);\r\n        //this.appt.SlotID = Number(val.step1.slot.slotID);\r\n        this.appt.Slot = (val.step1.slot.slot);\r\n        //this.appt.StatusID = Number(val.step1.status);\r\n        this.appt.StatusID = Number(7);\r\n        this.appt.ServiceDate = this.datepipe.transform(val.step1.appDate, 'd MMM yyyy');\r\n        this.appt.AppointmentBill = ('Test'); //\r\n        //var disco= ((val.step2.price * discList[0].discount)/100);\r\n        // this.step2.controls['netPrice'].setValue(pricList[0].price - disco);\r\n        if (this.isPriceTag == true) //SkipBilling\r\n         {\r\n            this.appt.modeofPaymentID = val.step2.modeOfPayment;\r\n            this.appt.PriceID = Number(val.step2.price);\r\n            if (this.roleID == '1') {\r\n                this.appt.DiscountID = Number(val.step2.discount);\r\n                if (this.appt.DiscountID == 0) {\r\n                    this.appt.DiscountID = 6;\r\n                }\r\n                this.appt.Payment = (val.step2.amountPaid); //\r\n            }\r\n            else {\r\n                this.appt.DiscountID = 6;\r\n                var pricList = this.prices.filter(a => a.priceID === this.horizontalStepperForm.value.step2.price);\r\n                this.actualPrice = pricList[0].price;\r\n                this.appt.Payment = this.actualPrice; //\r\n                this.appt.DuePayment = \"0\";\r\n            }\r\n            if (this.roleID == '1') {\r\n                var due = Number(this.horizontalStepperForm.value.step2.netPrice) - Number(Number(val.step2.amountPaid) + Number(this.horizontalStepperForm.value.step2.duePayment));\r\n                if (this.isDuePay == true) {\r\n                    //if (Number(due) == Number(this.horizontalStepperForm.value.step2.duePayment)) {\r\n                    if (due == 0) {\r\n                        this.appt.DuePayment = \"0\";\r\n                    }\r\n                    // }\r\n                    else {\r\n                        this.appt.DuePayment = this.horizontalStepperForm.value.step2.duePayment;\r\n                    }\r\n                    this.appt.Payment = Number(val.step2.amountPaid) + Number(this.horizontalStepperForm.value.step2.duePayment);\r\n                }\r\n                else {\r\n                    if (due > 0) {\r\n                        this.appt.DuePayment = due.toString();\r\n                    }\r\n                    else {\r\n                        this.appt.DuePayment = \"0\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.appt.modeofPaymentID = 5;\r\n            this.appt.PriceID = 6;\r\n            this.appt.Payment = \"0\"; //\r\n            this.appt.DuePayment = \"0\";\r\n            this.appt.DiscountID = 6;\r\n        }\r\n        this.appt.Action = this.action;\r\n        this.appt.PatientName = (val.step1.firstName); //\r\n        // this.appt.PatientLastName = (val.step1.lastName);  //\r\n        this.appt.Mobile = (val.step1.mobNum); //\r\n        this.appt.GenderID = Number(val.step1.gender);\r\n        this.appt.Age = Number(val.step1.age);\r\n        this.appt.PatientStatus = 'Booked';\r\n        let arr = [];\r\n        arr.push(this.appt);\r\n        this.receiptToken = 0;\r\n        this.utilitiesService.addRegisterPatientAppointment(this.appt).subscribe((data) => {\r\n            if (data) {\r\n                if (data > 0) {\r\n                    this.receiptToken = data;\r\n                    this._snackBar.open('Appointment Added Successfully...!!', 'OK', {\r\n                        horizontalPosition: this.horizontalPosition,\r\n                        verticalPosition: this.verticalPosition,\r\n                        \"duration\": 2000\r\n                    });\r\n                    this.ngOnInit();\r\n                    this.appt = {};\r\n                    // const dialogRef = this.dialog.open({\r\n                    //     width: '600px',\r\n                    //   });\r\n                }\r\n                else {\r\n                    this.showError('Your query is not sent, Please try after some time');\r\n                    console.log('DB Exception');\r\n                }\r\n            }\r\n        }, (error) => {\r\n            this.errorMessage = error;\r\n        }, () => { });\r\n    }\r\n    //Receipt Print\r\n    openCompanyDetailsDialog() {\r\n        const dialogConfig = new MatDialogConfig();\r\n        dialogConfig.restoreFocus = false;\r\n        dialogConfig.autoFocus = false;\r\n        dialogConfig.role = 'dialog';\r\n        dialogConfig.disableClose = true;\r\n        this.editCompanyDialogRef = this.dialog.open(this.editCompanyModal, dialogConfig);\r\n        this.editCompanyDialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed...');\r\n        });\r\n        // let printContents = document.getElementById(\"component1\").innerHTML;\r\n        //     let originalContents = document.body.innerHTML;\r\n        //     document.body.innerHTML = printContents;\r\n        //     window.print();\r\n        //    // window.close();\r\n        //     document.body.innerHTML = originalContents;\r\n    }\r\n    //Receipt Print preception\r\n    ViewPrescption() {\r\n        const dialogConfig = new MatDialogConfig();\r\n        dialogConfig.restoreFocus = false;\r\n        dialogConfig.autoFocus = false;\r\n        dialogConfig.role = 'dialog';\r\n        dialogConfig.disableClose = true;\r\n        this.presecptionModalDialogRef = this.dialog.open(this.presecptionModal, dialogConfig);\r\n        this.presecptionModalDialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed...');\r\n        });\r\n    }\r\n    closeCompanyDetailsDialog() {\r\n        this.editCompanyDialogRef.close();\r\n        //this.editCompanyDialogRef.close('Pizza!');\r\n    }\r\n    closePrecesptionDialog() {\r\n        this.presecptionModalDialogRef.close();\r\n        //this.editCompanyDialogRef.close('Pizza!');\r\n    }\r\n    print(cmpName) {\r\n        // let printContents = document.getElementById(cmpName).innerHTML;\r\n        // let originalContents = document.body.innerHTML;\r\n        // document.body.innerHTML = printContents;\r\n        // window.print();\r\n        // window.close();\r\n        // document.body.innerHTML = originalContents;\r\n        // window.print();\r\n        this.print1(cmpName);\r\n        // var printContent = document.getElementById(cmpName);\r\n        // var WinPrint = window.open('', '', 'width=1000,height=750');\r\n        // WinPrint.document.write(printContent.innerHTML);\r\n        // WinPrint.document.close();\r\n        // WinPrint.focus();\r\n        // WinPrint.print();\r\n        // WinPrint.close();\r\n        //this.ngOnInit();\r\n        //this.editCompanyDialogRef.close();\r\n        //return false;\r\n    }\r\n    printSingle() {\r\n        //this.showHideDiv= false;\r\n        // this.print1();\r\n    }\r\n    print1(cmpName) {\r\n        let printContents, popupWin;\r\n        printContents = document.getElementById(cmpName).innerHTML;\r\n        popupWin = window.open('', '_blank', 'top=10,left=100,height=900,width=1000');\r\n        //popupWin.document.open();\r\n        popupWin.document.write(`\n      <html>\n        <head>\n          <style>\n          body{  width: 99%;}\n          /**\n           * Google webfonts. Recommended to include the .woff version for cross-client compatibility.\n           */\n           @media screen {\n               @font-face {\n                   font-family: 'Source Sans Pro';\n                   font-style: normal;\n                   font-weight: 400;\n                   src: local('Source Sans Pro Regular'), local('SourceSansPro-Regular'), url(https://fonts.gstatic.com/s/sourcesanspro/v10/ODelI1aHBYDBqgeIAH2zlBM0YzuT7MdOe03otPbuUS0.woff) format('woff');\n               }\n   \n               @font-face {\n                   font-family: 'Source Sans Pro';\n                   font-style: normal;\n                   font-weight: 700;\n                   src: local('Source Sans Pro Bold'), local('SourceSansPro-Bold'), url(https://fonts.gstatic.com/s/sourcesanspro/v10/toadOcfmlt9b38dHJxOBGFkQc6VGVFSmCnC_l7QZG60.woff) format('woff');\n               }\n           }\n   \n           /**\n           * Avoid browser level font resizing.\n           * 1. Windows Mobile\n           * 2. iOS / OSX\n           */\n           body,\n           table,\n           td,\n           a {\n               -ms-text-size-adjust: 100%; /* 1 */\n               -webkit-text-size-adjust: 100%; /* 2 */\n           }\n   \n           /**\n           * Remove extra space added to tables and cells in Outlook.\n           */\n           table,\n           td {\n               mso-table-rspace: 0pt;\n               mso-table-lspace: 0pt;\n           }\n   \n           /**\n           * Better fluid images in Internet Explorer.\n           */\n           img {\n               -ms-interpolation-mode: bicubic;\n           }\n   \n           /**\n           * Remove blue links for iOS devices.\n           */\n           a[x-apple-data-detectors] {\n               font-family: inherit !important;\n               font-size: inherit !important;\n               font-weight: inherit !important;\n               line-height: inherit !important;\n               color: inherit !important;\n               text-decoration: none !important;\n           }\n   \n           /**\n           * Fix centering issues in Android 4.4.\n           */\n           div[style*=\"margin: 16px 0;\"] {\n               margin: 0 !important;\n           }\n   \n           body {\n               width: 100% !important;\n               height: 100% !important;\n               padding: 0 !important;\n               margin: 0 !important;\n           }\n   \n           /**\n           * Collapse table borders to avoid space between cells.\n           */\n           table {\n               border-collapse: collapse !important;\n           }\n   \n           a {\n               color: #1a82e2;\n           }\n   \n           img {\n               height: auto;\n               line-height: 100%;\n               text-decoration: none;\n               border: 0;\n               outline: none;\n           }\n   \n           .heading_1 {\n               background-color: #fff;\n               padding: 36px 24px 0;\n               border-top: 3px solid #d4dadf;\n               font-family: sans-serif;\n               font-size: 21px;\n               font-weight: bold;\n               letter-spacing: 0.2px;\n           }\n   \n           .tocken_no{\n               font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;\n       font-size: 16px;\n       font-weight: bold;\n           }\n            .td_style{\n               padding: 24px; \n               font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n               width: 50%;padding-bottom: 0px;\n               padding-top: 10px;\n           }\n           \n           .td_table{\n               text-align: left;\n               background-color:#D2C7BA;\n                width:100%;\n               padding: 12px;\n               font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n               font-size: 16px; line-height: 24px;\n           }\n           .td_table1{\n             text-align: left;\n              width:100%;\n               padding: 12px;\n               font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n               font-size: 16px; line-height: 24px;\n           }\n           .td_table2{\n               text-align: left; \n               width:50%;\n               padding: 12px; \n               font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n               font-size: 16px; line-height: 24px; \n               border-top: 2px dashed #D2C7BA; \n               border-bottom: 2px dashed #D2C7BA;\n           }\n           .td_table3{\n               text-align: left; \n               width:50%;\n               padding: 12px; \n               font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n               font-size: 16px; line-height: 24px; \n               border-top: 2px dashed #D2C7BA; \n               border-bottom: 2px dashed #D2C7BA;\n           }\n           .Payment_row{\n               text-align: left;\n               background-color:#ffffff;\n               padding: 24px; \n               font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n               font-size: 16px; line-height: 24px;\n               \n           }\n           .payment_Receipt{\n               text-align: left;\n               background-color: #ffffff;\n               padding: 36px 24px 0; \n               border-top: 3px solid #d4dadf;width:30%;\n           }\n           .Token_No{\n           width: 100%; \n           max-width: 600px;\n           border-top:1px solid #c1c1c1;\n           background-color: #fff;\n   \n               }\n               .Payment_method_bgmcolr{\n                   width: 600px;\n                   background-color: #fff;\n               }\n               \n               .Adress_row{\n                   text-align: left;\n                  padding-bottom: 36px; \n                   padding-left: 36px; \n                   font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n                   font-size: 16px; line-height: 24px;\n               }\n   \n          </style>\n        </head>\n    <body onload=\"window.print();window.close()\">${printContents}</body>\n      </html>`);\r\n        popupWin.document.close();\r\n    }\r\n    toggle() {\r\n        this.showHideDiv = !this.showHideDiv;\r\n    }\r\n    printPresecption(cmpName) {\r\n        let printContents, popupWin;\r\n        printContents = document.getElementById(cmpName).innerHTML;\r\n        popupWin = window.open('', '_blank', 'top=10,left=100,height=900,width=1000');\r\n        popupWin.document.write(`\n        <html>\n          <head>\n            <style>\n            body{  width: 99%;}\n            /**\n             * Google webfonts. Recommended to include the .woff version for cross-client compatibility.\n             */\n             @media screen {\n                 @font-face {\n                     font-family: 'Source Sans Pro';\n                     font-style: normal;\n                     font-weight: 400;\n                     src: local('Source Sans Pro Regular'), local('SourceSansPro-Regular'), url(https://fonts.gstatic.com/s/sourcesanspro/v10/ODelI1aHBYDBqgeIAH2zlBM0YzuT7MdOe03otPbuUS0.woff) format('woff');\n                 }\n     \n                 @font-face {\n                     font-family: 'Source Sans Pro';\n                     font-style: normal;\n                     font-weight: 700;\n                     src: local('Source Sans Pro Bold'), local('SourceSansPro-Bold'), url(https://fonts.gstatic.com/s/sourcesanspro/v10/toadOcfmlt9b38dHJxOBGFkQc6VGVFSmCnC_l7QZG60.woff) format('woff');\n                 }\n             }\n     \n             /**\n             * Avoid browser level font resizing.\n             * 1. Windows Mobile\n             * 2. iOS / OSX\n             */\n             body,\n             table,\n             td,\n             a {\n                 -ms-text-size-adjust: 100%; /* 1 */\n                 -webkit-text-size-adjust: 100%; /* 2 */\n             }\n     \n             /**\n             * Remove extra space added to tables and cells in Outlook.\n             */\n             table,\n             td {\n                 mso-table-rspace: 0pt;\n                 mso-table-lspace: 0pt;\n             }\n     \n             /**\n             * Better fluid images in Internet Explorer.\n             */\n             img {\n                 -ms-interpolation-mode: bicubic;\n             }\n     \n             /**\n             * Remove blue links for iOS devices.\n             */\n             a[x-apple-data-detectors] {\n                 font-family: inherit !important;\n                 font-size: inherit !important;\n                 font-weight: inherit !important;\n                 line-height: inherit !important;\n                 color: inherit !important;\n                 text-decoration: none !important;\n             }\n     \n             /**\n             * Fix centering issues in Android 4.4.\n             */\n             div[style*=\"margin: 16px 0;\"] {\n                 margin: 0 !important;\n             }\n     \n             body {\n                 width: 100% !important;\n                 height: 100% !important;\n                 padding: 0 !important;\n                 margin: 0 !important;\n             }\n     \n             /**\n             * Collapse table borders to avoid space between cells.\n             */\n             table {\n                 border-collapse: collapse !important;\n             }\n     \n             a {\n                 color: #1a82e2;\n             }\n     \n             img {\n                 height: auto;\n                 line-height: 100%;\n                 text-decoration: none;\n                 border: 0;\n                 outline: none;\n             }\n     \n             .heading_1 {\n                 background-color: #fff;\n                 padding: 36px 24px 0;\n                 border-top: 3px solid #d4dadf;\n                 font-family: sans-serif;\n                 font-size: 21px;\n                 font-weight: bold;\n                 letter-spacing: 0.2px;\n             }\n     \n             .tocken_no{\n                 font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;\n         font-size: 16px;\n         font-weight: bold;\n             }\n              .td_style{\n                 padding: 24px; \n                 font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n                 width: 50%;padding-bottom: 0px;\n                 padding-top: 10px;\n             }\n             \n             .td_table{\n                 text-align: left;\n                 background-color:#D2C7BA;\n                  width:100%;\n                 padding: 12px;\n                 font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n                 font-size: 16px; line-height: 24px;\n             }\n             .td_table1{\n               text-align: left;\n                width:100%;\n                 padding: 12px;\n                 font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n                 font-size: 16px; line-height: 24px;\n             }\n             .td_table2{\n                 text-align: left; \n                 width:50%;\n                 padding: 12px; \n                 font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n                 font-size: 16px; line-height: 24px; \n                 border-top: 2px dashed #D2C7BA; \n                 border-bottom: 2px dashed #D2C7BA;\n             }\n             .td_table3{\n                 text-align: left; \n                 width:50%;\n                 padding: 12px; \n                 font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n                 font-size: 16px; line-height: 24px; \n                 border-top: 2px dashed #D2C7BA; \n                 border-bottom: 2px dashed #D2C7BA;\n             }\n             .Payment_row{\n                 text-align: left;\n                 background-color:#ffffff;\n                 padding: 24px; \n                 font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n                 font-size: 16px; line-height: 24px;\n                 \n             }\n             .payment_Receipt{\n                 text-align: left;\n                 background-color: #ffffff;\n                 padding: 36px 24px 0; \n                 border-top: 3px solid #d4dadf;width:30%;\n             }\n             .Token_No{\n             width: 100%; \n             max-width: 600px;\n             border-top:1px solid #c1c1c1;\n             background-color: #fff;\n     \n                 }\n                 .Payment_method_bgmcolr{\n                     width: 600px;\n                     background-color: #fff;\n                 }\n                 \n                 .Adress_row{\n                     text-align: left;\n                    padding-bottom: 36px; \n                     padding-left: 36px; \n                     font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; \n                     font-size: 16px; line-height: 24px;\n                 }\n     \n            </style>\n          </head>\n      <body onload=\"window.print();window.close()\">${printContents}</body>\n        </html>`);\r\n        popupWin.document.close();\r\n    }\r\n    // searchPatient(val) {\r\n    //     if (this.actionName == 'New Appointment') {\r\n    //         this.applyFilter(val);\r\n    //     }\r\n    //     else if (this.actionName == 'Update Appointment') {\r\n    //         let details = this.patients.filter(\r\n    //             (a) => a.mobile == val && a.appointmentID != val.appointmentID\r\n    //         );\r\n    //         if (details.length > 0) {\r\n    //             this.mobNoAlreadyExists = true;\r\n    //             this.step1.controls['mobNum'].setValue();\r\n    //         }\r\n    //     }\r\n    // }\r\n    deleteAppointment(val) {\r\n        this.spinner.show();\r\n        this.appt.AppointmentID = Number(val.appointmentID);\r\n        this.utilitiesService.deleteAppointment(this.appt).subscribe((data) => {\r\n            if (data) {\r\n                var c = data;\r\n                this._snackBar.open('Appointment Deleted Successfully...!!', '', {\r\n                    \"duration\": 2000\r\n                });\r\n                this.spinner.hide();\r\n                this.getAllAppointments();\r\n            }\r\n        }, (error) => {\r\n            this.spinner.hide();\r\n            this.errorMessage = error;\r\n        }, () => { this.spinner.hide(); });\r\n    }\r\n    showError(msg) {\r\n        this.toastService.show(msg, {\r\n            classname: 'bg-info text-light',\r\n            delay: 4000,\r\n            autohide: true,\r\n            headertext: 'Appointment Details!',\r\n        });\r\n    }\r\n    compare(a, b, isAsc) {\r\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n    }\r\n    ngAfterViewInit() {\r\n        this.todayBookings.sort = this.sort;\r\n    }\r\n    //==================Code related to Vitals======================//\r\n    createItem() {\r\n        return this._formBuilder.group({\r\n            Image: ['', Validators.required],\r\n            fileName: ['', Validators.required],\r\n            docType: ['', Validators.required],\r\n        });\r\n    }\r\n    createItem1() {\r\n        return this._formBuilder.group({\r\n            Image: ['', Validators.required],\r\n            fileName: ['', Validators.required],\r\n            docType: ['', Validators.required],\r\n        });\r\n    }\r\n    createMedicationItem() {\r\n        return this._formBuilder.group({\r\n            medicine: [''],\r\n            dose: [''],\r\n            when: [''],\r\n            frequencyListMedication: [''],\r\n            duration: [''],\r\n            notes: [''],\r\n        });\r\n    }\r\n    createMedicationItem1() {\r\n        return this._formBuilder.group({\r\n            medicine: [''],\r\n            dose: [''],\r\n            when: [''],\r\n            frequencyListMedication: [''],\r\n            duration: [''],\r\n            notes: ['']\r\n        });\r\n    }\r\n    addItem() {\r\n        this.items = this.vitalsForm.get('items');\r\n        this.items.push(this.createItem1());\r\n    }\r\n    addMedicationItem() {\r\n        this.medicationitems = this.vitalsForm.get('medicationitems');\r\n        this.medicationitems.push(this.createMedicationItem1());\r\n    }\r\n    get employees() {\r\n        return this.vitalsForm.get('items');\r\n    }\r\n    DeleteItem(idx) {\r\n        if (idx != 0) {\r\n            this.items.removeAt(idx);\r\n        }\r\n    }\r\n    DeleteMedicationItem(idx) {\r\n        if (idx != 0) {\r\n            this.medicationitems.removeAt(idx);\r\n        }\r\n    }\r\n    validatepri1(e) {\r\n        let input;\r\n        input = String.fromCharCode(e.which);\r\n        return !!/[0-9]/.test(input);\r\n    }\r\n    rowData(val) {\r\n        this.patientName = val.patient + \" \" + \"(\" + val.gender + \", Age \" + val.age + \")\";\r\n        this.vitalsForm.reset();\r\n        this.fruits = [];\r\n        this.flag = '1';\r\n        this.PatientID = val.patientID;\r\n        this.AppointmentID = val.appointmentID;\r\n        this.vitalsID = 0;\r\n        this.items = this.vitalsForm.get('items');\r\n        this.medicationitems = this.vitalsForm.get('medicationitems');\r\n        const arr = this.vitalsForm.controls.items;\r\n        arr.controls = [];\r\n        const arr1 = this.vitalsForm.controls.medicationitems;\r\n        arr1.controls = [];\r\n        this.addItem();\r\n        this.addMedicationItem();\r\n    }\r\n    vitalsCrud() {\r\n        this.flag = '4';\r\n        let arr = [];\r\n        arr.push({ flag: Number(this.flag) });\r\n        var url = 'PatientsAppointments/VitalsCRUD/';\r\n        this.utilitiesService.CRUD(arr, url).subscribe((data) => {\r\n            if (data) {\r\n                this.vitalsList = data;\r\n                this.vitals = data;\r\n            }\r\n            else {\r\n            }\r\n        }, () => { });\r\n    }\r\n    getDocs() {\r\n        this.flag = '4';\r\n        let arr = [];\r\n        arr.push({ flag: Number(this.flag) });\r\n        var url = 'PatientsAppointments/DocsCrud/';\r\n        this.utilitiesService.CRUD(arr, url).subscribe((data) => {\r\n            if (data) {\r\n                this.docs = data;\r\n                this.docsList = data;\r\n            }\r\n            else {\r\n            }\r\n        }, () => { });\r\n    }\r\n    //     changeDetected(val)\r\n    //     {\r\n    // \r\n    //         var s=0;\r\n    //         // if(val ==0)\r\n    //         // {\r\n    //         //     // this.horizontalStepperForm.setErrors({\r\n    //         //     //     invalid: true,\r\n    //         //     //   });\r\n    //         // }\r\n    //     }\r\n    getTimeChange(val) {\r\n        if (val == \"No Slot\") {\r\n            this.isNoSlot = true;\r\n        }\r\n        else {\r\n            this.isNoSlot = false;\r\n        }\r\n    }\r\n    getSlotsWithDocID(val) {\r\n        this.selectedDate = this.step1.get('appDate').value;\r\n        var d = new Date(this.selectedDate);\r\n        var n = d.getDay();\r\n        let arr = [];\r\n        arr.push({\r\n            DoctorID: val\r\n        });\r\n        var url = 'PatientsAppointments/DoctorsAvailabilitySlots/';\r\n        this.utilitiesService.addUpdateVitals(arr, url).subscribe((data) => {\r\n            if (data) {\r\n                this.slotsArr = data;\r\n                if (this.slotsArr.length == 0) {\r\n                    //this.slotsArr[0].slot=\"No Slot\";\r\n                    this.slotsArr.push({ day: 7, rowid: 0, doctorid: 0, slot: 'No Slot' });\r\n                    this.step1.controls['slot'].setValue(this.slotsArr[0]);\r\n                    this.isNoSlot = true;\r\n                    //  this.horizontalStepperForm.setErrors({\r\n                    //                 invalid: true,\r\n                    //              });\r\n                }\r\n                else {\r\n                    let selDate = this.datepipe.transform(this.selectedDate, 'dd MMM yyyy');\r\n                    let docAppointmentsOnSelectedDate = this.allAppointments.filter(a => a.doctorID == val && this.datepipe.transform(a.serviceDate, 'dd MMM yyyy') == selDate);\r\n                    let dayOfWeekNumber = d.getDay();\r\n                    // for (var i = 0; i < this.slotsArr.length; i++) {\r\n                    for (var i = this.slotsArr.length; i >= 0; --i) {\r\n                        if (dayOfWeekNumber == 0) {\r\n                            dayOfWeekNumber = 7;\r\n                        }\r\n                        if (i == 0) {\r\n                            if (dayOfWeekNumber != this.slotsArr[0].day) {\r\n                                this.slotsArr.splice(0, 1);\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (dayOfWeekNumber != this.slotsArr[i - 1].day) {\r\n                                this.slotsArr.splice(i, 1);\r\n                            }\r\n                            else {\r\n                                if (docAppointmentsOnSelectedDate.some(e => e.slotTime === this.slotsArr[i].slot)) {\r\n                                    this.slotsArr.splice(i, 1);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n            }\r\n        }, () => { });\r\n    }\r\n    getSlotsWithDocIDEdit(val, slotTime) {\r\n        this.selectedDate = this.step1.get('appDate').value;\r\n        var d = new Date(this.selectedDate);\r\n        var n = d.getDay();\r\n        let arr = [];\r\n        arr.push({\r\n            DoctorID: val\r\n        });\r\n        var url = 'PatientsAppointments/DoctorsAvailabilitySlots/';\r\n        this.utilitiesService.addUpdateVitals(arr, url).subscribe((data) => {\r\n            if (data) {\r\n                this.slotsArr = data;\r\n                if (this.slotsArr.length == 0) {\r\n                    //this.slotsArr[0].slot=\"No Slot\";\r\n                    this.slotsArr.push({ day: 7, rowid: 0, doctorid: 0, slot: 'No Slot' });\r\n                    this.step1.controls['slot'].setValue(this.slotsArr[0]);\r\n                    //  this.horizontalStepperForm.setErrors({\r\n                    //                 invalid: true,\r\n                    //              });\r\n                    this.isNoSlot = true;\r\n                }\r\n                else {\r\n                    let selDate = this.datepipe.transform(this.selectedDate, 'dd MMM yyyy');\r\n                    //let docAppointmentsOnSelectedDate = this.allAppointments.filter(a => a.doctorID == val && this.datepipe.transform(a.serviceDate, 'dd MMM yyyy') == selDate)\r\n                    //  for (var i = 0; i < this.slotsArr.length; i++) {\r\n                    //      if (docAppointmentsOnSelectedDate.some(e => e.slotTime === this.slotsArr[i].slot)) {\r\n                    //          this.slotsArr.splice(i, 1);\r\n                    //      }\r\n                    //  }\r\n                    let sl = this.slotsArr.filter(a => a.slot == slotTime);\r\n                    this.step1.controls['slot'].setValue(sl[0]);\r\n                }\r\n            }\r\n            else {\r\n            }\r\n        }, () => { });\r\n    }\r\n    bindMobileNo() {\r\n        // this.horizontalStepperForm.step1.mobNum.setValue(this.searchKey3)\r\n        this.step1.controls['mobNum'].setValue(this.searchKey3);\r\n        // this.horizontalStepperForm.controls.step1['mobNum'].setValue(this.searchKey3);\r\n        //this.horizontalStepperForm.value.step1.mobNum=this.searchKey3\r\n    }\r\n    getComplaints() {\r\n        this.flag = '4';\r\n        let arr = [];\r\n        arr.push({ flag: Number(this.flag) });\r\n        var url = 'PatientsAppointments/ComplaintsCrud/';\r\n        this.utilitiesService.CRUD(arr, url).subscribe((data) => {\r\n            if (data) {\r\n                this.complaints = data;\r\n                this.complaintsList = data;\r\n            }\r\n            else {\r\n            }\r\n        }, () => { });\r\n    }\r\n    getVisitReason() {\r\n        this.flag = '4';\r\n        let arr = [];\r\n        arr.push({ flag: Number(this.flag) });\r\n        var url = 'PatientsAppointments/VisitReason_Crud/';\r\n        this.utilitiesService.CRUD(arr, url).subscribe((data) => {\r\n            if (data) {\r\n                this.visitReason = data;\r\n                this.visitReasonList = data;\r\n            }\r\n            else {\r\n            }\r\n        }, () => { });\r\n    }\r\n    addUpdateVitals(val) {\r\n        let itemArr = [];\r\n        for (var i = 0; i < val.items.length; i++) {\r\n            if (val.items[i].docType != null) {\r\n                itemArr.push({\r\n                    AppointmentID: this.AppointmentID,\r\n                    DocumentTypeID: val.items[i].docType.documentTypeID\r\n                    //  , DocTypeNAme: val.items[i].Image\r\n                    ,\r\n                    DocTypeNAme: \"VitalsDocs\\\\\" + val.items[i].Image.split(\"\\\\\").pop()\r\n                });\r\n            }\r\n            else {\r\n                itemArr.push({\r\n                    AppointmentID: this.AppointmentID,\r\n                    DocumentTypeID: undefined\r\n                    //  , DocTypeNAme: val.items[i].Image\r\n                    ,\r\n                    DocTypeNAme: \"VitalsDocs\\\\\"\r\n                });\r\n            }\r\n        }\r\n        let medicationArr = [];\r\n        for (var i = 0; i < val.medicationitems.length; i++) {\r\n            medicationArr.push({\r\n                vitalsID: this.AppointmentID,\r\n                medicine: val.medicationitems[i].medicine,\r\n                dose: val.medicationitems[i].dose,\r\n                when: val.medicationitems[i].when,\r\n                frequencyListMedication: val.medicationitems[i].frequencyListMedication,\r\n                duration: val.medicationitems[i].duration,\r\n                notes: val.medicationitems[i].notes,\r\n            });\r\n        }\r\n        let compArr = [];\r\n        for (var i = 0; i < this.fruits.length; i++) {\r\n            compArr.push({ ComplaintName: this.fruits[i] });\r\n        }\r\n        var DoctorCompleted = 0;\r\n        var Status = '';\r\n        if (this.roleID == 2) {\r\n            DoctorCompleted = 1;\r\n            Status = 'Completed';\r\n        }\r\n        else if (this.roleID == 5) {\r\n            Status = 'Arrived';\r\n        }\r\n        let arr = [];\r\n        arr.push({\r\n            flag: Number(this.flag),\r\n            VitalsID: Number(this.vitalsID),\r\n            BMI: val.BMI,\r\n            SpO2: val.SpO2,\r\n            BloodGroup: val.bloodGroup,\r\n            BP: val.bloodPressure,\r\n            Pulse: val.pulse,\r\n            Serum_Creatinine: val.serumCreatinine,\r\n            Temperature_F: val.temp,\r\n            VisitReasonID: Number(val.visitReason),\r\n            DoctorCompleted: Number(DoctorCompleted),\r\n            Weight: val.weight,\r\n            comp: compArr,\r\n            medicine: medicationArr,\r\n            PatientID: Number(this.PatientID),\r\n            AppointmentID: Number(this.AppointmentID),\r\n            vitalDocs: itemArr,\r\n            advice: val.advice,\r\n            nextVisit: val.nextVisit,\r\n            frequency: val.frequency,\r\n            pickADate: val.pickADate,\r\n            status: Status\r\n        });\r\n        var url = 'PatientsAppointments/VitalsCRUD/';\r\n        this.utilitiesService.addUpdateVitals(arr, url).subscribe(\r\n        //this.utilitiesService.CRUD(arr, url).subscribe(\r\n        (data) => {\r\n            if (data == '1') {\r\n                // \r\n                // this.Screen = 1;\r\n                // this.detailData.vitalId = this.afterSaveVitalId;\r\n                // this.onRowClicked(this.detailData)\r\n                this.fruits = [];\r\n                this._snackBar.open('Vitals Added Successfully...!!', 'ok', {\r\n                    horizontalPosition: this.horizontalPosition,\r\n                    verticalPosition: this.verticalPosition,\r\n                    \"duration\": 2000,\r\n                });\r\n                // this.getAllAppointmentsAfterSAve();\r\n                this.Screen = 1;\r\n                this.ngOnInit();\r\n            }\r\n            else {\r\n            }\r\n        }, () => { });\r\n    }\r\n    getAllAppointmentsAfterSAve() {\r\n        this.spinner.show();\r\n        this.utilitiesService.getAllAppointments().subscribe((data) => {\r\n            if (data) {\r\n                this.allAppointments = data;\r\n                if (this.detailData)\r\n                    this.afterSaveVitalId = this.allAppointments.filter((a) => a.appointmentID == this.detailData.appointmentID).vitalsID;\r\n                this.date = new Date();\r\n                this.date.setHours(0, 0, 0, 0);\r\n                let todayDate = this.datepipe.transform(this.date, 'dd MMM yyyy');\r\n                const dateforToday = new Date();\r\n                if (this.roleID != 2) {\r\n                    //Today Bookings\r\n                    this.todayBookings = data.filter((a) => a.serviceDate == todayDate);\r\n                    this.selection = new Set < this.todayBookings > (true);\r\n                    //Future Bookings\r\n                    this.upcomingBookings = data.filter((a) => new Date(a.serviceDate) > new Date(dateforToday));\r\n                    //All Bookings\r\n                    // this.patientsappointments = data.filter((a) => new Date(a.serviceDate) < new Date(dateforToday));\r\n                    this.patientsappointments = data;\r\n                    // this.filterPatientappointments =data.filter((v, i, a) => a.indexOf(v) === i); \r\n                }\r\n                else {\r\n                    // this.registrationID=this.loginDetails.registrationID;\r\n                    this.todayBookings = data.filter((a) => a.serviceDate == todayDate && a.doctorID == this.registrationID);\r\n                    this.selection = new Set < this.todayBookings > (true);\r\n                    //Future Bookings\r\n                    this.upcomingBookings = data.filter((a) => new Date(a.serviceDate) > new Date(dateforToday) && a.doctorID == this.registrationID);\r\n                    //All Bookings\r\n                    this.patientsappointments = data.filter((a) => a.doctorID == this.registrationID);\r\n                }\r\n                // //Today Bookings\r\n                // this.todayBookings = data.filter((a) => a.serviceDate == todayDate);\r\n                // this.selection = new Set < this.todayBookings > (true);\r\n                // //Future Bookings\r\n                // this.upcomingBookings = data.filter((a) => new Date(a.serviceDate) > new Date(dateforToday));\r\n                // //All Bookings\r\n                // // this.patientsappointments = data.filter((a) => new Date(a.serviceDate) < new Date(dateforToday));\r\n                // this.patientsappointments = data;\r\n                // // this.filterPatientappointments =data.filter((v, i, a) => a.indexOf(v) === i); \r\n                this.filterPatientappointments = data.filter((thing, i, arr) => arr.findIndex(t => t.mobile === thing.mobile && t.patient === thing.patient) === i);\r\n            }\r\n            this.todayBookings = new MatTableDataSource(this.todayBookings);\r\n            this.upcomingBookings = new MatTableDataSource(this.upcomingBookings);\r\n            this.patientsappointments = new MatTableDataSource(this.patientsappointments);\r\n            this.detailData.vitalID = this.afterSaveVitalId;\r\n            if (this.roleID == 2) {\r\n                this.onRowClickedAfterSAve(this.detailData);\r\n            }\r\n            this.todayBookings.filterPredicate = this.createFilter();\r\n            this.filterSelectObj.filter((o) => {\r\n                o.options = this.getFilterObject(this.todayDataSourceBookings, o.columnProp);\r\n            });\r\n            this.spinner.hide();\r\n        }, () => {\r\n            this.spinner.hide();\r\n        });\r\n    }\r\n    onRowClickedAfterSAve(row) {\r\n        // this.rowClickedData=row;\r\n        this.Screen = 2;\r\n        this.detailData = row;\r\n        this.viewHistory(row);\r\n        this.fruits = [];\r\n        // this.vitalsForm.reset();\r\n        if (row.vitalsID) {\r\n            this.setValues(row);\r\n        }\r\n        else {\r\n            this.patientName = row.patient + \" \" + \"(\" + row.gender + \", Age \" + row.age + \")\";\r\n            // this.vitalsForm.reset();\r\n            // this.fruits = [];\r\n            this.flag = '1';\r\n            this.PatientID = row.patientID;\r\n            this.AppointmentID = row.appointmentID;\r\n            this.vitalsID = 0;\r\n            this.items = this.vitalsForm.get('items');\r\n            this.medicationitems = this.vitalsForm.get('medicationitems');\r\n            // const arr = <FormArray>this.vitalsForm.controls.items;\r\n            // arr.controls = [];\r\n            // this.addItem();\r\n            // console.log('Row clicked: ', row);\r\n        }\r\n    }\r\n    GetComplaintsXML() {\r\n        this.spinner.show();\r\n        this.appt.VitalsID = Number(this.vitalsID);\r\n        this.utilitiesService.GetComplaintsXML(this.appt).subscribe((data) => {\r\n            if (data) {\r\n                this.fruits = [];\r\n                this.complaintsXML = data;\r\n                for (var i = 0; i < this.complaintsXML.length; i++) {\r\n                    this.fruits.push(data[i].complaintName);\r\n                }\r\n            }\r\n            else {\r\n                this.spinner.hide();\r\n            }\r\n        }, () => { this.spinner.hide(); });\r\n    }\r\n    GetDocumentsXML() {\r\n        this.appt.VitalsID = Number(this.vitalsID);\r\n        this.utilitiesService.GetDocumentsXML(this.appt).subscribe((data) => {\r\n            if (data) {\r\n                this.docsXml = data;\r\n                this.items = this.vitalsForm.get('items');\r\n                const arr = this.vitalsForm.controls.items;\r\n                arr.controls = [];\r\n                for (var i = 0; i < this.docsXml.length; i++) {\r\n                    let uom = this.docs.filter(a => a.documentTypeID == this.docsXml[i].documentTypeID);\r\n                    this.items.push(this._formBuilder.group({\r\n                        Image: [this.docsXml[i].docTypeNAme],\r\n                        fileName: [this.docsXml[i].docTypeNAme],\r\n                        docType: [uom[0]],\r\n                    }));\r\n                }\r\n                this.spinner.hide();\r\n            }\r\n            else {\r\n                this.spinner.hide();\r\n            }\r\n        }, () => { this.spinner.hide(); });\r\n    }\r\n    GetMedicineXML() {\r\n        this.appt.VitalsID = Number(this.vitalsID);\r\n        this.utilitiesService.GetMedicineXML(this.appt).subscribe((data) => {\r\n            if (data) {\r\n                this.medicineXml = data;\r\n                this.medicationitems = this.vitalsForm.get('medicationitems');\r\n                const arr = this.vitalsForm.controls.medicationitems;\r\n                arr.controls = [];\r\n                for (var i = 0; i < this.medicineXml.length; i++) {\r\n                    this.medicationitems.push(this._formBuilder.group({\r\n                        medicine: [this.medicineXml[i].medicine],\r\n                        dose: [this.medicineXml[i].dose],\r\n                        when: [this.medicineXml[i].when],\r\n                        frequencyListMedication: [this.medicineXml[i].frequencyListMedication],\r\n                        duration: [this.medicineXml[i].duration],\r\n                        notes: [this.medicineXml[i].notes]\r\n                    }));\r\n                }\r\n                this.spinner.hide();\r\n            }\r\n            else {\r\n                this.spinner.hide();\r\n            }\r\n        }, () => { this.spinner.hide(); });\r\n    }\r\n    setValues(val) {\r\n        this.flag = '2';\r\n        this.vitalsID = val.vitalsID;\r\n        this.PatientID = val.patientID;\r\n        this.AppointmentID = val.appointmentID;\r\n        this.advice = val.advice;\r\n        this.nextvisit = val.nextVisit;\r\n        this.GetComplaintsXML();\r\n        this.GetDocumentsXML();\r\n        this.GetMedicineXML();\r\n        this.vitals = this.vitalsList.filter(a => a.vitalsID === this.vitalsID);\r\n        if (this.vitals.length > 0) {\r\n            this.vitalsForm.controls['weight'].setValue(this.vitals[0].weight);\r\n            this.vitalsForm.controls['bloodGroup'].setValue(this.vitals[0].bloodGroup);\r\n            this.vitalsForm.controls['temp'].setValue(this.vitals[0].temperature_F);\r\n            this.vitalsForm.controls['serumCreatinine'].setValue(this.vitals[0].serum_Creatinine);\r\n            this.vitalsForm.controls['bloodPressure'].setValue(this.vitals[0].bp);\r\n            this.vitalsForm.controls['pulse'].setValue(this.vitals[0].pulse);\r\n            this.vitalsForm.controls['SpO2'].setValue(this.vitals[0].spO2);\r\n            this.vitalsForm.controls['BMI'].setValue(this.vitals[0].bmi);\r\n            this.vitalsForm.controls['visitReason'].setValue(this.vitals[0].visitReasonID);\r\n            this.vitalsForm.controls['advice'].setValue(this.vitals[0].advice);\r\n            this.vitalsForm.controls['nextVisit'].setValue(this.vitals[0].nextVisit);\r\n            this.vitalsForm.controls['pickADate'].setValue(this.vitals[0].pickADate);\r\n            this.vitalsForm.controls['frequency'].setValue(this.vitals[0].frequency);\r\n        }\r\n    }\r\n    detectFiles(event, item) {\r\n        //this.urls = [];\r\n        let files = event.target.files;\r\n        if (files) {\r\n            for (let file of files) {\r\n                let reader = new FileReader();\r\n                reader.onload = (e) => {\r\n                };\r\n                reader.readAsDataURL(file);\r\n            }\r\n            this.fileChange(event);\r\n        }\r\n        if (files.length >= 1) {\r\n            item.patchValue({\r\n                fileName: files[0].name,\r\n            });\r\n        }\r\n    }\r\n    //This is for Uploading Multiple Image\r\n    fileChange(event) {\r\n        let fileList = event.target.files;\r\n        let fileToUpload = fileList[0];\r\n        const formData = new FormData();\r\n        formData.append('file', fileToUpload, fileToUpload.name);\r\n        this.http.post(this.API_URL + 'PatientsAppointments/upload', formData, { reportProgress: true })\r\n            .subscribe(data => {\r\n            this.fileName = fileList[0].name;\r\n        });\r\n    }\r\n    viewHistory(val) {\r\n        let arr = [];\r\n        arr.push({ PatientID: Number(val.patientID) });\r\n        var url = 'PatientsAppointments/PatientHistory/';\r\n        this.utilitiesService.CRUD(arr, url).subscribe((data) => {\r\n            if (data) {\r\n                const dateforToday = new Date();\r\n                this.patientHistory = data;\r\n                this.patientHistory = this.patientHistory.filter((a) => new Date(a.serviceDate) <= new Date(dateforToday));\r\n                // this.patientHistoryList = data;\r\n                // this.patientHistory.splice(0, 1); -- If you need to splice today data in Previous Visit tab \r\n                // this.patientHistoryList.splice(0, 1);\r\n                for (var i = 0; i < this.patientHistory.length; i++) {\r\n                    if (this.patientHistory[i].vitalsID > 0) {\r\n                        this.GetComplaintsListXML(this.patientHistory[i].vitalsID, this.patientHistory[i]);\r\n                        this.GetMedicineListXML(this.patientHistory[i].vitalsID, this.patientHistory[i]);\r\n                        this.GetDocumentListXML(this.patientHistory[i].vitalsID, this.patientHistory[i]);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n            }\r\n        }, () => { });\r\n    }\r\n    GetComplaintsListXML(val, history) {\r\n        // this.spinner.show();\r\n        this.apptList.VitalsID = val;\r\n        this.utilitiesService.GetComplaintsXML(this.apptList).subscribe((data) => {\r\n            if (data) {\r\n                // this.fruitsDAta = [];\r\n                var s = \" \";\r\n                this.complaintsXMLList = data;\r\n                if (this.complaintsXMLList.length > 0) {\r\n                    for (var i = 0; i < this.complaintsXMLList.length; i++) {\r\n                        if (s == \"\")\r\n                            data[i].complaintName;\r\n                        else\r\n                            s = s + ',' + data[i].complaintName;\r\n                    }\r\n                    history.complaintName = s;\r\n                }\r\n            }\r\n            else {\r\n                // this.spinner.hide();\r\n            }\r\n        }, () => {\r\n        });\r\n    }\r\n    GetMedicineListXML(val, history) {\r\n        this.apptList.VitalsID = val;\r\n        this.utilitiesService.GetMedicineXML(this.apptList).subscribe((data) => {\r\n            if (data) {\r\n                this.medicineXml = data;\r\n                //this.medicationitems = this.vitalsForm.get('medicationitems') as FormArray;\r\n                // const arr = <FormArray>this.vitalsForm.controls.medicationitems;\r\n                //  arr.controls = [];\r\n                this.medicineList = [];\r\n                for (var i = 0; i < this.medicineXml.length; i++) {\r\n                    this.medicineList.push(this.medicineXml[i]);\r\n                    // this.medicationitems.push(this._formBuilder.group({\r\n                    //     medicine: [this.medicineXml[i].medicine],\r\n                    //     dose: [this.medicineXml[i].dose],\r\n                    //     when: [this.medicineXml[i].when],\r\n                    //     frequencyListMedication: [this.medicineXml[i].frequencyListMedication],\r\n                    //     duration: [this.medicineXml[i].duration],\r\n                    //     notes: [this.medicineXml[i].notes]\r\n                    // }));\r\n                }\r\n                history.medicineList = this.medicineList;\r\n                this.spinner.hide();\r\n            }\r\n            else {\r\n                this.spinner.hide();\r\n            }\r\n        }, () => { this.spinner.hide(); });\r\n    }\r\n    DownloadDocument(fileDownloadPath) {\r\n        this.fileUrl = fileDownloadPath; //\"wwwroot/SiteDocument/SiteDemo1/FileDocument.doc\" static file path\r\n        this.utilitiesService.DocumentsDownload(this.fileUrl).subscribe(async (event) => {\r\n            var _a;\r\n            let data = event;\r\n            const downloadedFile = new Blob([data.body], {\r\n                type: (_a = data.body) === null || _a === void 0 ? void 0 : _a.type\r\n            });\r\n            console.log(\"ddd\", downloadedFile);\r\n            if (downloadedFile.type != \"\") {\r\n                const a = document.createElement('a');\r\n                a.setAttribute('style', 'display:none;');\r\n                document.body.appendChild(a);\r\n                a.download = this.fileUrl;\r\n                a.href = URL.createObjectURL(downloadedFile);\r\n                a.target = '_blank';\r\n                a.click();\r\n                document.body.removeChild(a);\r\n            }\r\n        });\r\n    }\r\n    GetDocumentListXML(val, history) {\r\n        debugger;\r\n        this.apptList.VitalsID = val;\r\n        this.utilitiesService.GetDocumentsXML(this.apptList).subscribe((data) => {\r\n            debugger;\r\n            if (data) {\r\n                this.docsXml = data;\r\n                this.docsList = [];\r\n                for (var i = 0; i < this.docsXml.length; i++) {\r\n                    this.docsList.push(this.docsXml[i]);\r\n                    this.labreportfiles.push(this.docsList[i].docTypeNAme.slice(11));\r\n                }\r\n                // var splitted = this.docsList[0].docTypeNAme.slice(11);\r\n                this.fileUrl = this.docsList[0].docTypeNAme.slice(11);\r\n                // this.filename=this.docsList[0].value.docTypeNAme;\r\n                history.documents = this.docsList;\r\n                this.spinner.hide();\r\n            }\r\n            else {\r\n                this.spinner.hide();\r\n            }\r\n        }, () => { this.spinner.hide(); });\r\n    }\r\n    appoinmentLink() {\r\n        //this._router.navigate(['/Appointments']);\r\n        this.Screen = 1;\r\n        this.ngOnInit();\r\n    }\r\n    GetMedicineData() {\r\n        this.medicineService.GetMedicineList().subscribe((data) => {\r\n            if (data) {\r\n                if (this.roleID == 2) {\r\n                    this.medicinePrescepList = data;\r\n                    // this.medicinePrescepList = this.medicinePrescepList.filter((a) => a.medic == this.registrationID);\r\n                }\r\n                else\r\n                    this.medicinePrescepList = data;\r\n            }\r\n        }, () => {\r\n        });\r\n    }\r\n};\r\n__decorate([\r\n    ViewChild('fruitInput')\r\n], AppointmentsComponent.prototype, \"fruitInput\", void 0);\r\n__decorate([\r\n    ViewChild(\"myNameElem\")\r\n], AppointmentsComponent.prototype, \"myNameElem\", void 0);\r\n__decorate([\r\n    ViewChild('appointmentDrawer')\r\n], AppointmentsComponent.prototype, \"appointmentDrawer\", void 0);\r\n__decorate([\r\n    ViewChild('editCompanyModal')\r\n], AppointmentsComponent.prototype, \"editCompanyModal\", void 0);\r\n__decorate([\r\n    ViewChild('presecptionModal')\r\n], AppointmentsComponent.prototype, \"presecptionModal\", void 0);\r\n__decorate([\r\n    ViewChild('horizontalStepper')\r\n], AppointmentsComponent.prototype, \"horizontalStepper\", void 0);\r\n__decorate([\r\n    ViewChild(MatSort)\r\n], AppointmentsComponent.prototype, \"sort\", void 0);\r\n__decorate([\r\n    ViewChild(MatPaginator)\r\n], AppointmentsComponent.prototype, \"paginator\", void 0);\r\n__decorate([\r\n    ViewChild('HistoryPaginator')\r\n], AppointmentsComponent.prototype, \"HistoryPaginator\", void 0);\r\n__decorate([\r\n    ViewChild('upcomingPaginator', { static: true })\r\n], AppointmentsComponent.prototype, \"upcomingPaginator\", void 0);\r\n__decorate([\r\n    ViewChild('appointmentForm')\r\n], AppointmentsComponent.prototype, \"myForm\", void 0);\r\nAppointmentsComponent = __decorate([\r\n    Component({\r\n        selector: 'app-appointments',\r\n        templateUrl: './appointments.component.html',\r\n        styleUrls: ['./appointments.component.scss'],\r\n        encapsulation: ViewEncapsulation.None,\r\n        providers: [DatePipe],\r\n    })\r\n], AppointmentsComponent);\r\nexport { AppointmentsComponent };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}