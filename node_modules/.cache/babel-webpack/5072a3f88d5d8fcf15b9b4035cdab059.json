{"ast":null,"code":"import { BehaviorSubject, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { environment } from 'environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let MedicineService = /*#__PURE__*/(() => {\n  class MedicineService {\n    constructor(http) {\n      this.http = http;\n      this.messageSource = new BehaviorSubject(1);\n      this.currentMessage = this.messageSource.asObservable();\n      this.API_URL = environment.API_URL;\n    }\n    // getReportPatientList(this.appt): Observable<any> {\n    //     return this.http\n    //         .get<any>(this.API_URL + 'PatientsAppointments/getReportPatientList/')\n    //         .pipe(\n    //             tap((status) => console.log('status: ' + status)),\n    //             catchError(this.handleError)\n    //         );\n    // }\n    GetMedicineList() {\n      return this.http.get(this.API_URL + 'PatientsAppointments/GetMedicineList/').pipe(tap(status => console.log('status: ' + status)), catchError(this.handleError));\n    }\n    addUpdateMedicineDetails(data) {\n      debugger;\n      var url = 'PatientsAppointments/AddUpdateMedicine/';\n      return this.http.post(this.API_URL + url, data).pipe(tap(status => console.log('status: ' + status)), catchError(this.handleError));\n    }\n    //   GetMedicineXML(data) {\n    //     debugger\n    //     return this.http\n    //         .post(\n    //             this.API_URL + 'PatientsAppointments/GetMedicineXML/', data\n    //         )\n    //         .pipe(\n    //             tap((status) => console.log('status: ' + status)),\n    //             catchError(this.handleError)\n    //         );\n    // }\n    handleError(error) {\n      console.error(error);\n      return throwError(error);\n    }\n  }\n  MedicineService.ɵfac = function MedicineService_Factory(t) {\n    return new (t || MedicineService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  MedicineService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MedicineService,\n    factory: MedicineService.ɵfac\n  });\n  return MedicineService;\n})();","map":null,"metadata":{},"sourceType":"module"}