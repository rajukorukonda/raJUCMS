{"ast":null,"code":"import { BehaviorSubject, throwError } from \"rxjs\";\nimport { catchError, tap } from 'rxjs/operators';\nimport { environment } from 'environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AdmindashboardService = /*#__PURE__*/(() => {\n  class AdmindashboardService {\n    constructor(http) {\n      this.http = http;\n      this.messageSource = new BehaviorSubject(1);\n      this.currentMessage = this.messageSource.asObservable();\n      this.API_URL = environment.API_URL;\n    }\n    getDoctor(doctorID) {\n      return this.http.get(this.API_URL + \"Doctor/GetDoctor/\" + doctorID).pipe(tap(status => console.log(\"status: \" + status)), catchError(this.handleError));\n    }\n    getDoctors() {\n      return this.http.get(this.API_URL + \"Doctor/GetAllDoctors/\").pipe(tap(status => console.log(\"status: \" + status)), catchError(this.handleError));\n    }\n    handleError(error) {\n      console.error(error);\n      return throwError(error);\n    }\n  }\n  AdmindashboardService.ɵfac = function AdmindashboardService_Factory(t) {\n    return new (t || AdmindashboardService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  AdmindashboardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AdmindashboardService,\n    factory: AdmindashboardService.ɵfac\n  });\n  return AdmindashboardService;\n})();","map":null,"metadata":{},"sourceType":"module"}