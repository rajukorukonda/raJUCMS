{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { PreloadAllModules, RouterModule } from '@angular/router';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { FuseModule } from '@fuse';\nimport { FuseConfigModule } from '@fuse/services/config';\nimport { FuseMockApiModule } from '@fuse/lib/mock-api';\nimport { CoreModule } from 'app/core/core.module';\nimport { appConfig } from 'app/core/config/app.config';\nimport { mockApiServices } from 'app/mock-api';\nimport { LayoutModule } from 'app/layout/layout.module';\nimport { AppComponent } from 'app/app.component';\nimport { appRoutes } from 'app/app.routing';\nimport { UtilitiesService } from './Services/utilities.service';\nimport { ToastService } from './Services/toastservice';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../@fuse/services/config/config.module\";\nimport * as i3 from \"../@fuse/lib/mock-api/mock-api.module\";\nimport * as i4 from \"ngx-markdown\";\nconst routerConfig = {\n  preloadingStrategy: PreloadAllModules,\n  scrollPositionRestoration: 'enabled'\n};\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [UtilitiesService, ToastService],\n    imports: [[BrowserModule, BrowserAnimationsModule, RouterModule.forRoot(appRoutes, routerConfig),\n    // Fuse, FuseConfig & FuseMockAPI\n    FuseModule, FuseConfigModule.forRoot(appConfig), FuseMockApiModule.forRoot(mockApiServices),\n    // Core module of your application\n    CoreModule,\n    // Layout module of your application\n    LayoutModule,\n    // 3rd party modules that require global configuration via forRoot\n    MarkdownModule.forRoot({})]]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}