{"ast":null,"code":"import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { FuseAnimationCurves, FuseAnimationDurations } from '@fuse/animations/defaults';\n// -----------------------------------------------------------------------------------------------------\n// @ Slide in top\n// -----------------------------------------------------------------------------------------------------\nconst slideInTop = trigger('slideInTop', [state('void', style({\n  transform: 'translate3d(0, -100%, 0)'\n})), state('*', style({\n  transform: 'translate3d(0, 0, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('void => false', []),\n// Transition\ntransition('void => *', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n  }\n})]);\n// -----------------------------------------------------------------------------------------------------\n// @ Slide in bottom\n// -----------------------------------------------------------------------------------------------------\nconst slideInBottom = trigger('slideInBottom', [state('void', style({\n  transform: 'translate3d(0, 100%, 0)'\n})), state('*', style({\n  transform: 'translate3d(0, 0, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('void => false', []),\n// Transition\ntransition('void => *', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n  }\n})]);\n// -----------------------------------------------------------------------------------------------------\n// @ Slide in left\n// -----------------------------------------------------------------------------------------------------\nconst slideInLeft = trigger('slideInLeft', [state('void', style({\n  transform: 'translate3d(-100%, 0, 0)'\n})), state('*', style({\n  transform: 'translate3d(0, 0, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('void => false', []),\n// Transition\ntransition('void => *', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n  }\n})]);\n// -----------------------------------------------------------------------------------------------------\n// @ Slide in right\n// -----------------------------------------------------------------------------------------------------\nconst slideInRight = trigger('slideInRight', [state('void', style({\n  transform: 'translate3d(100%, 0, 0)'\n})), state('*', style({\n  transform: 'translate3d(0, 0, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('void => false', []),\n// Transition\ntransition('void => *', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n  }\n})]);\n// -----------------------------------------------------------------------------------------------------\n// @ Slide out top\n// -----------------------------------------------------------------------------------------------------\nconst slideOutTop = trigger('slideOutTop', [state('*', style({\n  transform: 'translate3d(0, 0, 0)'\n})), state('void', style({\n  transform: 'translate3d(0, -100%, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('false => void', []),\n// Transition\ntransition('* => void', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\n  }\n})]);\n// -----------------------------------------------------------------------------------------------------\n// @ Slide out bottom\n// -----------------------------------------------------------------------------------------------------\nconst slideOutBottom = trigger('slideOutBottom', [state('*', style({\n  transform: 'translate3d(0, 0, 0)'\n})), state('void', style({\n  transform: 'translate3d(0, 100%, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('false => void', []),\n// Transition\ntransition('* => void', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\n  }\n})]);\n// -----------------------------------------------------------------------------------------------------\n// @ Slide out left\n// -----------------------------------------------------------------------------------------------------\nconst slideOutLeft = trigger('slideOutLeft', [state('*', style({\n  transform: 'translate3d(0, 0, 0)'\n})), state('void', style({\n  transform: 'translate3d(-100%, 0, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('false => void', []),\n// Transition\ntransition('* => void', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\n  }\n})]);\n// -----------------------------------------------------------------------------------------------------\n// @ Slide out right\n// -----------------------------------------------------------------------------------------------------\nconst slideOutRight = trigger('slideOutRight', [state('*', style({\n  transform: 'translate3d(0, 0, 0)'\n})), state('void', style({\n  transform: 'translate3d(100%, 0, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('false => void', []),\n// Transition\ntransition('* => void', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\n  }\n})]);\nexport { slideInTop, slideInBottom, slideInLeft, slideInRight, slideOutTop, slideOutBottom, slideOutLeft, slideOutRight };","map":null,"metadata":{},"sourceType":"module"}