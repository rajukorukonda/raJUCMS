{"ast":null,"code":"import { TRANSLOCO_CONFIG, TRANSLOCO_LOADER, translocoConfig, TranslocoModule, TranslocoService } from '@ngneat/transloco';\nimport { APP_INITIALIZER } from '@angular/core';\nimport { environment } from 'environments/environment';\nimport { TranslocoHttpLoader } from 'app/core/transloco/transloco.http-loader';\nimport * as i0 from \"@angular/core\";\nexport let TranslocoCoreModule = /*#__PURE__*/(() => {\n  class TranslocoCoreModule {}\n  TranslocoCoreModule.ɵfac = function TranslocoCoreModule_Factory(t) {\n    return new (t || TranslocoCoreModule)();\n  };\n  TranslocoCoreModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: TranslocoCoreModule\n  });\n  TranslocoCoreModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [{\n      // Provide the default Transloco configuration\n      provide: TRANSLOCO_CONFIG,\n      useValue: translocoConfig({\n        availableLangs: [{\n          id: 'en',\n          label: 'English'\n        }, {\n          id: 'tr',\n          label: 'Turkish'\n        }],\n        defaultLang: 'en',\n        fallbackLang: 'en',\n        reRenderOnLangChange: true,\n        prodMode: environment.production\n      })\n    }, {\n      // Provide the default Transloco loader\n      provide: TRANSLOCO_LOADER,\n      useClass: TranslocoHttpLoader\n    }, {\n      // Preload the default language before the app starts to prevent empty/jumping content\n      provide: APP_INITIALIZER,\n      deps: [TranslocoService],\n      useFactory: translocoService => () => {\n        const defaultLang = translocoService.getDefaultLang();\n        translocoService.setActiveLang(defaultLang);\n        return translocoService.load(defaultLang).toPromise();\n      },\n      multi: true\n    }],\n    imports: [TranslocoModule]\n  });\n  return TranslocoCoreModule;\n})();","map":null,"metadata":{},"sourceType":"module"}