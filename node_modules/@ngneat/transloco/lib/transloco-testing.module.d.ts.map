{"version":3,"file":"transloco-testing.module.d.ts","sources":["transloco-testing.module.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA,sDAAsD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wCAsDjD;AACL;AACA;;;;AACA","sourcesContent":["import { InjectionToken, ModuleWithProviders } from '@angular/core';\nimport { TranslocoLoader } from './transloco.loader';\nimport { HashMap, Translation } from './types';\nimport { Observable } from 'rxjs';\nimport { TranslocoConfig } from './transloco.config';\nimport { TranslocoService } from './transloco.service';\nexport interface TranslocoTestingOptions {\n    translocoConfig?: Partial<TranslocoConfig>;\n    preloadLangs?: boolean;\n    langs?: HashMap<Translation>;\n}\nexport declare class TestingLoader implements TranslocoLoader {\n    private langs;\n    constructor(langs: HashMap<Translation>);\n    getTranslation(lang: string): Observable<Translation> | Promise<Translation>;\n}\nexport declare function initTranslocoService(service: TranslocoService, langs: HashMap<Translation>, options: TranslocoTestingOptions): () => Promise<void> | Promise<HashMap<any>[]>;\nexport declare class TranslocoTestingModule {\n    static forRoot(options: TranslocoTestingOptions): {\n        ngModule: typeof TranslocoTestingModule;\n        providers: (({\n            provide: InjectionToken<{}>;\n            useClass: typeof import(\"./transloco.transpiler\").DefaultTranspiler;\n            deps: InjectionToken<{}>[];\n        } | {\n            provide: InjectionToken<{}>;\n            useClass: typeof import(\"./transloco-missing-handler\").DefaultHandler;\n            deps?: undefined;\n        } | {\n            provide: InjectionToken<{}>;\n            useClass: typeof import(\"./transloco.interceptor\").DefaultInterceptor;\n            deps?: undefined;\n        } | {\n            provide: InjectionToken<import(\"./transloco-fallback-strategy\").TranslocoFallbackStrategy>;\n            useClass: typeof import(\"./transloco-fallback-strategy\").DefaultFallbackStrategy;\n            deps: InjectionToken<{}>[];\n        })[] | {\n            provide: InjectionToken<HashMap<HashMap<any>>>;\n            useValue: HashMap<HashMap<any>>;\n            useFactory?: undefined;\n            deps?: undefined;\n            multi?: undefined;\n            useClass?: undefined;\n        } | {\n            provide: InjectionToken<TranslocoTestingOptions>;\n            useValue: TranslocoTestingOptions;\n            useFactory?: undefined;\n            deps?: undefined;\n            multi?: undefined;\n            useClass?: undefined;\n        } | {\n            provide: InjectionToken<(() => void)[]>;\n            useFactory: typeof initTranslocoService;\n            deps: (typeof TranslocoService | InjectionToken<HashMap<HashMap<any>>>)[];\n            multi: boolean;\n            useValue?: undefined;\n            useClass?: undefined;\n        } | {\n            provide: InjectionToken<HashMap<any>>;\n            useClass: typeof TestingLoader;\n            useValue?: undefined;\n            useFactory?: undefined;\n            deps?: undefined;\n            multi?: undefined;\n        } | {\n            provide: InjectionToken<{}>;\n            useValue: TranslocoConfig;\n            useFactory?: undefined;\n            deps?: undefined;\n            multi?: undefined;\n            useClass?: undefined;\n        })[];\n    };\n    /** @deprecated - use forRoot instead */\n    static withLangs(langs: HashMap<Translation>, config?: Partial<TranslocoConfig>, options?: TranslocoTestingOptions): ModuleWithProviders<TranslocoTestingModule>;\n}\n"]}