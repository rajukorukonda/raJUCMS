{"version":3,"file":"transloco.transpiler.d.ts","sources":["transloco.transpiler.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { InjectionToken, Injector } from '@angular/core';\nimport { HashMap, Translation } from './types';\nimport { TranslocoConfig } from './transloco.config';\nexport declare const TRANSLOCO_TRANSPILER: InjectionToken<{}>;\nexport interface TranslocoTranspiler {\n    transpile(value: any, params: HashMap, translation: HashMap): any;\n    onLangChanged?(lang: string): void;\n}\nexport declare class DefaultTranspiler implements TranslocoTranspiler {\n    protected interpolationMatcher: RegExp;\n    constructor(userConfig?: TranslocoConfig);\n    transpile(value: any, params: HashMap, translation: Translation): any;\n    /**\n     *\n     * @example\n     *\n     * const en = {\n     *  a: {\n     *    b: {\n     *      c: \"Hello {{ value }}\"\n     *    }\n     *  }\n     * }\n     *\n     * const params =  {\n     *  \"b.c\": { value: \"Transloco \"}\n     * }\n     *\n     * service.selectTranslate('a', params);\n     *\n     * // the first param will be the result of `en.a`.\n     * // the second param will be `params`.\n     * parser.transpile(value, params, {});\n     *\n     *\n     */\n    protected handleObject(value: any, params: HashMap, translation: Translation): any;\n    protected handleArray(value: string[], params: HashMap, translation: Translation): any[];\n}\nexport interface TranslocoTranspilerFunction {\n    transpile(...args: string[]): any;\n}\nexport declare function getFunctionArgs(argsString: string): string[];\nexport declare class FunctionalTranspiler extends DefaultTranspiler implements TranslocoTranspiler {\n    private injector;\n    constructor(injector: Injector);\n    transpile(value: any, params: HashMap, translation: Translation): any;\n}\n"]}